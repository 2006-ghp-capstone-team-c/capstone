{"version":3,"sources":["redux/API_URL.js","redux/conditions.js","redux/singleCondition.js","redux/auth.js","redux/users.js","redux/medications.js","redux/singleMedication.js","redux/documents.js","redux/doctors.js","redux/singleDoctor.js","redux/dcCondition.js","redux/dcDoctor.js","redux/dcMedication.js","redux/score.js","store.js","components/Home.js","components/Signup.js","components/Login.js","components/AddConditionForm.js","components/UpdateCondition.js","components/SingleCondition.js","components/Conditions.js","components/AddMedication.js","components/RemoveMedication.js","components/UpdateMedication.js","components/SingleMedication.js","components/Medications.js","components/DCMedicationForm.js","components/DCConditionForm.js","components/DCDoctorForm.js","components/DailyCheckin.js","components/Documents.js","components/UploadDocuments.js","components/Profile.js","components/AddDoctor.js","components/UpdateDoctor.js","components/SingleDoctor.js","components/AllDoctors.js","components/Navbar.js","components/BarChartCondition.js","components/Root.js","components/Footer.js","serviceWorker.js","index.js"],"names":["API_URL","initialState","getAllConditions","conditions","type","addCondition","condition","deleteCondition","id","updateAllConditions","getAllConditionsThunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_yield$axios$get","data","wrap","_context","prev","next","axios","get","concat","sent","t0","console","log","stop","_x","apply","this","arguments","updateCondition","getSingleConditionThunk","SET_CURRENT_USER","REMOVE_CURRENT_USER","setCurrentUser","user","logout","history","_ref2","_callee2","_context2","delete","push","error","_x2","setUserAndRedirect","INITIALIZE","CREATE","REMOVE","UPDATE","newMedication","medication","removeMedication","updateAllMeds","updateSingleMedication","fetchMedId","medName","idGroup","rxnormId","medId","uploadDocuments","documents","addDoctor","doctor","deleteDoctor","updateAllDoctors","addDoctorThunk","_yield$axios$post","post","getAllDoctorsThunk","_ref3","_callee3","_context3","doctors","_x3","updateDoctor","fetchSingleDoctor","reducer","combineReducers","users","length","undefined","action","toConsumableArray","filter","map","currentUser","state","updated","objectSpread","name","diagnosed","typeOfPain","address","medications","med","dosage","frequency","rxcui","firstName","lastName","doctorType","score","appointment","chart","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","connect","ownProps","handleClick","props","react_default","createElement","onClick","handleSubmit","event","preventDefault","target","value","email","password","credentials","signup","onSubmit","placeholder","required","href","login","react_router_dom","to","AddConditionForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","userId","handleChange","bind","assertThisInitialized","evt","_this$setState","setState","defineProperty","className","onChange","Component","UpdateCondition","_yield$axios$put","put","updateSingleConditionThunk","SingleCondition","clicked","handleDelete","getSingleCondition","closeTheModal","_this2","components_UpdateCondition","removeCondition","_yield$axios$get2","deleteConditionThunk","Conditions","showModal","showDocModal","openModal","openDocModal","closeModal","closeDocModal","lib_default","isOpen","contentLabel","components_AddConditionForm","key","components_SingleCondition","addConditionThunk","AddMedication","addMedication","htmlFor","React","RemoveMedication","remove","UpdateMedication","update","close","SingleMedication","_React$Component","handleUpdate","handleClose","inherits","createClass","selected","loadSingleMedication","err","updatedMedication","handleOpen","UpdateMedication_UpdateMedication","handleCancel","fetchMedication","updateMedication","Medications","add","handleSelect","handleAdd","handleRemove","fetchMedications","_this$props","Fragment","components_RemoveMedication","components_AddMedication","components_SingleMedication","deleteMedication","DCMedicationForm","isClicked","notes","medicationId","eachMed","checked","conditionId","DCConditionForm","rate","date","Date","addScore","DCDoctorForm","time","doctorId","addAppointment","DailyCheckin","getScore","getAllDoctors","getMedication","components_DCConditionForm","components_DCDoctorForm","components_DCMedicationForm","appointmentDate","Documents","_Component","fetchDocuments","doc","i","src","imageUrl","alt","width","height","mapDispatch","UploadDocuments","description","files","changeHandler","uploadHandler","fileInput","createRef","_componentDidMount","e","Array","from","current","formData","FormData","values","append","_this$state","docInfo","uploadDocumentsThunk","ref","multiple","_props$currentUser","components_Documents","components_UploadDocuments","userid","AddDoctor","_useState","useState","_useState2","slicedToArray","setFirstName","_useState3","_useState4","setLastName","_useState5","_useState6","setAddress","_useState7","_useState8","setDoctorType","payload","addNewDoctor","newDoctor","updatedDoctor","updateSingleDoctor","SingleDoctor","getAppointments","_handleDelete","appointments","docApps","oneapp","components_UpdateDoctor","deleteDoctorThunk","AllDoctors","components_SingleDoctor","Navbar","BarChart","getChart","info","eachScore","drawBarChart","svgCanvas","d3","refs","canvas","attr","style","selectAll","enter","datapoint","iteration","dataPoint","text","slice","Root","fetchInitialData","isLoggedIn","react_router","path","component","Login","Signup","components_Navbar","exact","Home","Profile","BarChartCondition","withRouter","_ref4","_callee4","_context4","_x4","Footer","index_esm","color","size","ai_index_esm","Boolean","window","location","hostname","match","ReactDOM","render","es","components_Root","components_Footer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0PAAaA,EAAU,yCCEjBC,EAAe,GAMfC,EAAmB,SAAAC,GACvB,MAAO,CACLC,KANuB,qBAOvBD,eAGEE,EAAe,SAAAC,GACnB,MAAO,CACLF,KAXkB,gBAYlBE,cAGEC,EAAkB,SAAAC,GACtB,MAAO,CACLJ,KAhBqB,mBAiBrBI,OAGSC,EAAsB,SAACD,EAAIF,GACtC,MAAO,CACHF,KArByB,yBAsBzBI,KACAF,cAGOI,EAAwB,WACnC,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,qBAFlB,OAAAmB,EAAAG,EAAAM,KAEIR,EAFJD,EAEIC,KACPF,EAAShB,EAAiBkB,IAHvBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAKHQ,QAAQC,IAART,EAAAO,IALG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,YC/BInC,EAAe,GAWfoC,EAAkB,SAAA/B,GACtB,MAAO,CACLF,KAVqB,mBAWrBE,cAGSgC,EAA0B,SAAA9B,GACrC,sBAAAG,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,oBAAA2B,OAAuCnB,IAFzD,OAAAW,EAAAG,EAAAM,KAEIR,EAFJD,EAEIC,KACPF,EAfG,CACLd,KALyB,uBAMzBE,UAa8Bc,IAHzBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAKHQ,QAAQC,IAART,EAAAO,IALG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,IChBIG,EAAmB,mBACnBC,EAAsB,sBAItBC,EAAiB,SAAAC,GAAI,MAAK,CAAEtC,KAAMmC,EAAkBG,SAqBnD,IAYMC,EAAS,SAAAC,GACpB,sBAAAC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAM5B,GAAN,OAAAJ,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEGC,IAAMuB,OAAN,GAAArB,OAAgB3B,EAAhB,uBAFH,OAGHkB,EApC2B,CAAEd,KAAMoC,IAqCnCI,EAAQK,KAAK,UAJVF,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAMHjB,QAAQoB,MAAM,8BAAdH,EAAAlB,IANG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,IAuCF,SAASgB,EAAmBV,EAAME,EAAS1B,GACzCY,QAAQC,IAAI,sBACZD,QAAQC,IAAIW,GACZxB,EAASuB,EAAeC,IACxBE,EAAQK,KAAR,YCnFF,IAAMI,EAAa,mBACbC,EAAS,cACFC,EAAS,cAChBC,EAAS,cAkCR,ICjCDvD,EAAe,GAOfwD,EAAgB,SAACC,GAAD,MAAiB,CACrCtD,KAZqB,iBAarBsD,eAGIC,EAAmB,SAACnD,GAAD,MAAS,CAChCJ,KAhBwB,oBAiBxBI,OAGWoD,EAAgB,SAACpD,EAAIkD,GAAL,MAAqB,CAChDtD,KApBsB,kBAqBtBI,KACAkD,eCpBIzD,EAAe,GAYf4D,EAAyB,SAACrD,EAAIkD,GAAL,MAAqB,CAClDtD,KAhByB,qBAiBzBI,KACAkD,eAGWI,EAAa,SAACC,GACzB,sBAAApD,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoBC,IAAMC,IAAN,kDAAAC,OAC6BoC,IAHjD,OAAA5C,EAAAG,EAAAM,KAEKR,EAFLD,EAEKC,KAGRU,QAAQC,IAAIX,EAAK4C,QAAQC,SAAS,IAClC/C,EAlBuB,CAC3Bd,KAVa,SAWb8D,MAgBsB9C,EAAK4C,QAAQC,SAAS,KANrC3C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAQHQ,QAAQC,IAART,EAAAO,IARG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,ICdI+B,EAAkB,SAACC,GAAD,MAAgB,CAAEhE,KANjB,mBAMyCgE,cCX5DnE,EAAe,GASfoE,EAAY,SAAAC,GACd,MAAO,CACHlE,KARW,aASXkE,WAGFC,EAAe,SAAA/D,GACjB,MAAO,CACHJ,KAZc,gBAadI,OAWKgE,EAAmB,SAAChE,EAAI8D,GACjC,MAAO,CACHlE,KAzBoB,sBA0BpBI,KACA8D,WAKKG,EAAiB,SAACH,GAC3B,sBAAA3D,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAwD,EAAAtD,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEsBC,IAAMkD,KAAK,eAAgBL,GAFjD,OAAAI,EAAApD,EAAAM,KAEOR,EAFPsD,EAEOtD,KACNF,EAASmD,EAAUjD,IAHpBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAKCQ,QAAQC,IAART,EAAAO,IALD,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,IAqBSwC,EAAqB,WAC9B,sBAAAC,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8D,EAAM5D,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,EAEwBC,IAAMC,IAAI,iBAFlC,OAAAP,EAAA4D,EAAAnD,KAESR,EAFTD,EAESC,KACRF,EAzCD,CACHd,KApBgB,kBAqBhB4E,QAuC2B5D,IAHxB2D,EAAAvD,KAAA,gBAAAuD,EAAAxD,KAAA,EAAAwD,EAAAlD,GAAAkD,EAAA,SAKCjD,QAAQC,IAARgD,EAAAlD,IALD,yBAAAkD,EAAA/C,SAAA8C,EAAA,iBAAP,gBAAAG,GAAA,OAAAJ,EAAA3C,MAAAC,KAAAC,YAAA,IC5DEnC,EAAe,GAeRiF,GAAe,SAACZ,GACzB,MAAO,CACHlE,KAbqB,uBAcrBkE,WAMKa,GAAoB,SAAC3E,GAE9B,OADAsB,QAAQC,IAAI,oBACZ,eAAApB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwBC,IAAMC,IAAN,gBAAAC,OAA0BnB,IAFlD,OAAAW,EAAAG,EAAAM,KAESR,EAFTD,EAESC,KACRU,QAAQC,IAAI,wBAAyBX,GACrCF,EAtBD,CACHd,KANkB,oBAOlBkE,OAoB6BlD,IAJ1BE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAMCQ,QAAQC,IAART,EAAAO,IAND,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,IC3BEnC,GAAe,GCAfA,GAAe,GCAfA,GAAe,GCAfA,GAAe,GCefmF,GAAUC,0BAAgB,CAC9BC,MVAa,WAAqC,IAApBA,EAAoBlD,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAZ,GAAIqD,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EAClD,OAAQC,EAAOrF,MACb,KAAKiD,EACH,OAAOoC,EAAOH,MAEhB,KAAKhC,EACH,OAAQmC,EAAO/C,MAAff,OAAAf,OAAA8E,EAAA,EAAA9E,CAAwB0E,IAE1B,KAAK/B,EACH,OAAO+B,EAAMK,OAAO,SAAAjD,GAAI,OAAIA,EAAKlC,KAAOiF,EAAOjF,KAEjD,KAAKgD,EACH,OAAO8B,EAAMM,IAAI,SAAAlD,GAAI,OACnB+C,EAAO/C,KAAKlC,KAAOkC,EAAKlC,GAAKiF,EAAO/C,KAAOA,IAG/C,QACE,OAAO4C,IUhBXO,YXJa,WAA2C,IAA1BA,EAA0BzD,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAZ,GAAIqD,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACxD,OAAQC,EAAOrF,MAEb,KAAKmC,EACH,OAAOkD,EAAO/C,KAEhB,KAAKF,EACH,MAAO,GAET,QACE,OAAOqD,IWLX1F,Wb8Ca,WAAuC,IAA9B2F,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,EAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACpD,OAAQC,EAAOrF,MACb,IAhEuB,qBAiErB,OAAOqF,EAAOtF,WAChB,IAjEkB,gBAkEhB,SAAAwB,OAAAf,OAAA8E,EAAA,EAAA9E,CAAWkF,GAAX,CAAkBL,EAAOnF,YAC3B,IAlEqB,mBAmEnB,OAAOwF,EAAMH,OAAO,SAAArF,GAAS,OAAIA,EAAUE,KAAOiF,EAAOjF,KAC3D,IAnE2B,yBAoEzB,OAAOI,OAAA8E,EAAA,EAAA9E,CAAIkF,GAAOF,IAAI,SAACtF,GACnB,OAAIA,EAAUE,KAAOiF,EAAOjF,GACjBiF,EAAOnF,UAEPA,IAGjB,QACE,OAAOwF,Ia9DXxF,UZ2Ba,WAAuC,IAA9BwF,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,EAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACpD,OAAQC,EAAOrF,MACb,IA7CyB,uBA8CvB,OAAOqF,EAAOnF,UAChB,IA9CqB,mBA+CnB,IAAIyF,EAAOnF,OAAAoF,EAAA,EAAApF,CAAA,GAAQkF,EAAMxF,WAIzB,OAHAyF,EAAQE,KAAOR,EAAOnF,UAAU2F,KAChCF,EAAQG,UAAYT,EAAOnF,UAAU4F,UACrCH,EAAQI,WAAaV,EAAOnF,UAAU8F,QAC/BL,EACT,QACE,OAAOD,IYrCXO,YT2Ca,WAAwC,IAA9BP,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,EAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACrD,OAAQC,EAAOrF,MACb,IAhEoB,kBAiElB,OAAOqF,EAAOY,YAChB,IAjEmB,iBAkEjB,SAAA1E,OAAAf,OAAA8E,EAAA,EAAA9E,CAAWkF,GAAX,CAAkBL,EAAO/B,aAC3B,IAlEsB,oBAmEpB,OAAOoC,EAAMH,OAAO,SAACW,GAAD,OAASA,EAAI9F,KAAOiF,EAAOjF,KACjD,IAnEoB,kBAoElB,OAAOI,OAAA8E,EAAA,EAAA9E,CAAIkF,GAAOF,IAAI,SAAClC,GACrB,OAAIA,EAAWlD,KAAOiF,EAAOjF,GACpBiF,EAAO/B,WAEPA,IAGb,QACE,OAAOoC,IS3DXpC,WR6Ca,WAAwC,IAA9BoC,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,EAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACrD,OAAQC,EAAOrF,MACb,IAlEmB,iBAmEjB,OAAOQ,OAAAoF,EAAA,EAAApF,CAAA,GAAKkF,EAAZ,CAAmBpC,WAAY+B,EAAO/B,aACxC,IAnEuB,qBAoErB,IAAIqC,EAAOnF,OAAAoF,EAAA,EAAApF,CAAA,GAAQkF,GAInB,OAHAC,EAAQE,KAAOR,EAAO/B,WAAWuC,KACjCF,EAAQQ,OAASd,EAAO/B,WAAW6C,OACnCR,EAAQS,UAAYf,EAAO/B,WAAW8C,UAC/B5F,OAAAoF,EAAA,EAAApF,CAAA,GAAKkF,EAAZ,CAAmBpC,WAAYqC,IACjC,IAxEW,SAyET,OAAOnF,OAAAoF,EAAA,EAAApF,CAAA,GAAKkF,EAAZ,CAAmBW,MAAOhB,EAAOvB,QACnC,QACE,OAAO4B,IQzDX1B,UPiBa,WAA8B,IAApB0B,EAAoB1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAZ,GAAIqD,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EAC3C,OAAQC,EAAOrF,MAEb,IAtCkB,gBAuChB,OAAOqF,EAAOrB,UAEhB,IAxCqB,mBAyCnB,OAAO0B,EAAMnE,OAAO8D,EAAOrB,WAE7B,QACE,OAAO0B,IO1BXd,QNkDa,WAAwC,IAA9Bc,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,EAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACnD,OAAQC,EAAOrF,MACX,IAvEgB,kBAwEZ,OAAOqF,EAAOT,QAClB,IAxEc,gBAyEV,OAAOc,EAAMH,OAAO,SAAArB,GAAM,OAAIA,EAAO9D,KAAOiF,EAAOjF,KACvD,IA5EW,aA6EP,SAAAmB,OAAAf,OAAA8E,EAAA,EAAA9E,CAAWkF,GAAX,CAAkBL,EAAOnB,SAC7B,IA3EoB,sBA4EhB,OAAO1D,OAAA8E,EAAA,EAAA9E,CAAIkF,GAAOF,IAAI,SAACtB,GACnB,OAAIA,EAAO9D,KAAOiF,EAAOjF,GACdiF,EAAOnB,OAEPA,IAGnB,QACI,OAAOwB,IMlEjBxB,OL6Ba,WAAwC,IAA9BwB,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,EAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACnD,OAAQC,EAAOrF,MACX,IAnDkB,oBAoDd,OAAOqF,EAAOnB,OAClB,IApDqB,uBAqDjB,IAAIyB,EAAOnF,OAAAoF,EAAA,EAAApF,CAAA,GAAQkF,EAAMxB,QAKzB,OAJAyB,EAAQW,UAAYjB,EAAOnB,OAAOoC,UAClCX,EAAQY,SAAWlB,EAAOnB,OAAOqC,SACjCZ,EAAQK,QAAUX,EAAOnB,OAAO8B,QAChCL,EAAQa,WAAanB,EAAOnB,OAAOsC,WAC5Bb,EACX,QACI,OAAOD,IKxCjBe,MJca,WAAuC,IAA9Bf,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,GAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACpD,OAAQC,EAAOrF,MACb,IAvCc,YAwCZ,OAAOqF,EAAOoB,MAChB,IAxCc,YAyCZ,SAAAlF,OAAAf,OAAA8E,EAAA,EAAA9E,CACKkF,GADL,CAEEL,EAAOoB,QAEX,QACE,OAAOf,IIvBXgB,YHaa,WAAwC,IAA9BhB,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,GAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACrD,OAAQC,EAAOrF,MACb,IAvCoB,kBAwClB,OAAOqF,EAAOqB,YAChB,IAxCoB,kBAyClB,SAAAnF,OAAAf,OAAA8E,EAAA,EAAA9E,CACKkF,GADL,CAEEL,EAAOqB,cAEX,QACE,OAAOhB,IGtBXQ,IFYa,WAAuC,IAA9BR,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,GAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACpD,OAAQC,EAAOrF,MACb,IAvCa,WAwCX,OAAOqF,EAAOa,IAChB,IAxCa,WAyCX,SAAA3E,OAAAf,OAAA8E,EAAA,EAAA9E,CACKkF,GADL,CAEEL,EAAOa,MAEX,QACE,OAAOR,IErBXiB,MDPa,WAAuC,IAA9BjB,EAA8B1D,UAAAmD,OAAA,QAAAC,IAAApD,UAAA,GAAAA,UAAA,GAAtBnC,GAAcwF,EAAQrD,UAAAmD,OAAA,EAAAnD,UAAA,QAAAoD,EACpD,OAAQC,EAAOrF,MACb,IArBc,YAsBZ,OAAOqF,EAAOsB,MAChB,QACE,OAAOjB,MCKPkB,GAAaC,8BACjBC,0BAAgBC,IAAiBC,uBAAa,CAAEC,WAAW,MAI9CC,GAFDC,sBAAYnC,GAAS4B,uDCTpBQ,eARE,SAAA7G,GAAA,MAAsB,CAAEkF,YAAxBlF,EAAGkF,cAEA,SAAC3E,EAAUuG,GAAX,MAAyB,CAC3CC,YAAa,WACXxG,EAASyB,EAAO8E,EAAS7E,aAId4E,CArBF,SAACG,GACZ7F,QAAQC,IAAI,aADU,IAEd2E,EAAciB,EAAM9B,YAApBa,UACAgB,EAAgBC,EAAhBD,YACR,OACEE,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,qBAAanB,EAAb,KACAkB,EAAA7G,EAAA8G,cAAA,SACED,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,SAAS0H,QAASJ,GAA/B,eCkEOF,eAAQ,KAZH,SAACtG,EAAUuG,GAAX,MAAyB,CAC3CM,aAAc,SAAAC,GACZA,EAAMC,iBACN,IAAMvB,EAAYsB,EAAME,OAAOxB,UAAUyB,MACnCxB,EAAWqB,EAAME,OAAOvB,SAASwB,MACjCC,EAAQJ,EAAME,OAAOE,MAAMD,MAC3BE,EAAWL,EAAME,OAAOG,SAASF,MAEvCjH,EbpBkB,SAACoH,EAAa1F,GAClC,sBAAAiC,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8D,EAAM5D,GAAN,OAAAJ,EAAAC,EAAAM,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,EAEoBC,IAAMkD,KAAN,GAAAhD,OAAc3B,EAAd,sBAA2CsI,GAF/D,OAIHlF,EAJG2B,EAAAnD,KAEKR,KAEiBwB,EAAS1B,GAJ/B6D,EAAAvD,KAAA,gBAAAuD,EAAAxD,KAAA,EAAAwD,EAAAlD,GAAAkD,EAAA,SAMHjD,QAAQoB,MAAR,mBAAAvB,OAAiC2G,EAAYF,MAA7C,oBAAArD,EAAAlD,IANG,yBAAAkD,EAAA/C,SAAA8C,EAAA,iBAAP,gBAAAG,GAAA,OAAAJ,EAAA3C,MAAAC,KAAAC,YAAA,GamBWmG,CADW,CAAE7B,YAAWC,WAAUyB,QAAOC,YACrBZ,EAAS7E,aAI3B4E,CA1EA,SAACG,GAAU,IAChBI,EAAiBJ,EAAjBI,aACR,OACEH,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUT,GACdH,EAAA7G,EAAA8G,cAAA,2BACAD,EAAA7G,EAAA8G,cAAA,SACE5B,KAAK,YACL7F,KAAK,OACLqI,YAAY,aACZC,UAAQ,IAEVd,EAAA7G,EAAA8G,cAAA,SACED,EAAA7G,EAAA8G,cAAA,0BACAD,EAAA7G,EAAA8G,cAAA,SACE5B,KAAK,WACL7F,KAAK,OACLqI,YAAY,YACZC,UAAQ,KAGZd,EAAA7G,EAAA8G,cAAA,sBACAD,EAAA7G,EAAA8G,cAAA,SACE5B,KAAK,QACL7F,KAAK,QACLsI,UAAQ,IAEVd,EAAA7G,EAAA8G,cAAA,SACED,EAAA7G,EAAA8G,cAAA,yBACAD,EAAA7G,EAAA8G,cAAA,SACE5B,KAAK,WACL7F,KAAK,WACLsI,UAAQ,KAGZd,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,YAEFwH,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,mBAEFD,EAAA7G,EAAA8G,cAAA,SACED,EAAA7G,EAAA8G,cAAA,KACEK,OAAO,QACPS,KAAK,gBAELf,EAAA7G,EAAA8G,cAAA,UACAD,EAAA7G,EAAA8G,cAAA,oCAEFD,EAAA7G,EAAA8G,cAAA,KACEK,OAAO,QACPS,KAAK,kBAELf,EAAA7G,EAAA8G,cAAA,UACAD,EAAA7G,EAAA8G,cAAA,0CCcKL,eAAQ,KAVH,SAACtG,EAAUuG,GAAX,MAAyB,CAC3CM,aAAc,SAAAC,GACZA,EAAMC,iBACN,IAAMG,EAAQJ,EAAME,OAAOE,MAAMD,MAC3BE,EAAWL,EAAME,OAAOG,SAASF,MAEvCjH,EdtCiB,SAACoH,EAAa1F,GACjC,sBAAAjC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoBC,IAAMkD,KAAN,GAAAhD,OAAc3B,EAAd,qBAA0CsI,GAF9D,OAIHlF,EAJG9B,EAAAM,KAEKR,KAEiBwB,EAAS1B,GAJ/BI,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAMHQ,QAAQoB,MAAR,mBAAAvB,OAAiC2G,EAAYF,MAA7C,oBAAA9G,EAAAO,IANG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,GcqCWwG,CADW,CAAER,QAAOC,YACDZ,EAAS7E,aAI1B4E,CAjED,SAACG,GACb7F,QAAQC,IAAI,SADW,IAEfgG,EAAiBJ,EAAjBI,aAER,OADAjG,QAAQC,IAAI,cAEV6F,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUT,GACdH,EAAA7G,EAAA8G,cAAA,sBACAD,EAAA7G,EAAA8G,cAAA,SACE5B,KAAK,QACL7F,KAAK,QACLsI,UAAQ,IAEVd,EAAA7G,EAAA8G,cAAA,SACED,EAAA7G,EAAA8G,cAAA,yBACAD,EAAA7G,EAAA8G,cAAA,SACE5B,KAAK,WACL7F,KAAK,WACLsI,UAAQ,KAGZd,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,WAEFwH,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,mBAEFD,EAAA7G,EAAA8G,cAAA,SACED,EAAA7G,EAAA8G,cAAA,KACEK,OAAO,QACPS,KAAI,GAAAhH,OAAK3B,EAAL,iBAEJ4H,EAAA7G,EAAA8G,cAAA,UACAD,EAAA7G,EAAA8G,cAAA,mCAEFD,EAAA7G,EAAA8G,cAAA,KACEK,OAAO,QACPS,KAAI,GAAAhH,OAAK3B,EAAL,mBAEJ4H,EAAA7G,EAAA8G,cAAA,UACAD,EAAA7G,EAAA8G,cAAA,sCAKJD,EAAA7G,EAAA8G,cAAA,SACED,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,WAAT,qCCwBOC,eA3Eb,SAAAA,IAAc,IAAAC,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAA4G,IACZC,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAmI,GAAAK,KAAAjH,QACK2D,MAAQ,CACXG,KAAM,GACNC,UAAW,GACXC,WAAY,GACZkD,OAAQ,GAEVL,EAAKM,aAAeN,EAAKM,aAAaC,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKjB,aAAeiB,EAAKjB,aAAawB,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KATRA,8EAWDS,GAAK,IAAAC,EACVL,EAASlH,KAAKwF,MAAM9B,YAAYrF,GAEtC2B,KAAKwH,UAALD,EAAA,GAAA9I,OAAAgJ,GAAA,EAAAhJ,CAAA8I,EAAiBD,EAAIvB,OAAOjC,KAAOwD,EAAIvB,OAAOC,OAA9CvH,OAAAgJ,GAAA,EAAAhJ,CAAA8I,EAAA,SAAqDL,GAArDK,yCAEWD,GACXA,EAAIxB,iBACJ9F,KAAKwF,MAAMtH,aAAa8B,KAAK2D,OAC7B3D,KAAKwH,SAAS,CACZ1D,KAAM,GACNC,UAAW,GACXC,WAAY,GACZkD,OAAQ,qCAIV,OACEzB,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUrG,KAAK4F,cACnBH,EAAA7G,EAAA8G,cAAA,oCACAD,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,SACEgC,UAAU,QACVpB,YAAY,iBACZrI,KAAK,OACL6F,KAAK,OACL6D,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAMG,QAGtB2B,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,gCAEED,EAAA7G,EAAA8G,cAAA,UACEiC,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAMI,UAClBD,KAAK,aAEL2B,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,KACdP,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,OAAd,OACAP,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,MAAd,SAINP,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,6BAEED,EAAA7G,EAAA8G,cAAA,UACEiC,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAMK,WAClBF,KAAK,cAEL2B,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,KACdP,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,iBAAd,iBACAP,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,YAAd,eAINP,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,mBAtEqB2J,aCIzBC,eACJ,SAAAA,IAAc,IAAAhB,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAA6H,IACZhB,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAoJ,GAAAZ,KAAAjH,QACK2D,MAAQ,CACXG,KAAM,GACNC,UAAW,GACXC,WAAY,IAEd6C,EAAKM,aAAeN,EAAKM,aAAaC,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKjB,aAAeiB,EAAKjB,aAAawB,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KARRA,8EAUDS,GACXtH,KAAKwH,SAAL/I,OAAAgJ,GAAA,EAAAhJ,CAAA,GAAgB6I,EAAIvB,OAAOjC,KAAOwD,EAAIvB,OAAOC,6CAElCsB,GACXA,EAAIxB,iBACJ,IAAMzH,EAAK2B,KAAKwF,MAAMrH,UAAUE,GAChC2B,KAAKwF,MAAMtF,gBAAgB7B,EAAI2B,KAAK2D,OACpC3D,KAAKwH,SAAS,CACZ1D,KAAM,GACNC,UAAW,GACXC,WAAY,sCAId,OACEyB,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUrG,KAAK4F,cACnBH,EAAA7G,EAAA8G,cAAA,8BACAD,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,SACEgC,UAAU,QACVpB,YAAY,cACZrI,KAAK,OACL6F,KAAK,OACL6D,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAMG,QAGtB2B,EAAA7G,EAAA8G,cAAA,WAEAD,EAAA7G,EAAA8G,cAAA,WACAD,EAAA7G,EAAA8G,cAAA,gCAEED,EAAA7G,EAAA8G,cAAA,UACEiC,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAMI,UAClBD,KAAK,aAEL2B,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,KACdP,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,OAAd,OACAP,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,MAAd,SAIJP,EAAA7G,EAAA8G,cAAA,WAEAD,EAAA7G,EAAA8G,cAAA,WACAD,EAAA7G,EAAA8G,cAAA,6BAEED,EAAA7G,EAAA8G,cAAA,UACEiC,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAMK,WAClBF,KAAK,cAEL2B,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,KACdP,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,iBAAd,iBACAP,EAAA7G,EAAA8G,cAAA,UAAQM,MAAM,YAAd,eAIJP,EAAA7G,EAAA8G,cAAA,WACAD,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,kBAvEsB2J,aAyFfvC,eAXS,SAAA1B,GACtB,MAAO,CACHxF,UAAWwF,EAAMxF,UACjBuF,YAAaC,EAAMD,cAGE,SAAA3E,GACzB,MAAO,CACHmB,gBAAiB,SAAC7B,EAAIF,GAAL,OAAmBY,EjB7DA,SACxCV,EACAF,GAEA,sBAAAuC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAM5B,GAAN,IAAA+I,EAAA7I,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEkBC,IAAMyI,IAAN,GAAAvI,OAChB3B,EADgB,oBAAA2B,OACUnB,GAC7BF,GAJC,OAAA2J,EAAAlH,EAAAnB,KAEIR,EAFJ6I,EAEI7I,KAIPF,EAASmB,EAAgBjB,IACzBF,EAAST,EAAoBW,EAAKZ,GAAIY,IAPnC2B,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SASHjB,QAAQC,IAARgB,EAAAlB,IATG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,GiByDiD+H,CAA2B3J,EAAIF,OAGnEkH,CAA6CwC,ICvFtDI,eACJ,SAAAA,IAAc,IAAApB,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAiI,IACZpB,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAwJ,GAAAhB,KAAAjH,QAWFE,gBAAkB,WAChB2G,EAAKW,SAAS,CAAEU,SAAS,KAXzBrB,EAAKlD,MAAQ,CACXuE,SAAS,GAEXrB,EAAK3G,gBAAkB2G,EAAK3G,gBAAgBkH,KAArB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACvBA,EAAKsB,aAAetB,EAAKsB,aAAaf,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KANRA,qFASZ,IAAMxI,EAAK2B,KAAKwF,MAAMrH,UAAUE,GAChC2B,KAAKwF,MAAM4C,mBAAmB/J,gFAKbA,4FAET2B,KAAKwF,MAAMpH,gBAAgBC,UACjC2B,KAAKwF,MAAM6C,+DAEX1I,QAAQC,IAART,EAAAO,gJAGK,IAAA4I,EAAAtI,KACD7B,EAAY6B,KAAKwF,MAAMrH,UAC7B,OAAKA,EAIDsH,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,yBAAiBvH,EAAU2F,KAA3B,KACA2B,EAAA7G,EAAA8G,cAAA,yCAAiCvH,EAAU4F,WAC3C0B,EAAA7G,EAAA8G,cAAA,6CAAqCvH,EAAU6F,YAC/CyB,EAAA7G,EAAA8G,cAAA,WACG1F,KAAK2D,MAAMuE,SAAWzC,EAAA7G,EAAA8G,cAAC6C,GAAD,OAEzB9C,EAAA7G,EAAA8G,cAAA,YACI1F,KAAK2D,MAAMuE,SACXzC,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS,kBAAM2C,EAAKpI,oBAA5B,qBAIFuF,EAAA7G,EAAA8G,cAAA,UACEzH,KAAK,SACL0H,QAAS,kBAAM2C,EAAK9C,MAAMgD,gBAAgBrK,EAAUE,MAFtD,qBAhBC,6CA3BiBuJ,aAmEfvC,eAZS,SAAA1B,GACtB,MAAO,CACLxF,UAAWwF,EAAMxF,YAGM,SAAAY,GACzB,MAAO,CACLqJ,mBAAoB,SAAA/J,GAAE,OAAIU,EAASoB,EAAwB9B,KAC3DmK,gBAAiB,SAAAnK,GAAE,OAAIU,EnBhBS,SAACV,GACnC,sBAAAqE,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8D,EAAO5D,GAAP,IAAA0J,EAAAxJ,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,EAEGC,IAAMuB,OAAN,mBAAArB,OAAgCnB,IAFnC,cAGHU,EAASX,EAAgBC,IAHtBuE,EAAAvD,KAAA,EAIkBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,qBAJlB,OAAA4K,EAAA7F,EAAAnD,KAIIR,EAJJwJ,EAIIxJ,KACPF,EAAShB,EAAiBkB,IALvB2D,EAAAvD,KAAA,iBAAAuD,EAAAxD,KAAA,GAAAwD,EAAAlD,GAAAkD,EAAA,SAOHjD,QAAQC,IAARgD,EAAAlD,IAPG,yBAAAkD,EAAA/C,SAAA8C,EAAA,kBAAP,gBAAAG,GAAA,OAAAJ,EAAA3C,MAAAC,KAAAC,YAAA,GmBekCyI,CAAqBrK,OAI1CgH,CAA6C4C,wBCzDtDU,eACJ,SAAAA,IAAc,IAAA9B,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAA2I,IACZ9B,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAkK,GAAA1B,KAAAjH,QACK2D,MAAQ,CACXiF,WAAW,EACXC,cAAc,GAEhBhC,EAAKiC,UAAYjC,EAAKiC,UAAU1B,KAAf3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACjBA,EAAKkC,aAAelC,EAAKkC,aAAa3B,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKmC,WAAanC,EAAKmC,WAAW5B,KAAhB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KAClBA,EAAKoC,cAAgBpC,EAAKoC,cAAc7B,KAAnB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KATTA,qFAYZ7G,KAAKwF,MAAMzH,uDAGXiC,KAAKwH,SAAS,CAAEoB,WAAW,yCAGhBvK,GACX2B,KAAKwH,SAAS,CAAEqB,cAAc,IAC9B7I,KAAKwF,MAAM4C,mBAAmB/J,wCAI9B2B,KAAKwH,SAAS,CAAEoB,WAAW,4CAI3B5I,KAAKwH,SAAS,CAAEqB,cAAc,qCAEvB,IAAAP,EAAAtI,KACDhC,EAAagC,KAAKwF,MAAMxH,WAC9B,OACEyH,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS3F,KAAK8I,WAAtB,mBACArD,EAAA7G,EAAA8G,cAAA,2BACAD,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAACwD,GAAAtK,EAAD,CACEuK,OAAQnJ,KAAK2D,MAAMiF,UACnBQ,aAAa,iBAEb3D,EAAA7G,EAAA8G,cAAC2D,GAAD,CAAkB3F,YAAa1D,KAAKwF,MAAM9B,YAAaxF,aAAc8B,KAAKwF,MAAMtH,eAChFuH,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS3F,KAAKgJ,YAAtB,WAGJvD,EAAA7G,EAAA8G,cAAA,WACG1H,GAAcA,EAAWyF,IAAI,SAACtF,GAC7B,OACEsH,EAAA7G,EAAA8G,cAAA,OAAK4D,IAAKnL,EAAUE,IAClBoH,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS,kBAAM2C,EAAKS,aAAa5K,EAAUE,MAAMF,EAAU2F,MACnE2B,EAAA7G,EAAA8G,cAACwD,GAAAtK,EAAD,CACEuK,OAAQb,EAAK3E,MAAMkF,aACnBO,aAAa,iBAEb3D,EAAA7G,EAAA8G,cAAC6D,GAAD,CAAiBlB,cAAeC,EAAKW,gBACrCxD,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS2C,EAAKW,eAAtB,sBAxDOrB,aA+EVvC,eAbS,SAAA1B,GACtB,MAAO,CACL3F,WAAY2F,EAAM3F,WAClB0F,YAAaC,EAAMD,cAGI,SAAA3E,GACzB,MAAO,CACLhB,iBAAkB,kBAAMgB,EAASR,MACjCL,aAAc,SAACC,GAAD,OAAeY,EpBjDA,SAACZ,GAChC,sBAAAuC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAM5B,GAAN,IAAAwD,EAAAtD,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEkBC,IAAMkD,KAAN,GAAAhD,OAAc3B,EAAd,mBAAwCM,GAF1D,OAAAoE,EAAA3B,EAAAnB,KAEIR,EAFJsD,EAEItD,KACPF,EAASb,EAAae,IAHnB2B,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAKHjB,QAAQC,IAARgB,EAAAlB,IALG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,GoBgDwCuJ,CAAkBrL,KACxDiK,mBAAoB,SAAC/J,GAAD,OAAQU,EAASoB,EAAwB9B,OAGlDgH,CAA6CsD,IC5FtDc,eACJ,SAAAA,IAAc,IAAA5C,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAyJ,IACZ5C,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAgL,GAAAxC,KAAAjH,QACK2D,MAAQ,CAAEG,KAAM,GAAIM,OAAQ,GAAIC,UAAW,GAAI6C,OAAQ,GAC5DL,EAAKjB,aAAeiB,EAAKjB,aAAawB,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKM,aAAeN,EAAKM,aAAaC,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KAJRA,2HASDhB,GACX,IAAMnC,EAAc1D,KAAKwF,MAAM9B,YAAYrF,GAC3C2B,KAAKwH,SAAS,CAAEN,OAAQxD,IACxB1D,KAAKwH,SAAL/I,OAAAgJ,GAAA,EAAAhJ,CAAA,GAAiBoH,EAAME,OAAOjC,KAAO+B,EAAME,OAAOC,6CAGvCH,GACXA,EAAMC,iBACN9F,KAAKwF,MAAMkE,cAAc1J,KAAK2D,OAC9B3D,KAAKwH,SAAS,CAAE1D,KAAM,GAAIM,OAAQ,GAAIC,UAAW,GAAI6C,OAAQ,qCAI7D,OACEzB,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUrG,KAAK4F,cACnBH,EAAA7G,EAAA8G,cAAA,SAAOiE,QAAQ,QAAf,oBACAlE,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,OACL6F,KAAK,OACLkC,MAAOhG,KAAK2D,MAAMG,KAClB6D,SAAU3H,KAAKmH,aACfb,YAAY,aAGdb,EAAA7G,EAAA8G,cAAA,SAAOiE,QAAQ,UAAf,WACAlE,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,OACL6F,KAAK,SACLkC,MAAOhG,KAAK2D,MAAMS,OAClBuD,SAAU3H,KAAKmH,eAGjB1B,EAAA7G,EAAA8G,cAAA,SAAOiE,QAAQ,aAAf,cACAlE,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,OACL6F,KAAK,YACLkC,MAAOhG,KAAK2D,MAAMU,UAClBsD,SAAU3H,KAAKmH,eAGjB1B,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,mBAnDkB2L,IAAMhC,WAoEnBvC,eAVE,SAAC1B,GAChB,MAAO,CACLD,YAAaC,EAAMD,cAIH,SAAC3E,GACnB,MAAO,CAAE2K,cAAe,SAACnI,GAAD,OAAgBxC,EjB5Bb,SAACwC,GAC5B,sBAAAb,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAO5B,GAAP,IAAAwD,EAAAtD,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEoBC,IAAMkD,KAAN,GAAAhD,OAClB3B,EADkB,oBAErB0D,GAJC,OAAAgB,EAAA3B,EAAAnB,KAEKR,EAFLsD,EAEKtD,KAIRF,EAASuC,EAAcrC,IANpB2B,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAQHjB,QAAQC,IAARgB,EAAAlB,IARG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,GiB2BiDyJ,CAAcnI,OAGlD8D,CAA+BoE,IC1D/BI,GAZU,SAACrE,GAAU,IAC1BjE,EAAuBiE,EAAvBjE,WAAYuI,EAAWtE,EAAXsE,OAEpB,OACErE,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,SAAS0H,QAAS,kBAAMmE,EAAOvI,EAAWlD,MAAvD,YCLe0L,eACnB,SAAAA,IAAc,IAAAlD,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAA+J,IACZlD,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAsL,GAAA9C,KAAAjH,QACK2D,MAAQ,CAAEG,KAAM,GAAIM,OAAQ,GAAIC,UAAW,IAChDwC,EAAKM,aAAeN,EAAKM,aAAaC,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKjB,aAAeiB,EAAKjB,aAAawB,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KAJRA,8EAODhB,GACX7F,KAAKwH,SAAL/I,OAAAgJ,GAAA,EAAAhJ,CAAA,GAAiBoH,EAAME,OAAOjC,KAAO+B,EAAME,OAAOC,6CAGvCH,GACXA,EAAMC,iBACN,IAAMvE,EAAavB,KAAKwF,MAAMjE,WACxBqC,EAAU5D,KAAK2D,MACrBhE,QAAQC,IAAI,SAAU2B,EAAYqC,GAClC5D,KAAKwF,MAAMwE,OAAOzI,EAAYqC,GAE9B5D,KAAKwF,MAAMyE,yCAIX,OACExE,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUrG,KAAK4F,cACnBH,EAAA7G,EAAA8G,cAAA,SAAOiE,QAAQ,QAAf,iBACAlE,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,OACL6F,KAAK,OACLkC,MAAOhG,KAAK2D,MAAMG,KAClB6D,SAAU3H,KAAKmH,aACfb,YAAY,aAGdb,EAAA7G,EAAA8G,cAAA,SAAOiE,QAAQ,UAAf,mBACAlE,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,OACL6F,KAAK,SACLkC,MAAOhG,KAAK2D,MAAMS,OAClBuD,SAAU3H,KAAKmH,eAGjB1B,EAAA7G,EAAA8G,cAAA,SAAOiE,QAAQ,aAAf,sBACAlE,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,OACL6F,KAAK,YACLkC,MAAOhG,KAAK2D,MAAMU,UAClBsD,SAAU3H,KAAKmH,eAGjB1B,EAAA7G,EAAA8G,cAAA,WACAD,EAAA7G,EAAA8G,cAAA,WACAD,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,mBArDoC2L,IAAMhC,WCGvCsC,GAAb,SAAAC,GACE,SAAAD,IAAc,IAAArD,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAkK,IACZrD,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAyL,GAAAjD,KAAAjH,QACK2D,MAAQ,CAAEqG,QAAQ,GAEvBnD,EAAKuD,aAAevD,EAAKuD,aAAahD,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKwD,YAAcxD,EAAKwD,YAAYjD,KAAjB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KALPA,EADhB,OAAApI,OAAA6L,GAAA,EAAA7L,CAAAyL,EAAAC,GAAA1L,OAAA8L,GAAA,EAAA9L,CAAAyL,EAAA,EAAAZ,IAAA,oBAAAtD,MAAA,WASI,IACE,IAAM3H,EAAK2B,KAAKwF,MAAMgF,SAASnM,IAAM2B,KAAKwF,MAAMjE,WAChDvB,KAAKwF,MAAMiF,qBAAqBpM,GAChC,MAAOqM,GACP/K,QAAQC,IAAI8K,MAblB,CAAApB,IAAA,eAAAtD,MAAA,WAkBIhG,KAAKwH,SAAS,CAAEwC,QAAQ,MAlB5B,CAAAV,IAAA,cAAAtD,MAAA,SAoBc3H,GAEV2B,KAAKwH,SAAS,CAAEwC,QAAQ,MAtB5B,CAAAV,IAAA,aAAAtD,MAAA,WA0BIhG,KAAKwH,SAAS,CAAEwC,QAAQ,MA1B5B,CAAAV,IAAA,eAAAtD,MAAA,SA6BezE,EAAYoJ,GACvB3K,KAAKwF,MAAMwE,OAAOzI,EAAYoJ,KA9BlC,CAAArB,IAAA,SAAAtD,MAAA,WAiCW,IAAAsC,EAAAtI,KACDuB,EAAavB,KAAKwF,MAAMjE,WACxB+C,EAAQtE,KAAKwF,MAAMlB,MAEzB,OACEmB,EAAA7G,EAAA8G,cAAA,WAGGnE,IAAevB,KAAK2D,MAAMqG,QACzBvE,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,SAAInE,EAAWuC,MACf2B,EAAA7G,EAAA8G,cAAA,SAAInE,EAAW6C,QACfqB,EAAA7G,EAAA8G,cAAA,SAAInE,EAAW8C,WACfoB,EAAA7G,EAAA8G,cAAA,SAAIpB,GAMJmB,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,SAAS0H,QAAS,kBAAM2C,EAAKsC,eAA1C,2BAKHrJ,GAAcvB,KAAK2D,MAAMqG,QACxBvE,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAACmF,GAAD,CACEtJ,WAAYA,EACZ0I,MAAOjK,KAAKqK,YACZL,OAAQhK,KAAKoK,eAEf3E,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,SAAS0H,QAAS,kBAAM2C,EAAKwC,iBAA1C,uBAhEZZ,EAAA,CAAsCN,IAAMhC,WAyF7BvC,eAfE,SAAC1B,GAChB,MAAO,CACLpC,WAAYoC,EAAMpC,WAAWA,WAC7B+C,MAAOX,EAAMpC,WAAW+C,QAIR,SAACvF,GACnB,MAAO,CACL0L,qBAAsB,SAACpM,GAAD,OAAQU,EnBhDH,SAACV,GAC9B,sBAAAqC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAO5B,GAAP,IAAA0J,EAAAxJ,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEoBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,qBAAA2B,OAAwCnB,IAF5D,OAAAoK,EAAA7H,EAAAnB,KAEKR,EAFLwJ,EAEKxJ,KACRF,EAlCuC,CAC3Cd,KAPqB,iBAQrBsD,WAgCiCtC,IAC7BF,EAAS4C,EAAW1C,EAAK6E,OAJtBlD,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAMHjB,QAAQC,IAARgB,EAAAlB,IANG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,GmB+CyC8K,CAAgB1M,KACvD2L,OAAQ,SAACzI,EAAYoJ,GAAb,OACN5L,EnBtC0B,SAACwC,EAAYoJ,GAC3C,sBAAAjI,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8D,EAAO5D,GAAP,IAAA+I,EAAA7I,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,EAEoBC,IAAMyI,IAAN,GAAAvI,OAClB3B,EADkB,qBAAA2B,OACS+B,EAAWlD,IACzCsM,GAJC,OAAA7C,EAAAlF,EAAAnD,KAEKR,EAFL6I,EAEK7I,KAIRU,QAAQC,IAAI,SAAUX,GACtBF,EAAS2C,EAAuBzC,EAAKZ,GAAIY,IACzCF,EAAS0C,EAAcxC,EAAKZ,GAAIY,IAR7B2D,EAAAvD,KAAA,iBAAAuD,EAAAxD,KAAA,GAAAwD,EAAAlD,GAAAkD,EAAA,SAUHjD,QAAQC,IAARgD,EAAAlD,IAVG,yBAAAkD,EAAA/C,SAAA8C,EAAA,kBAAP,gBAAAG,GAAA,OAAAJ,EAAA3C,MAAAC,KAAAC,YAAA,GmBqCa+K,CAAiBzJ,EAAYoJ,OAI7BtF,CAA+B6E,ICrFxCe,eACJ,SAAAA,IAAc,IAAApE,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAiL,IACZpE,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAwM,GAAAhE,KAAAjH,QACK2D,MAAQ,CAAE6G,SAAU,KAAMU,KAAK,GACpCrE,EAAKsE,aAAetE,EAAKsE,aAAa/D,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKuE,UAAYvE,EAAKuE,UAAUhE,KAAf3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACjBA,EAAKwD,YAAcxD,EAAKwD,YAAYjD,KAAjB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACnBA,EAAKwE,aAAexE,EAAKwE,aAAajE,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KANRA,qFASZ7G,KAAKwF,MAAM8F,wDAGA/J,GACXvB,KAAKwH,SAAS,CAAEgD,SAAUjJ,EAAY2J,KAAK,wCAI3ClL,KAAKwH,SAAS,CAAEgD,SAAU,KAAMU,KAAK,0CAIrClL,KAAKwH,SAAS,CAAEgD,SAAU,KAAMU,KAAK,yCAG1B7M,GACX2B,KAAKwF,MAAMsE,OAAOzL,GAClB2B,KAAKqK,+CAGE,IAAA/B,EAAAtI,KAAAuL,EACyBvL,KAAKwF,MAA7BtB,EADDqH,EACCrH,YAAa4F,EADdyB,EACczB,OAErB,OACErE,EAAA7G,EAAA8G,cAAA,OAAKgC,UAAU,QACbjC,EAAA7G,EAAA8G,cAAA,OAAKgC,UAAU,UACbjC,EAAA7G,EAAA8G,cAAA,kCACAD,EAAA7G,EAAA8G,cAAA,OAAKgC,UAAU,UACZxD,GACCA,EAAYT,IAAI,SAAClC,GACf,OACEkE,EAAA7G,EAAA8G,cAAA,OAAKgC,UAAU,WAAW4B,IAAK/H,EAAWlD,IACxCoH,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAA4M,SAAA,KACE/F,EAAA7G,EAAA8G,cAAA,UACEgC,UAAU,UACVzJ,KAAK,SACL0H,QAAS,kBAAM2C,EAAK6C,aAAa5J,KAEhCA,EAAWuC,OAGhB2B,EAAA7G,EAAA8G,cAAC+F,GAAD,CAAkBlK,WAAYA,EAAYuI,OAAQA,QAK5DrE,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,SAAS0H,QAAS,kBAAM2C,EAAK8C,cAA1C,qBAIF3F,EAAA7G,EAAA8G,cAAA,OAAKgC,UAAU,UACbjC,EAAA7G,EAAA8G,cAAA,OAAKgC,UAAU,SACZ1H,KAAK2D,MAAMuH,KACVzF,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAA4M,SAAA,KACE/F,EAAA7G,EAAA8G,cAACgG,GAAD,MACAjG,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,SAAS0H,QAAS,kBAAM2C,EAAK+B,gBAA1C,MAMHrK,KAAK2D,MAAM6G,UACV/E,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAA4M,SAAA,KACE/F,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,SAAS0H,QAAS,kBAAM2C,EAAK+B,gBAA1C,KAIA5E,EAAA7G,EAAA8G,cAACiG,GAAD,CACEnB,SAAUxK,KAAK2D,MAAM6G,SACrBV,OAAQA,IAIVrE,EAAA7G,EAAA8G,cAAC+F,GAAD,CACElK,WAAYvB,KAAK2D,MAAM6G,SACvBV,OAAQ9J,KAAKqL,0BArFLzB,IAAMhC,WA6GjBvC,eAbS,SAAC1B,GACvB,MAAO,CACLO,YAAaP,EAAMO,YACnBR,YAAaC,EAAMD,cAGI,SAAC3E,GAC1B,MAAO,CACLuM,iBAAkB,kBAAMvM,ErBjF1B,eAAAP,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,qBAFpB,OAAAmB,EAAAG,EAAAM,KAEKR,EAFLD,EAEKC,KACRF,EAzBmC,CACvCd,KARsB,kBAStBiG,YAuB4BjF,IAHrBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAKHQ,QAAQC,IAART,EAAAO,IALG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,KqBkFE6J,OAAQ,SAACzL,GAAD,OAAQU,ErB3DY,SAACV,GAC/B,sBAAAqE,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8D,EAAO5D,GAAP,OAAAJ,EAAAC,EAAAM,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,EAEGC,IAAMuB,OAAN,GAAArB,OAAgB3B,EAAhB,qBAAA2B,OAA2CnB,IAF9C,OAGHU,EAASyC,EAAiBnD,IAHvBuE,EAAAvD,KAAA,eAAAuD,EAAAxD,KAAA,EAAAwD,EAAAlD,GAAAkD,EAAA,SAKHjD,QAAQC,IAARgD,EAAAlD,IALG,wBAAAkD,EAAA/C,SAAA8C,EAAA,iBAAP,gBAAAG,GAAA,OAAAJ,EAAA3C,MAAAC,KAAAC,YAAA,GqB0D2B2L,CAAiBvN,OAI/BgH,CAA6C4F,ICjD7CY,eAnEb,SAAAA,IAAc,IAAAhF,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAA6L,IACZhF,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAoN,GAAA5E,KAAAjH,QACK2D,MAAQ,CACXmI,WAAW,EACXC,MAAO,GACPC,aAAc,GAEhBnF,EAAKM,aAAeN,EAAKM,aAAaC,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKjB,aAAeiB,EAAKjB,aAAawB,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KARRA,8EAUDS,GACX,IAAM0E,EAAehM,KAAKwF,MAAMyG,QAAQ5N,GACxC2B,KAAKwH,SAAS,CAAEwE,iBAChB,IAAMjG,EAASuB,EAAIvB,OACbC,EAAwB,aAAhBD,EAAO9H,KAAsB8H,EAAOmG,QAAUnG,EAAOC,MAC7DlC,EAAOiC,EAAOjC,KACpB9D,KAAKwH,SAAL/I,OAAAgJ,GAAA,EAAAhJ,CAAA,GACGqF,EAAOkC,yCAGCsB,GACXA,EAAIxB,iBACJ9F,KAAKwF,MAAMkE,cAAc1J,KAAK2D,OAC9B3D,KAAKwH,SAAS,CACZsE,WAAW,EACXC,MAAO,GACPI,YAAa,qCAIf,IAAMhI,EAAMnE,KAAKwF,MAAMyG,QACvB,OACExG,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUrG,KAAK4F,cACnBH,EAAA7G,EAAA8G,cAAA,aACGvB,EAAIL,KACL2B,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,WACL6F,KAAK,YACL6D,SAAU3H,KAAKmH,gBAIjBnH,KAAK2D,MAAMmI,UACTrG,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,oEAEJD,EAAA7G,EAAA8G,cAAA,SACQgC,UAAU,QACVpB,YAAY,QACZrI,KAAK,OACL6F,KAAK,QACL6D,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAMoI,UAIxBtG,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,WAGO,aA7DU2J,aCsFhBwE,eArFb,SAAAA,IAAc,IAAAvF,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAoM,IACZvF,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAA2N,GAAAnF,KAAAjH,QACK2D,MAAQ,CACXmI,WAAW,EACXhI,KAAM,GACNuI,KAAM,GACNC,KAAM,IAAIC,KACVR,MAAO,GACPI,YAAa,GAEftF,EAAKM,aAAeN,EAAKM,aAAaC,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKjB,aAAeiB,EAAKjB,aAAawB,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KAXRA,8EAaDS,GACX,IAAM6E,EAAcnM,KAAKwF,MAAMrH,UAAUE,GACzC2B,KAAKwH,SAAS,CAAE2E,gBAChB,IAAMpG,EAASuB,EAAIvB,OACbC,EAAwB,aAAhBD,EAAO9H,KAAsB8H,EAAOmG,QAAUnG,EAAOC,MAC7DlC,EAAOiC,EAAOjC,KACpB9D,KAAKwH,SAAL/I,OAAAgJ,GAAA,EAAAhJ,CAAA,GACGqF,EAAOkC,yCAGCsB,GACXA,EAAIxB,iBACJ9F,KAAKwF,MAAMgH,SAASxM,KAAK2D,OACzB3D,KAAKwH,SAAS,CACZsE,WAAW,EACXhI,KAAM,GACNuI,KAAM,GACNC,KAAM,GACNP,MAAO,GACPI,YAAa,qCAIf,IAAMhO,EAAY6B,KAAKwF,MAAMrH,UAC7B,OACEsH,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUrG,KAAK4F,cACnBH,EAAA7G,EAAA8G,cAAA,aACGvH,EAAU2F,KACX2B,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,WACL6F,KAAK,YACL6D,SAAU3H,KAAKmH,gBAIjBnH,KAAK2D,MAAMmI,UACTrG,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,4FAEJD,EAAA7G,EAAA8G,cAAA,SACQgC,UAAU,QACVpB,YAAY,OACZrI,KAAK,OACL6F,KAAK,OACL6D,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAM0I,SAIxB5G,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,oCAEJD,EAAA7G,EAAA8G,cAAA,SACQgC,UAAU,QACVpB,YAAY,QACZrI,KAAK,OACL6F,KAAK,QACL6D,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAMoI,UAIxBtG,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,WAGO,aAhFS2J,aCmEf6E,eAlEb,SAAAA,IAAc,IAAA5F,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAyM,IACZ5F,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAgO,GAAAxF,KAAAjH,QACK2D,MAAQ,CACXmI,WAAW,EACXY,KAAM,GACNC,SAAU,GAEZ9F,EAAKM,aAAeN,EAAKM,aAAaC,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKjB,aAAeiB,EAAKjB,aAAawB,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KARRA,8EAUDS,GACX,IAAMqF,EAAW3M,KAAKwF,MAAMrD,OAAO9D,GACnC2B,KAAKwH,SAAS,CAAEmF,aAChB,IAAM5G,EAASuB,EAAIvB,OACbC,EAAwB,aAAhBD,EAAO9H,KAAsB8H,EAAOmG,QAAUnG,EAAOC,MAC7DlC,EAAOiC,EAAOjC,KACpB9D,KAAKwH,SAAL/I,OAAAgJ,GAAA,EAAAhJ,CAAA,GACGqF,EAAOkC,yCAGCsB,GACXA,EAAIxB,iBACJ9F,KAAKwF,MAAMoH,eAAe5M,KAAK2D,OAC/B3D,KAAKwH,SAAS,CACZsE,WAAW,EACXY,KAAM,GACNC,SAAU,qCAIZ,IAAMxK,EAASnC,KAAKwF,MAAMrD,OAC1B,OACEsD,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUrG,KAAK4F,cACnBH,EAAA7G,EAAA8G,cAAA,aACGvD,EAAOoC,UADV,IACsBpC,EAAOqC,SAC3BiB,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,WACL6F,KAAK,YACL6D,SAAU3H,KAAKmH,gBAIjBnH,KAAK2D,MAAMmI,UACTrG,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,wCAEFD,EAAA7G,EAAA8G,cAAA,SACMgC,UAAU,QACVpB,YAAY,QACZrI,KAAK,OACL6F,KAAK,OACL6D,SAAU3H,KAAKmH,aACfnB,MAAOhG,KAAK2D,MAAM+I,SAIxBjH,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,WAGO,aA7DM2J,aCQrBiF,oMAEF7M,KAAKwF,MAAMsH,WACX9M,KAAKwF,MAAMuH,gBACX/M,KAAKwF,MAAMwH,iDAEJ,IAAAnG,EAAA7G,KACD0E,EAAQ1E,KAAKwF,MAAMd,MACnB7B,EAAU7C,KAAKwF,MAAM3C,QACrBsB,EAAMnE,KAAKwF,MAAMrB,IACvB,OACEsB,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,2BACAD,EAAA7G,EAAA8G,cAAA,yDAEEhB,GAASA,EAAMjB,IAAI,SAAAtF,GACjB,OACEsH,EAAA7G,EAAA8G,cAAA,OAAK4D,IAAKnL,EAAUE,IAClBoH,EAAA7G,EAAA8G,cAACuH,GAAD,CAAiB9O,UAAWA,EAAWqO,SAAU3F,EAAKrB,MAAMgH,cAKpE/G,EAAA7G,EAAA8G,cAAA,6DAEE7C,GAAWA,EAAQY,IAAI,SAAAtB,GACrB,OACEsD,EAAA7G,EAAA8G,cAAA,OAAK4D,IAAKnH,EAAO9D,IACfoH,EAAA7G,EAAA8G,cAACwH,GAAD,CAAc/K,OAAQA,EAAQyK,eAAgB/F,EAAKrB,MAAMoH,oBAKjEnH,EAAA7G,EAAA8G,cAAA,oDAEEvB,GAAOA,EAAIV,IAAI,SAAAwI,GACb,OACExG,EAAA7G,EAAA8G,cAAA,OAAK4D,IAAK2C,EAAQ5N,IAChBoH,EAAA7G,EAAA8G,cAACyH,GAAD,CAAkBlB,QAASA,EAASvC,cAAe7C,EAAKrB,MAAMkE,2BAtCnD9B,aAiEZvC,eAlBS,SAAA1B,GACtB,MAAO,CACLe,MAAOf,EAAMe,MACbC,YAAahB,EAAMgB,YACnB9B,QAASc,EAAMd,QACfsB,IAAKR,EAAMQ,MAGY,SAAApF,GACzB,MAAO,CACL+N,SAAU,kBAAM/N,EpB7ClB,eAAAP,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,4BAFlB,OAAAmB,EAAAG,EAAAM,KAEIR,EAFJD,EAEIC,KACPF,EAhBG,CACLd,KALc,YAMdyG,MAcoBzF,IAHfE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAKHQ,QAAQoB,MAAR5B,EAAAO,IALG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,KoB8CEuM,SAAU,SAAC9H,GAAD,OAAW3F,GpBrCKsN,EoBqCkB3H,EpBpC9C,eAAAhE,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAM5B,GAAN,IAAAwD,EAAAtD,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEkBC,IAAMkD,KAAN,GAAAhD,OAAc3B,EAAd,2BAAgD,CAACwO,OAAMC,OAAMP,UAF/E,OAAAxJ,EAAA3B,EAAAnB,KAEIR,EAFJsD,EAEItD,KACPF,EApBG,CACLd,KAVc,YAWdyG,MAkBoBzF,IAHf2B,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAKHjB,QAAQoB,MAARH,EAAAlB,IALG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,KAD2B,IAACoM,EAAMC,EAAMP,GoBsCtCgB,cAAe,kBAAMhO,EAAS0D,MAC9BmK,eAAgB,SAACjI,GAAD,OAAiB5F,GnBtCDqO,EmBsC8BzI,EnBrChE,eAAAjE,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAM5B,GAAN,IAAAwD,EAAAtD,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEoBC,IAAMkD,KAAN,GAAAhD,OAAc3B,EAAd,iCAAsD,CAAEuP,oBAF5E,OAAA7K,EAAA3B,EAAAnB,KAEKR,EAFLsD,EAEKtD,KACRF,EArBG,CACLd,KAVoB,kBAWpB0G,YAmB0B1F,IAHrB2B,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAKHjB,QAAQoB,MAARH,EAAAlB,IALG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,KADiC,IAACmN,GmBuChCJ,cAAe,kBAAMjO,ElBjDvB,eAAAP,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,2BAFlB,OAAAmB,EAAAG,EAAAM,KAEIR,EAFJD,EAEIC,KACPU,QAAQC,IAAIX,GACZF,EAjBG,CACLd,KALa,WAMbkG,IAeyBlF,IAJpBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAMHQ,QAAQoB,MAAR5B,EAAAO,IANG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,KkBkDEyJ,cAAe,SAACvF,GAAD,OAASpF,GlBxCOgN,EkBwCqB5H,ElBvCtD,eAAAzD,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAM5B,GAAN,IAAAwD,EAAAtD,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEkBC,IAAMkD,KAAN,GAAAhD,OAAc3B,EAAd,0BAA+C,CAACkO,UAFlE,OAAAxJ,EAAA3B,EAAAnB,KAEIR,EAFJsD,EAEItD,KACPF,EArBG,CACLd,KAVa,WAWbkG,IAmByBlF,IAHpB2B,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAKHjB,QAAQoB,MAARH,EAAAlB,IALG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,KADgC,IAAC8L,KkB2CpB1G,CAA6CwH,ICrE/CQ,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA5O,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAqN,GAAA5O,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAA4O,GAAAtN,MAAAC,KAAAC,YAAA,OAAAxB,OAAA6L,GAAA,EAAA7L,CAAA4O,EAAAC,GAAA7O,OAAA8L,GAAA,EAAA9L,CAAA4O,EAAA,EAAA/D,IAAA,oBAAAtD,MAAA,WAEIhG,KAAKwF,MAAM+H,mBAFf,CAAAjE,IAAA,SAAAtD,MAAA,WAKW,IACC/D,EAAcjC,KAAKwF,MAAM9B,YAAzBzB,UACR,OACEwD,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAA4M,SAAA,KAEKvJ,EACCA,EAAUwB,IAAI,SAAC+J,EAAKC,GAAN,OACZhI,EAAA7G,EAAA8G,cAAA,OAAK4D,IAAKmE,GACRhI,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAE,cAAAnH,OAAgBiO,IACtBhI,EAAA7G,EAAA8G,cAAA,OAAKgI,IAAKF,EAAIG,SACZC,IAAI,WAAWC,MAAM,MAAMC,OAAO,YAL/B,oBAVvBT,EAAA,CAA+BzF,aAuCzBmG,GAAc,CAAER,exB5BQ,WAC5B,sBAAA/O,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGoBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,mBAHpB,OAAAmB,EAAAG,EAAAM,KAGKR,EAHLD,EAGKC,KACRF,EAT+B,CAAEd,KANjB,gBAMsCgE,UAShChD,IAJnBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAMHQ,QAAQC,IAART,EAAAO,IANG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,KwB6BaoF,eAdE,SAAA7G,EAAkB8G,GAMjC,MAAO,CACL5B,YAP4ClF,EAA5BkF,cAcaqK,GAAlB1I,CAA+BgI,ICxCjCW,GAAb,SAAAV,GACE,SAAAU,IAAc,IAAAnH,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAgO,IACZnH,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAuP,GAAA/G,KAAAjH,QACK2D,MAAQ,CACXsK,YAAa,OACbhQ,KAAM,GACN0O,SAAU,EACVR,YAAa,EACb+B,MAAO,IAETrH,EAAKsH,cAAgBtH,EAAKsH,cAAc/G,KAAnB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACrBA,EAAKuH,cAAgBvH,EAAKuH,cAAchH,KAAnB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACrBA,EAAKwH,UAAYzE,IAAM0E,YAXXzH,EADhB,OAAApI,OAAA6L,GAAA,EAAA7L,CAAAuP,EAAAV,GAAA7O,OAAA8L,GAAA,EAAA9L,CAAAuP,EAAA,EAAA1E,IAAA,oBAAAtD,MAAA,eAAAuI,EAAA9P,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,IAAA,OAAAH,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAeUW,KAAKwF,MAAMjH,wBAfrB,cAAAY,EAAAE,KAAA,EAgBUW,KAAKwF,MAAM/C,qBAhBrB,wBAAAtD,EAAAU,SAAAf,EAAAkB,SAAA,yBAAAuO,EAAAxO,MAAAC,KAAAC,YAAA,KAAAqJ,IAAA,gBAAAtD,MAAA,SAkBgBwI,GAAG,IAAAjH,EAEf5H,QAAQC,IAAI,YAAaI,KAAKqO,WAC9B,IAAMH,EAAQO,MAAMC,KAAK1O,KAAKqO,UAAUM,QAAQT,OAChDlO,KAAKwH,UAALD,EAAA,GAAA9I,OAAAgJ,GAAA,EAAAhJ,CAAA8I,EACGiH,EAAEzI,OAAOjC,KAAO0K,EAAEzI,OAAOC,OAD5BvH,OAAAgJ,GAAA,EAAAhJ,CAAA8I,EAAA,QAEE2G,GAFF3G,IAIA5H,QAAQC,IAAI,QAASI,KAAK2D,SA1B9B,CAAA2F,IAAA,gBAAAtD,MAAA,SA6BgBwI,GACZA,EAAE1I,iBAEF,IAAMoI,EAAQO,MAAMC,KAAK1O,KAAKqO,UAAUM,QAAQT,OAEhDvO,QAAQC,IAAI,QAASI,KAAKqO,UAAUM,QAAQT,OAa5C,IAAMU,EAAW,IAAIC,SACrBlP,QAAQC,IAAInB,OAAOqQ,OAAOZ,EAAM,KAChC,IAAK,IAAIT,EAAI,EAAGA,EAAIS,EAAM9K,OAAQqK,IAChC9N,QAAQC,WAAYsO,EAAMT,GAAKA,GAC/BmB,EAASG,OAAOtB,EAAGS,EAAMT,IAE3B9N,QAAQC,IAAI,WAAYgP,GAxBT,IAAAI,EAyBsChP,KAAK2D,MACpDsL,EAAU,CACdhB,YA3Bae,EAyBPf,YAGNhQ,KA5Ba+Q,EAyBM/Q,KAInB0O,SA7BaqC,EAyBYrC,SAKzBR,YA9Ba6C,EAyBsB7C,YAMnCyC,YAGF5O,KAAKwF,MAAM0J,qBAAqBD,KA/DpC,CAAA3F,IAAA,SAAAtD,MAAA,WAmEI,IAAMhI,EAAagC,KAAKwF,MAAMxH,WACxB6E,EAAU7C,KAAKwF,MAAM3C,QAE3B,OACE4C,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAA4M,SAAA,KACE/F,EAAA7G,EAAA8G,cAAA,QAAMW,SAAUrG,KAAKoO,eACnB3I,EAAA7G,EAAA8G,cAAA,2EACAD,EAAA7G,EAAA8G,cAAA,SACE5B,KAAK,cAEL7F,KAAK,OACLqI,YAAY,cACZqB,SAAU3H,KAAKmO,gBAEjB1I,EAAA7G,EAAA8G,cAAA,qDACAD,EAAA7G,EAAA8G,cAAA,UACI5B,KAAK,OAEL6D,SAAU3H,KAAKmO,eAhBX,CAAC,oBAAqB,aAAc,kBAAmB,mBAAoB,UAAW,iBAiBnF1K,IAAI,SAACxF,EAAMwP,GAChB,OACEhI,EAAA7G,EAAA8G,cAAA,UAAQ4D,IAAKmE,EAAGzH,MAAO/H,GAAOA,OAMtCwH,EAAA7G,EAAA8G,cAAA,8DACAD,EAAA7G,EAAA8G,cAAA,UACI5B,KAAK,WAEL6D,SAAU3H,KAAKmO,eACbtL,EACAA,EAAQY,IAAI,SAAAtB,GAAU,IACZ9D,EAA4B8D,EAA5B9D,GAAIkG,EAAwBpC,EAAxBoC,UAAWC,EAAarC,EAAbqC,SACvB,OACEiB,EAAA7G,EAAA8G,cAAA,UAAQ4D,IAAKjL,EAAI2H,MAAO3H,GAAKkG,EAA7B,IAAyCC,KAJnC,SAUhBiB,EAAA7G,EAAA8G,cAAA,4DACAD,EAAA7G,EAAA8G,cAAA,UACI5B,KAAK,cAEL6D,SAAU3H,KAAKmO,eACbnQ,EACAA,EAAWyF,IAAI,SAAAtF,GAAa,IAClBE,EAAaF,EAAbE,GAAIyF,EAAS3F,EAAT2F,KACZ,OACE2B,EAAA7G,EAAA8G,cAAA,UAAQ4D,IAAKjL,EAAI2H,MAAO3H,GAAKyF,KAJpB,SAUnB2B,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAA4M,SAAA,KACE/F,EAAA7G,EAAA8G,cAAA,8BACAD,EAAA7G,EAAA8G,cAAA,SACEzH,KAAK,OACLkR,IAAKnP,KAAKqO,UACV1G,SAAU3H,KAAKmO,cACfiB,UAAQ,KAGZ3J,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,gBArIV+P,EAAA,CAAqCpG,aA6I/BmG,GAAc,CAAEmB,qBzBvHc,SAACjN,GACnC,sBAAAvB,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAO5B,GAAP,IAAAwD,EAAAtD,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEoBC,IAAMkD,KAAN,GAAAhD,OAAc3B,EAAd,kBAAuCoE,GAF3D,OAAAM,EAAA3B,EAAAnB,KAEKR,EAFLsD,EAEKtD,KACRF,EAASiD,EAAgB/C,IAHtB2B,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAKHjB,QAAQC,IAARgB,EAAAlB,IALG,yBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,IyBsH0C1B,wBAAuBkE,sBAEpD4C,eAJE,SAAA7G,GAAA,MAA2C,CAAEkF,YAA7ClF,EAAGkF,YAAuD1F,WAA1DQ,EAAgBR,WAAsD6E,QAAtErE,EAA4BqE,UAIZkL,GAAlB1I,CAA+B2I,ICnH/B3I,eATE,SAAA7G,GAAA,MAAsB,CAAEkF,YAAxBlF,EAAGkF,cAEA,SAAC3E,EAAUuG,GAAX,MAAyB,CAC3CC,YAAa,WACXxG,EAASyB,EAAO8E,EAAS7E,aAKd4E,CA5BF,SAACG,GAAU,IAAA6J,EACqB7J,EAAM9B,YAAzCrF,EADcgR,EACdhR,GAAIkG,EADU8K,EACV9K,UAAWC,EADD6K,EACC7K,SAAUyB,EADXoJ,EACWpJ,MACzBV,EAAgBC,EAAhBD,YACR,OACEE,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,0BACAD,EAAA7G,EAAA8G,cAAA,mBAAWnB,EAAX,IAAuBC,GACvBiB,EAAA7G,EAAA8G,cAAA,oBAAYO,GACZR,EAAA7G,EAAA8G,cAAA,YAAMD,EAAA7G,EAAA8G,cAAC4J,GAAc9J,IACrBC,EAAA7G,EAAA8G,cAAA,sDAGAD,EAAA7G,EAAA8G,cAAA,YAAMD,EAAA7G,EAAA8G,cAAC6J,GAAD,CAAiBC,OAAQnR,KAC/BoH,EAAA7G,EAAA8G,cAAA,SACED,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,SAAS0H,QAASJ,GAA/B,wBCdD,SAASkK,GAAUjK,GAAO,IAAAkK,EACKC,mBAAS,IADdC,EAAAnR,OAAAoR,GAAA,EAAApR,CAAAiR,EAAA,GACtBnL,EADsBqL,EAAA,GACXE,EADWF,EAAA,GAAAG,EAEGJ,mBAAS,IAFZK,EAAAvR,OAAAoR,GAAA,EAAApR,CAAAsR,EAAA,GAEtBvL,EAFsBwL,EAAA,GAEZC,EAFYD,EAAA,GAAAE,EAGCP,mBAAS,IAHVQ,EAAA1R,OAAAoR,GAAA,EAAApR,CAAAyR,EAAA,GAGtBjM,EAHsBkM,EAAA,GAGbC,EAHaD,EAAA,GAAAE,EAIOV,mBAAS,IAJhBW,EAAA7R,OAAAoR,GAAA,EAAApR,CAAA4R,EAAA,GAItB5L,EAJsB6L,EAAA,GAIVC,EAJUD,EAAA,GAc7B,OACI7K,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,QAAMW,SAAU,SAACR,GAAD,OAVH,SAACA,GAClBA,EAAMC,iBACN,IAAMoB,EAAS1B,EAAM9B,YAAYrF,GAC3BmS,EAAU,CAAEjM,YAAWC,WAAUP,UAASQ,aAAYyC,UAC5D1B,EAAMiL,aAAaD,GAMY5K,CAAaC,KACpCJ,EAAA7G,EAAA8G,cAAA,iCACAD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,SACIzH,KAAK,OACLsI,UAAQ,EACRD,YAAY,sBACZN,MAAOzB,EACPoD,SAAU,SAAC6G,GAAD,OAAOsB,EAAatB,EAAEzI,OAAOC,WAG/CP,EAAA7G,EAAA8G,cAAA,WAEAD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,SACIzH,KAAK,OACLsI,UAAQ,EACRD,YAAY,YACZN,MAAOxB,EACPmD,SAAU,SAAC6G,GAAD,OAAOyB,EAAYzB,EAAEzI,OAAOC,WAG9CP,EAAA7G,EAAA8G,cAAA,WAEAD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,SACIzH,KAAK,OACLsI,UAAQ,EACRD,YAAY,iBACZN,MAAO/B,EACP0D,SAAU,SAAC6G,GAAD,OAAO4B,EAAW5B,EAAEzI,OAAOC,WAG7CP,EAAA7G,EAAA8G,cAAA,WAEAD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,SACIzH,KAAK,OACLsI,UAAQ,EACRD,YAAY,YACZN,MAAOvB,EACPkD,SAAU,SAAC6G,GAAD,OAAO+B,EAAc/B,EAAEzI,OAAOC,WAGhDP,EAAA7G,EAAA8G,cAAA,WACAD,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,gBACAwH,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,gBAAT,sBAiBDtB,YAXS,SAAA1B,GACpB,MAAO,CACHD,YAAaC,EAAMD,cAGA,SAAA3E,GACvB,MAAO,CACH0R,aAAc,SAACC,GAAD,OAAe3R,EAASuD,EAAeoO,OAI9CrL,CAA6CoK,ICP5D,IAaepK,eAbS,SAAA1B,GACpB,MAAO,CACHxB,OAAQwB,EAAMxB,OACduB,YAAaC,EAAMD,cAGA,SAAA3E,GACvB,MAAO,CACHgE,aAAc,SAAC1E,EAAIsS,GAAL,OAAuB5R,E1B9CX,SAACV,EAAI8D,GACnC,sBAAAzB,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAO5B,GAAP,IAAA+I,EAAA7I,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEwBC,IAAMyI,IAAN,gBAAAvI,OAA0BnB,GAAM8D,GAFxD,OAAA2F,EAAAlH,EAAAnB,KAESR,EAFT6I,EAES7I,KACRU,QAAQC,IAAI,eAAgBX,GAC5BF,EAASgE,GAAa9D,IACtBF,EAASsD,EAAiBpD,EAAKZ,GAAIY,IALpC2B,EAAAvB,KAAA,iBAAAuB,EAAAxB,KAAA,GAAAwB,EAAAlB,GAAAkB,EAAA,SAOCjB,QAAQC,IAARgB,EAAAlB,IAPD,yBAAAkB,EAAAf,SAAAc,EAAA,kBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,G0B6CkD2Q,CAAmBvS,EAAIsS,OAK9DtL,CArFR,SAAsBG,GAAO,IAAAkK,EACEC,mBAAS,IADXC,EAAAnR,OAAAoR,GAAA,EAAApR,CAAAiR,EAAA,GACzBnL,EADyBqL,EAAA,GACdE,EADcF,EAAA,GAAAG,EAEAJ,mBAAS,IAFTK,EAAAvR,OAAAoR,GAAA,EAAApR,CAAAsR,EAAA,GAEzBvL,EAFyBwL,EAAA,GAEfC,EAFeD,EAAA,GAAAE,EAGFP,mBAAS,IAHPQ,EAAA1R,OAAAoR,GAAA,EAAApR,CAAAyR,EAAA,GAGzBjM,EAHyBkM,EAAA,GAGhBC,EAHgBD,EAAA,GAAAE,EAIIV,mBAAS,IAJbW,EAAA7R,OAAAoR,GAAA,EAAApR,CAAA4R,EAAA,GAIzB5L,EAJyB6L,EAAA,GAIbC,EAJaD,EAAA,GAsBhC,OACI7K,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,QAAMW,SAAU,SAACR,GAAD,OAlBH,SAACA,GAClBA,EAAMC,iBACNnG,QAAQC,IAAI,sCAAuC4F,GACnD,IAAM0B,EAAS1B,EAAM9B,YAAYrF,GAC3BA,EAAKmH,EAAMrD,OAAO9D,GAClBmS,EAAU,CAAEjM,YAAWC,WAAUP,UAASQ,aAAYyC,UAC5D,IAAK,IAAIoC,KAAOkH,EACS,KAAjBA,EAAQlH,WACDkH,EAAQlH,GAGvB9D,EAAMzC,aAAa1E,EAAImS,GAOQ5K,CAAaC,KACpCJ,EAAA7G,EAAA8G,cAAA,gCACAD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,SACIzH,KAAK,OACLqI,YAAY,sBACZN,MAAOzB,EACPoD,SAAU,SAAC6G,GAAD,OAAOsB,EAAatB,EAAEzI,OAAOC,WAG/CP,EAAA7G,EAAA8G,cAAA,WAEAD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,SACIzH,KAAK,OACLqI,YAAY,YACZN,MAAOxB,EACPmD,SAAU,SAAC6G,GAAD,OAAOyB,EAAYzB,EAAEzI,OAAOC,WAG9CP,EAAA7G,EAAA8G,cAAA,WAEAD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,SACIzH,KAAK,OACLqI,YAAY,iBACZN,MAAO/B,EACP0D,SAAU,SAAC6G,GAAD,OAAO4B,EAAW5B,EAAEzI,OAAOC,WAG7CP,EAAA7G,EAAA8G,cAAA,WAEAD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,SACIzH,KAAK,OACLqI,YAAY,YACZN,MAAOvB,EACPkD,SAAU,SAAC6G,GAAD,OAAO+B,EAAc/B,EAAEzI,OAAOC,WAGhDP,EAAA7G,EAAA8G,cAAA,WACAD,EAAA7G,EAAA8G,cAAA,UAAQzH,KAAK,UAAb,sBACAwH,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,gBAAT,wBChEHkK,GAAb,SAAA1G,GACI,SAAA0G,IAAc,IAAAhK,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAA6Q,IACVhK,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAAoS,GAAA5J,KAAAjH,QAaJ+C,aAAe,WACX8D,EAAKW,SAAS,CAAEU,SAAS,KAbzBrB,EAAKlD,MAAQ,CACTuE,SAAS,GAEbrB,EAAK9D,aAAe8D,EAAK9D,aAAaqE,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKsB,aAAetB,EAAKsB,aAAaf,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KANVA,EADlB,OAAApI,OAAA6L,GAAA,EAAA7L,CAAAoS,EAAA1G,GAAA1L,OAAA8L,GAAA,EAAA9L,CAAAoS,EAAA,EAAAvH,IAAA,oBAAAtD,MAAA,WAUQ,IAAM3H,EAAK2B,KAAKwF,MAAMrD,OAAO9D,GAC7B2B,KAAKwF,MAAMxC,kBAAkB3E,GAC7B2B,KAAKwF,MAAMsL,oBAZnB,CAAAxH,IAAA,eAAAtD,MAAA,eAAA+K,EAAAtS,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,EAmBuBT,GAnBvB,OAAAM,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAqBkBW,KAAKwF,MAAMpD,aAAa/D,GArB1C,OAsBY2B,KAAKwF,MAAM6C,gBAtBvBlJ,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAwBYQ,QAAQC,IAART,EAAAO,IAxBZ,wBAAAP,EAAAU,SAAAf,EAAAkB,KAAA,4BAAAF,GAAA,OAAAiR,EAAAhR,MAAAC,KAAAC,YAAA,KAAAqJ,IAAA,SAAAtD,MAAA,WA8Ba,IAAAsC,EAAAtI,KACCmC,EAASnC,KAAKwF,MAAMrD,OACpB6O,EAAehR,KAAKwF,MAAMb,YAO1BsM,EAAqBD,EALExN,OAAO,SAAC0N,GAC7B,OACIA,EAAOvE,WAAaxK,EAAO9D,KAKvC,OAAK8D,EAIGsD,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,sBAAcvD,EAAOoC,UAArB,IAAiCpC,EAAOqC,UACxCiB,EAAA7G,EAAA8G,cAAA,yBAAiBvD,EAAOsC,YACxBgB,EAAA7G,EAAA8G,cAAA,uBAAevD,EAAO8B,SACtBwB,EAAA7G,EAAA8G,cAAA,YAC4B,IAAvB1F,KAAK2D,MAAMuE,SAAoBzC,EAAA7G,EAAA8G,cAACyL,GAAD,OAEpC1L,EAAA7G,EAAA8G,cAAA,YAC4B,IAAvB1F,KAAK2D,MAAMuE,SACRzC,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS,kBAAM2C,EAAKvF,iBAA5B,kBAGR0C,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS,kBAAM2C,EAAKH,aAAahG,EAAO9D,MAAhD,iBACAoH,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,mCAA2BvD,EAAOoC,UAAlC,IAA8CpC,EAAOqC,SAArD,KACAiB,EAAA7G,EAAA8G,cAAA,UAEQuL,EAAQxN,IAAI,SAACyN,GACT,OACIzL,EAAA7G,EAAA8G,cAAA,MAAI4D,IAAK4H,EAAO7S,IACZoH,EAAA7G,EAAA8G,cAAA,oBAAYwL,EAAO9D,iBACnB3H,EAAA7G,EAAA8G,cAAA,oBAAYwL,EAAOxE,YAxB5C,uCA1CnBmE,EAAA,CAAkCjH,IAAMhC,WAiGzBvC,eAdS,SAAC1B,GACrB,MAAO,CACHxB,OAAQwB,EAAMxB,OACduB,YAAaC,EAAMD,YACnBiB,YAAahB,EAAMgB,cAGA,SAAC5F,GACxB,MAAO,CACHiE,kBAAmB,SAAC3E,GAAD,OAAQU,EAASiE,GAAkB3E,KACtD+D,aAAc,SAAC/D,GAAD,OAAQU,E5BlDG,SAAAV,GAC7B,sBAAAqC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA8B,EAAM5B,GAAN,OAAAJ,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEOC,IAAMuB,OAAN,gBAAArB,OAA6BnB,IAFpC,OAGCU,EAASqD,EAAa/D,IAHvBuC,EAAAvB,KAAA,eAAAuB,EAAAxB,KAAA,EAAAwB,EAAAlB,GAAAkB,EAAA,SAKCjB,QAAQC,IAARgB,EAAAlB,IALD,wBAAAkB,EAAAf,SAAAc,EAAA,iBAAP,gBAAAK,GAAA,OAAAN,EAAAX,MAAAC,KAAAC,YAAA,G4BiDmCmR,CAAkB/S,KACjDyS,gBAAiB,kBAAM/R,EzBjF7B,eAAAP,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,kCAFpB,OAAAmB,EAAAG,EAAAM,KAEKR,EAFLD,EAEKC,KACRU,QAAQC,IAAI,oCAAqCX,GACjDF,EAjBG,CACLd,KALoB,kBAMpB0G,YAe0B1F,IAJrBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAMHQ,QAAQoB,MAAR5B,EAAAO,IANG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,OyBoFaoF,CAA6CwL,ICtF/CQ,GAAb,SAAAlH,GACI,SAAAkH,IAAc,IAAAxK,EAAA,OAAApI,OAAAqI,GAAA,EAAArI,CAAAuB,KAAAqR,IACVxK,EAAApI,OAAAsI,GAAA,EAAAtI,CAAAuB,KAAAvB,OAAAuI,GAAA,EAAAvI,CAAA4S,GAAApK,KAAAjH,QACK2D,MAAQ,CACTiF,WAAW,EACXC,cAAc,GAElBhC,EAAKiC,UAAYjC,EAAKiC,UAAU1B,KAAf3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACjBA,EAAKkC,aAAelC,EAAKkC,aAAa3B,KAAlB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KACpBA,EAAKmC,WAAanC,EAAKmC,WAAW5B,KAAhB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KAClBA,EAAKoC,cAAgBpC,EAAKoC,cAAc7B,KAAnB3I,OAAA4I,GAAA,EAAA5I,QAAA4I,GAAA,EAAA5I,CAAAoI,KATXA,EADlB,OAAApI,OAAA6L,GAAA,EAAA7L,CAAA4S,EAAAlH,GAAA1L,OAAA8L,GAAA,EAAA9L,CAAA4S,EAAA,EAAA/H,IAAA,oBAAAtD,MAAA,WAaQhG,KAAKwF,MAAMuH,kBAbnB,CAAAzD,IAAA,YAAAtD,MAAA,WAiBQhG,KAAKwH,SAAS,CAAEoB,WAAW,MAjBnC,CAAAU,IAAA,eAAAtD,MAAA,SAoBiB3H,GACT2B,KAAKwH,SAAS,CAAEqB,cAAc,IAC9B7I,KAAKwF,MAAMxC,kBAAkB3E,KAtBrC,CAAAiL,IAAA,aAAAtD,MAAA,WA0BQhG,KAAKwH,SAAS,CAAEoB,WAAW,MA1BnC,CAAAU,IAAA,gBAAAtD,MAAA,WA8BQhG,KAAKwH,SAAS,CAAEqB,cAAc,MA9BtC,CAAAS,IAAA,SAAAtD,MAAA,WAgCa,IAAAsC,EAAAtI,KACC6C,EAAU7C,KAAKwF,MAAM3C,QAC3B,OACI4C,EAAA7G,EAAA8G,cAAA,WAEID,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS3F,KAAK8I,WAAtB,gBACArD,EAAA7G,EAAA8G,cAAA,wBACAD,EAAA7G,EAAA8G,cAACwD,GAAAtK,EAAD,CACIuK,OAAQnJ,KAAK2D,MAAMiF,UACnBQ,aAAa,iBAEb3D,EAAA7G,EAAA8G,cAAC+J,GAAD,CAAW/L,YAAa1D,KAAKwF,MAAM9B,YAAa+M,aAAczQ,KAAKwF,MAAMiL,eAEzEhL,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS3F,KAAKgJ,YAAtB,WAGRvD,EAAA7G,EAAA8G,cAAA,WACK7C,GAAWA,EAAQY,IAAI,SAACtB,GACrB,OACIsD,EAAA7G,EAAA8G,cAAA,OAAK4D,IAAKnH,EAAO9D,IACboH,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS,kBAAM2C,EAAKS,aAAa5G,EAAO9D,MAAM8D,EAAOoC,UAA7D,IAAyEpC,EAAOqC,UAChFiB,EAAA7G,EAAA8G,cAACwD,GAAAtK,EAAD,CACIuK,OAAQb,EAAK3E,MAAMkF,aACnBO,aAAa,iBAEb3D,EAAA7G,EAAA8G,cAAC4L,GAAD,CAAcjJ,cAAeC,EAAKW,gBAClCxD,EAAA7G,EAAA8G,cAAA,UAAQC,QAAS2C,EAAKW,eAAtB,mBA3DpCoI,EAAA,CAAgCzH,IAAMhC,WAoFvBvC,eAdS,SAAC1B,GACrB,MAAO,CACHxB,OAAQwB,EAAMxB,OACdU,QAASc,EAAMd,QACfa,YAAaC,EAAMD,cAGA,SAAC3E,GACxB,MAAO,CACHgO,cAAe,kBAAMhO,EAAS0D,MAC9BgO,aAAc,SAACC,GAAD,OAAe3R,EAASuD,EAAeoO,KACrD1N,kBAAmB,SAAC3E,GAAD,OAAQU,EAASiE,GAAkB3E,OAG/CgH,CAA6CgM,IClF7CE,GAlBA,WACb,OACE9L,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFlB,EAAA7G,EAAA8G,cAAA,OAAKrH,GAAG,cACNoH,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,gBAAT,kBACAlB,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,YAAT,cACAlB,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,eAAT,iBACAlB,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,cAAT,gBACAlB,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,iBAAT,iBACAlB,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,CAAMC,GAAG,YAAT,uBCXF6K,kUAEQxR,KAAKwF,MAAMiM,kBACXC,EAAO1R,KAAKwF,MAAMZ,MAAMnB,IAAI,SAAAkO,GAAS,OAAIA,EAAUtF,OACzDrM,KAAK4R,aAAaF,0IAETzS,GACX,IAGM4S,EAAYC,KAAU9R,KAAK+R,KAAKC,QACnCjD,OAAO,OACPkD,KAAK,QAJY,KAKjBA,KAAK,SANa,KAOlBC,MAAM,SAAU,mBACnBL,EAAUM,UAAU,QACjBlT,KAAKA,GAAMmT,QACXrD,OAAO,QACPkD,KAAK,QAAS,IACdA,KAAK,SAAU,SAACI,GAAD,OAVJ,GAUmBA,IAC9BJ,KAAK,OAAQ,UACbA,KAAK,IAAK,SAACI,EAAWC,GAAZ,OAAsC,GAAZA,IACpCL,KAAK,IAAK,SAACI,GAAD,OAfQ,IAEP,GAa6BA,IAC3CR,EAAUM,UAAU,QACjBlT,KAAKA,GAAMmT,QACXrD,OAAO,QACPkD,KAAK,IAAK,SAACM,EAAW9E,GAAZ,OAAsB,GAAJA,EAAS,KACrCwE,KAAK,IAAK,SAACM,EAAW9E,GAAZ,OApBQ,IAEP,GAkBgC8E,EAAoB,KAC/DC,KAAK,SAAAD,GAAS,OAAIA,qCAEZ,OAAO9M,EAAA7G,EAAA8G,cAAA,OAAKyJ,IAAI,kBA9BRvH,aA4CRvC,eAXS,SAAA1B,GACtB,MAAO,CACLiB,MAAOjB,EAAMiB,QAGU,SAAA7F,GACzB,MAAO,CACL0S,SAAU,kBAAM1S,E1B9BlB,eAAAP,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBC,IAAMC,IAAN,GAAAC,OAAa3B,EAAb,eAFlB,OAAAmB,EAAAG,EAAAM,KAEIR,EAFJD,EAEIC,KACPF,EAVG,CACLd,KAJc,YAKd2G,MAQoB3F,EAAKwT,OAAO,MAH3BtT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAKHQ,QAAQoB,MAAR5B,EAAAO,IALG,yBAAAP,EAAAU,SAAAf,EAAA,iBAAP,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,O0BkCaoF,CAA6CmM,IC1BtDkB,oMAEF1S,KAAKwF,MAAMmN,oDAEJ,IACCC,EAAe5S,KAAKwF,MAApBoN,WACR,OACEnN,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,KAEEpN,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,SAASC,UAAWC,KAChCvN,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWE,KAEhCL,GACCnN,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAA4M,SAAA,KAEE/F,EAAA7G,EAAA8G,cAACwN,GAAD,MAEAzN,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOM,OAAK,EAACL,KAAK,IAAIC,UAAWK,KACjC3N,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOM,OAAK,EAACL,KAAK,gBAAgBC,UAAWlG,KAC7CpH,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOM,OAAK,EAACL,KAAK,cAAcC,UAAWpK,KAC3ClD,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAW9K,KACzCxC,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,eAAeC,UAAW9H,KACtCxF,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,mBAAmBC,UAAW7I,KAC1CzE,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,WAAWC,UAAW1B,KAClC5L,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWlC,KACtCpL,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOM,OAAK,EAACL,KAAK,WAAWC,UAAWM,KACxC5N,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,aAAaC,UAAW1F,KAEpC5H,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOC,KAAK,SAASC,UAAWO,MAKpC7N,EAAA7G,EAAA8G,cAACmN,GAAA,EAAD,CAAOE,UAAWC,aAjCPpL,aAwDJ2L,gBAAWlO,YAfT,SAAC1B,GAChB,MAAO,CAGLiP,aAAcjP,EAAMD,YAAYrF,KAGhB,SAACU,GAAD,MAAe,CACjC4T,iBAAkB,WAChB5T,ErCHF,eAAAyU,EAAA/U,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA4U,EAAM1U,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAwU,GAAA,cAAAA,EAAAtU,KAAAsU,EAAArU,MAAA,cAAAqU,EAAAtU,KAAA,EAEHO,QAAQC,IAAI/B,GAFT6V,EAAArU,KAAA,EAGoBC,IAAMC,IAAN,IAAAC,OAAc3B,EAAd,mBAHpB,OAAAmB,EAAA0U,EAAAjU,KAGKR,EAHLD,EAGKC,KAERF,EAASuB,EAAerB,IALrByU,EAAArU,KAAA,gBAAAqU,EAAAtU,KAAA,EAAAsU,EAAAhU,GAAAgU,EAAA,SAOH/T,QAAQoB,MAAM,+BAAd2S,EAAAhU,IAPG,yBAAAgU,EAAA7T,SAAA4T,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAAzT,MAAAC,KAAAC,YAAA,OqCSwBoF,CAA+BqN,uBCzC1CkB,GAjCA,WACb,OACEnO,EAAA7G,EAAA8G,cAAA,cACED,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,KAAGc,KAAK,wDACNf,EAAA7G,EAAA8G,cAACmO,GAAA,EAAD,CAAcC,MAAM,WAAWC,KAAM,KADvC,WAGAtO,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAA4M,SAAA,wBAEF/F,EAAA7G,EAAA8G,cAAA,OAAKrH,GAAG,eACNoH,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,KAAGc,KAAK,0CACNf,EAAA7G,EAAA8G,cAACsO,GAAA,EAAD,CAAmBD,KAAM,KAD3B,eAGAtO,EAAA7G,EAAA8G,cAAA,KAAGc,KAAK,8CACNf,EAAA7G,EAAA8G,cAACsO,GAAA,EAAD,CAAmBD,KAAM,KAD3B,kBAMFtO,EAAA7G,EAAA8G,cAAA,WACED,EAAA7G,EAAA8G,cAAA,KAAGc,KAAK,0DACNf,EAAA7G,EAAA8G,cAACsO,GAAA,EAAD,CAAmBD,KAAM,KAD3B,oBAGAtO,EAAA7G,EAAA8G,cAAA,KAAGc,KAAK,wCACNf,EAAA7G,EAAA8G,cAACsO,GAAA,EAAD,CAAmBD,KAAM,KAD3B,gBChBUE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECRNC,IAASC,OACP9O,EAAA7G,EAAA8G,cAAC8O,EAAA,EAAD,CAAUrP,MAAOA,IACfM,EAAA7G,EAAA8G,cAACgB,EAAA,EAAD,KACEjB,EAAA7G,EAAA8G,cAAC+O,GAAD,MACAhP,EAAA7G,EAAA8G,cAACgP,GAAD,QAGJC,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d3ace634.chunk.js","sourcesContent":["export const API_URL = 'https://elemental-health.herokuapp.com'\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_ALL_CONDITIONS = 'GET_ALL_CONDITIONS';\nconst ADD_CONDITION = 'ADD_CONDITION';\nconst DELETE_CONDITION = 'DELETE_CONDITION';\nconst UPDATE_CONDITIONS_LIST = 'UPDATE_CONDITIONS_LIST';\nconst getAllConditions = conditions => {\n  return {\n    type: GET_ALL_CONDITIONS,\n    conditions\n  }\n}\nconst addCondition = condition => {\n  return {\n    type: ADD_CONDITION,\n    condition\n  }\n}\nconst deleteCondition = id => {\n  return {\n    type: DELETE_CONDITION,\n    id\n  }\n}\nexport const updateAllConditions = (id, condition) => {\n  return {\n      type: UPDATE_CONDITIONS_LIST,\n      id,\n      condition\n  }\n}\nexport const getAllConditionsThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/conditions/`);\n      dispatch(getAllConditions(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const addConditionThunk = (condition) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/conditions`, condition);\n      dispatch(addCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteConditionThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/api/conditions/${id}`);\n      dispatch(deleteCondition(id));\n      const {data} = await axios.get(`${API_URL}/api/conditions/`);\n      dispatch(getAllConditions(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_CONDITIONS:\n      return action.conditions\n    case ADD_CONDITION:\n      return [...state, action.condition]\n    case DELETE_CONDITION:\n      return state.filter(condition => condition.id !== action.id);\n    case UPDATE_CONDITIONS_LIST:\n      return [...state].map((condition) => {\n          if (condition.id === action.id) {\n              return action.condition\n          } else {\n              return condition\n          }\n      })\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nimport {updateAllConditions} from './conditions';\nconst initialState = {};\n\nconst GET_SINGLE_CONDITION = 'GET_SINGLE_CONDITION'\nconst UPDATE_CONDITION = 'UPDATE_CONDITION'\n\nconst getSingleCondition = condition => {\n  return {\n    type: GET_SINGLE_CONDITION,\n    condition\n  }\n}\nconst updateCondition = condition => {\n  return {\n    type: UPDATE_CONDITION,\n    condition\n  }\n}\nexport const getSingleConditionThunk = id => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/conditions/${id}`);\n      dispatch(getSingleCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const updateSingleConditionThunk = (\n  id,\n  condition\n) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.put(\n        `${API_URL}/api/conditions/${id}`,\n        condition\n      );\n      dispatch(updateCondition(data));\n      dispatch(updateAllConditions(data.id, data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SINGLE_CONDITION:\n      return action.condition\n    case UPDATE_CONDITION:\n      let updated = { ...state.condition }\n      updated.name = action.condition.name\n      updated.diagnosed = action.condition.diagnosed\n      updated.typeOfPain = action.condition.address\n      return updated\n    default:\n      return state\n  }\n}\n","import axios from 'axios'\nimport { API_URL } from './API_URL'\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst SET_CURRENT_USER = 'SET_CURRENT_USER'\nconst REMOVE_CURRENT_USER = 'REMOVE_CURRENT_USER'\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst setCurrentUser = user => ({ type: SET_CURRENT_USER, user })\nconst removeCurrentUser = () => ({ type: REMOVE_CURRENT_USER })\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(currentUser = {}, action) {\n  switch (action.type) {\n\n    case SET_CURRENT_USER:\n      return action.user\n\n    case REMOVE_CURRENT_USER:\n      return {}\n\n    default:\n      return currentUser\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const login = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/login`, credentials)\n      // const { data } = await axios.post(`/auth/local/login`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Logging in with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const logout = history => {\n  return async dispatch => {\n    try {\n      await axios.delete(`${API_URL}/auth/local/logout`)\n      dispatch(removeCurrentUser())\n      history.push('/login')\n    } catch (err) {\n      console.error('Logging out was unsuccesful', err)\n    }\n  }\n}\n\n\nexport const signup = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/signup`, credentials)\n      // const { data } = await axios.post(`/auth/local/signup`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Signing up with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const fetchCurrentUser = () => {\n  return async dispatch => {\n    try {\n      console.log(API_URL)\n      const { data } = await axios.get(`/${API_URL}/auth/local/me`)\n      // const { data } = await axios.get(`/auth/local/me`)\n      dispatch(setCurrentUser(data))\n    } catch (err) {\n      console.error('Fetching current user failed', err)\n    }\n  }\n}\n\n/* ------------      HELPER FUNCTIONS     ------------------ */\n\nfunction setUserAndRedirect(user, history, dispatch) {\n  console.log('setUserAndRedirect')\n  console.log(user)\n  dispatch(setCurrentUser(user))\n  history.push(`/profile`)\n}\n","import axios from 'axios'\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst INITIALIZE = 'INITIALIZE_USERS'\nconst CREATE = 'CREATE_USER'\nexport const REMOVE = 'REMOVE_USER'\nconst UPDATE = 'UPDATE_USER'\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst init = users => ({ type: INITIALIZE, users })\nexport const create = user => ({ type: CREATE, user })\nconst remove = id => ({ type: REMOVE, id })\nconst update = user => ({ type: UPDATE, user })\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(users = [], action) {\n  switch (action.type) {\n    case INITIALIZE:\n      return action.users\n\n    case CREATE:\n      return [action.user, ...users]\n\n    case REMOVE:\n      return users.filter(user => user.id !== action.id)\n\n    case UPDATE:\n      return users.map(user => (\n        action.user.id === user.id ? action.user : user\n      ))\n\n    default:\n      return users\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const fetchUsers = () => dispatch => {\n  axios.get('/api/users')\n    .then(res => dispatch(init(res.data)))\n}\n\nexport const removeUser = id => dispatch => {\n  axios.delete(`/api/users/${id}`)\n    .then(() => dispatch(remove(id)))\n    .catch(err => console.error(`Removing user: ${id} unsuccesful`, err))\n}\n\nexport const addUser = user => dispatch => {\n  axios.post('/api/users', user)\n    .then(res => dispatch(create(res.data)))\n    .catch(err => console.error(`Creating user: ${user} unsuccesful`, err))\n}\n\nexport const updateUser = (id, user) => dispatch => {\n  axios.put(`/api/users/${id}`, user)\n    .then(res => dispatch(update(res.data)))\n    .catch(err => console.error(`Updating user: ${user} unsuccesful`, err))\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\n\nconst GET_MEDICATIONS = \"GET_MEDICATIONS\";\nconst NEW_MEDICATION = \"NEW_MEDICATION\";\nconst REMOVE_MEDICATION = \"REMOVE_MEDICATION\";\nconst UPDATE_ALL_MEDS = \"UPDATE_ALL_MEDS\";\n\nconst initialState = [];\n\nconst getMedications = (medications) => ({\n  type: GET_MEDICATIONS,\n  medications,\n});\n\nconst newMedication = (medication) => ({\n  type: NEW_MEDICATION,\n  medication,\n});\n\nconst removeMedication = (id) => ({\n  type: REMOVE_MEDICATION,\n  id,\n});\n\nexport const updateAllMeds = (id, medication) => ({\n  type: UPDATE_ALL_MEDS,\n  id,\n  medication,\n});\n\nexport const fetchMedications = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications`);\n      dispatch(getMedications(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addMedication = (medication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(\n        `${API_URL}/api/medications`,\n        medication\n      );\n      dispatch(newMedication(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nexport const deleteMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`${API_URL}/api/medications/${id}`);\n      dispatch(removeMedication(id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATIONS:\n      return action.medications;\n    case NEW_MEDICATION:\n      return [...state, action.medication];\n    case REMOVE_MEDICATION:\n      return state.filter((med) => med.id !== action.id);\n    case UPDATE_ALL_MEDS:\n      return [...state].map((medication) => {\n        if (medication.id === action.id) {\n          return action.medication;\n        } else {\n          return medication;\n        }\n      });\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\nimport { updateAllMeds } from \"./medications\";\n\nconst GET_MEDICATION = \"GET_MEDICATION\";\nconst UPDATED_MEDICATION = \"UPDATED_MEDICATION\";\nconst GET_ID = \"GET_ID\";\n\nconst initialState = {};\n\nconst getSingleMedication = (medication) => ({\n  type: GET_MEDICATION,\n  medication,\n});\n\nconst getMedId = (medId) => ({\n  type: GET_ID,\n  medId,\n});\n\nconst updateSingleMedication = (id, medication) => ({\n  type: UPDATED_MEDICATION,\n  id,\n  medication,\n});\n\nexport const fetchMedId = (medName) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(\n        `https://rxnav.nlm.nih.gov/REST/rxcui.json?name=${medName}`\n      );\n      console.log(data.idGroup.rxnormId[0]);\n      dispatch(getMedId(data.idGroup.rxnormId[0]));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications/${id}`);\n      dispatch(getSingleMedication(data));\n      dispatch(fetchMedId(data.name));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateMedication = (medication, updatedMedication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(\n        `${API_URL}/api/medications/${medication.id}`,\n        updatedMedication\n      );\n      console.log(\"update\", data);\n      dispatch(updateSingleMedication(data.id, data));\n      dispatch(updateAllMeds(data.id, data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATION:\n      return { ...state, medication: action.medication };\n    case UPDATED_MEDICATION:\n      let updated = { ...state };\n      updated.name = action.medication.name;\n      updated.dosage = action.medication.dosage;\n      updated.frequency = action.medication.frequency;\n      return { ...state, medication: updated };\n    case GET_ID:\n      return { ...state, rxcui: action.medId };\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { API_URL } from './API_URL'\n\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst GET_DOCUMENTS = \"GET_DOCUMENTS\";\nconst UPLOAD_DOCUMENTS = \"UPLOAD_DOCUMENTS\"\n\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst getDocuments = (documents) => ({ type: GET_DOCUMENTS, documents });\nconst uploadDocuments = (documents) => ({ type: UPLOAD_DOCUMENTS, documents });\n\n/* ------------       THUNK CREATORS     ------------------ */\nexport const fetchDocuments = () => {\n  return async (dispatch) => {\n    try {\n      // figure out the api request for Cloudinary\n      const { data } = await axios.get(`${API_URL}/api/documents`);\n      dispatch(getDocuments(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const uploadDocumentsThunk = (documents) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(`${API_URL}/api/documents`, documents)\n      dispatch(uploadDocuments(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function (state = [], action) {\n  switch (action.type) {\n\n    case GET_DOCUMENTS:\n      return action.documents;\n\n    case UPLOAD_DOCUMENTS:\n      return state.concat(action.documents);\n\n    default:\n      return state;\n  }\n}\n\n\n","import axios from 'axios'\n\nconst initialState = []\n\n//ACTION TYPES\nconst ADD_DOCTOR = 'ADD_DOCTOR'\nconst GET_ALL_DOCTORS = 'GET_ALL_DOCTORS'\nconst REMOVE_DOCTOR = 'REMOVE_DOCTOR'\nconst UPDATE_DOCTORS_LIST = 'UPDATE_DOCTORS_LIST'\n\n//ACTION CREATORS\nconst addDoctor = doctor => {\n    return {\n        type: ADD_DOCTOR,\n        doctor\n    }\n}\nconst deleteDoctor = id => {\n    return {\n        type: REMOVE_DOCTOR,\n        id\n    }\n}\n\nconst getAllDoctors = doctors => {\n    return {\n        type: GET_ALL_DOCTORS,\n        doctors\n    }\n}\n\nexport const updateAllDoctors = (id, doctor) => {\n    return {\n        type: UPDATE_DOCTORS_LIST,\n        id,\n        doctor\n    }\n}\n\n//THUNKS\nexport const addDoctorThunk = (doctor) => {\n    return async dispatch => {\n        try {\n            let { data } = await axios.post('/api/doctors', doctor)\n            dispatch(addDoctor(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const deleteDoctorThunk = id => {\n    return async dispatch => {\n        try {\n            await axios.delete(`/api/doctors/${id}`)\n            dispatch(deleteDoctor(id))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const getAllDoctorsThunk = () => {\n    return async dispatch => {\n        try {\n            const { data } = await axios.get('/api/doctors/')\n            dispatch(getAllDoctors(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ALL_DOCTORS:\n            return action.doctors\n        case REMOVE_DOCTOR:\n            return state.filter(doctor => doctor.id !== action.id)\n        case ADD_DOCTOR:\n            return [...state, action.doctor]\n        case UPDATE_DOCTORS_LIST:\n            return [...state].map((doctor) => {\n                if (doctor.id === action.id) {\n                    return action.doctor\n                } else {\n                    return doctor\n                }\n            })\n        default:\n            return state\n    }\n}\n","import axios from 'axios'\nimport { updateAllDoctors } from './doctors'\n\nconst initialState = {}\n\n\nconst SET_SINGLE_DOCTOR = 'SET_SINGLE_DOCTOR'\nconst UPDATE_SINGLE_DOCTOR = 'UPDATE_SINGLE_DOCTOR'\n\n\nexport const setSingleDoctor = (doctor) => {\n    return {\n        type: SET_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\nexport const updateDoctor = (doctor) => {\n    return {\n        type: UPDATE_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\n\nexport const fetchSingleDoctor = (id) => {\n    console.log('inside the thunk')\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.get(`/api/doctors/${id}`)\n            console.log(\"what is data in thunk\", data)\n            dispatch(setSingleDoctor(data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n};\n\nexport const updateSingleDoctor = (id, doctor) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.put(`/api/doctors/${id}`, doctor)\n            console.log(\"what is data\", data)\n            dispatch(updateDoctor(data))\n            dispatch(updateAllDoctors(data.id, data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SINGLE_DOCTOR:\n            return action.doctor\n        case UPDATE_SINGLE_DOCTOR:\n            let updated = { ...state.doctor }\n            updated.firstName = action.doctor.firstName\n            updated.lastName = action.doctor.lastName\n            updated.address = action.doctor.address\n            updated.doctorType = action.doctor.doctorType\n            return updated\n        default:\n            return state\n    }\n}\n\n\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_SCORE = 'GET_SCORE';\nconst ADD_SCORE = 'ADD_SCORE';\n\nconst getScore = score => {\n  return {\n    type: GET_SCORE,\n    score\n  }\n}\nconst addScore = score => {\n  return {\n    type: ADD_SCORE,\n    score\n  }\n}\n\nexport const getScoreThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/score`)\n      dispatch(getScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addScoreThunk = (rate, date, notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/score`, {rate, date, notes})\n      dispatch(addScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SCORE:\n      return action.score\n    case ADD_SCORE:\n      return [\n        ...state,\n        action.score\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_APPOINTMENT = 'GET_APPOINTMENT';\nconst ADD_APPOINTMENT = 'ADD_APPOINTMENT';\n\nconst getAppointment = appointment => {\n  return {\n    type: GET_APPOINTMENT,\n    appointment\n  }\n}\nconst addAppointment = appointment => {\n  return {\n    type: ADD_APPOINTMENT,\n    appointment\n  }\n}\n\nexport const getAppointmentThunk = () => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/dailycheckin/appointment`)\n      console.log('data inside get appointment thunk', data)\n      dispatch(getAppointment(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addAppointmentThunk = (appointmentDate) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/api/dailycheckin/appointment`, { appointmentDate })\n      dispatch(addAppointment(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_APPOINTMENT:\n      return action.appointment\n    case ADD_APPOINTMENT:\n      return [\n        ...state,\n        action.appointment\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_MEDS = 'GET_MEDS';\nconst ADD_MEDS = 'ADD_MEDS';\n\nconst getMedication = med => {\n  return {\n    type: GET_MEDS,\n    med\n  }\n}\nconst addMedication = med => {\n  return {\n    type: ADD_MEDS,\n    med\n  }\n}\n\nexport const getMedicationThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/meds`)\n      console.log(data)\n      dispatch(getMedication(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addMedicationThunk = (notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/meds`, {notes})\n      dispatch(addMedication(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDS:\n      return action.med\n    case ADD_MEDS:\n      return [\n        ...state,\n        action.med\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_CHART = 'GET_CHART';\n\nconst getChart = chart => {\n  return {\n    type: GET_CHART,\n    chart\n  }\n}\n\nexport const getChartThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/score`)\n      dispatch(getChart(data.slice(-60)))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CHART:\n      return action.chart\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport conditions from \"./redux/conditions\";\nimport condition from \"./redux/singleCondition\";\nimport currentUser from \"./redux/auth\";\nimport users from \"./redux/users\";\nimport medications from \"./redux/medications\";\nimport medication from \"./redux/singleMedication\";\nimport documents from \"./redux/documents\";\nimport doctors from \"./redux/doctors\";\nimport doctor from './redux/singleDoctor';\nimport score from './redux/dcCondition';\nimport appointment from './redux/dcDoctor';\nimport med from './redux/dcMedication';\nimport chart from './redux/score';\nconst reducer = combineReducers({\n  users,\n  currentUser,\n  conditions,\n  condition,\n  medications,\n  medication,\n  documents,\n  doctors,\n  doctor,\n  score,\n  appointment,\n  med,\n  chart\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../redux/auth'\n\n\nconst Home = (props) => {\n  console.log(\"home page\")\n  const { firstName } = props.currentUser\n  const { handleClick } = props\n  return (\n    <div>\n      <h1>Welcome {firstName}!</h1>\n      <p>\n        <button type='submit' onClick={handleClick}>Log out</button>\n      </p>\n    </div >\n  )\n}\nconst mapState = ({ currentUser }) => ({ currentUser })\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleClick: () => {\n    dispatch(logout(ownProps.history))\n  }\n})\n\nexport default connect(mapState, mapDispatch)(Home)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { signup } from '../redux/auth'\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Signup = (props) => {\n  const { handleSubmit } = props\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>First Name</label>\n        <input\n          name='firstName'\n          type='text'\n          placeholder='First Name'\n          required\n        />\n        <p>\n          <label>Last Name</label>\n          <input\n            name='lastName'\n            type='text'\n            placeholder='Last Name'\n            required\n          />\n        </p>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          required\n        />\n        <p>\n          <label>Password</label>\n          <input\n            name='password'\n            type='password'\n            required\n          />\n        </p>\n        <button type='submit'>Sign up</button>\n      </form>\n      <div>\n        <span>OR</span>\n      </div>\n      <p>\n        <a\n          target='_self'\n          href='/auth/google'\n        >\n          <i />\n          <span>Sign up with Google</span>\n        </a>\n        <a\n          target='_self'\n          href='/auth/facebook'\n        >\n          <i />\n          <span>Sign up with Facebook</span>\n        </a>\n      </p>\n    </div>\n  )\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: event => {\n    event.preventDefault()\n    const firstName = event.target.firstName.value\n    const lastName = event.target.lastName.value\n    const email = event.target.email.value\n    const password = event.target.password.value\n    const credentials = { firstName, lastName, email, password }\n    dispatch(signup(credentials, ownProps.history))\n  }\n})\n\nexport default connect(null, mapDispatch)(Signup)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../redux/auth'\nimport { API_URL } from '../redux/API_URL';\nimport { Link } from 'react-router-dom'\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Login = (props) => {\n  console.log('Login')\n  const { handleSubmit } = props\n  console.log('login page')\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          required\n        />\n        <p>\n          <label>Password</label>\n          <input\n            name='password'\n            type='password'\n            required\n          />\n        </p>\n        <button type='submit'>Log in</button>\n      </form>\n      <div>\n        <span>OR</span>\n      </div>\n      <p>\n        <a\n          target='_self'\n          href={`${API_URL}/auth/google`}\n        >\n          <i />\n          <span>Log in with Google</span>\n        </a>\n        <a\n          target='_self'\n          href={`${API_URL}/auth/facebook`}\n        >\n          <i />\n          <span>Log in with Facebook</span>\n        </a>\n      </p>\n\n\n      <p>\n        <Link to='/signup'>\n          Sign up here\n        </Link>\n      </p>\n    </div>\n  )\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: event => {\n    event.preventDefault()\n    const email = event.target.email.value\n    const password = event.target.password.value\n    const credentials = { email, password }\n    dispatch(login(credentials, ownProps.history))\n  }\n})\n\nexport default connect(null, mapDispatch)(Login)\n\n","import React, { Component } from \"react\";\nclass AddConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const userId = this.props.currentUser.id;\n\n    this.setState({ [evt.target.name]: evt.target.value, userId });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addCondition(this.state);\n    this.setState({\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Add new condition form</h1>\n          <div>\n            <input\n              className=\"input\"\n              placeholder=\"Condition name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </div>\n          <div>\n            <label>\n              Is it diagnosed?\n              <select\n                onChange={this.handleChange}\n                value={this.state.diagnosed}\n                name=\"diagnosed\"\n              >\n                <option value=\"\"></option>\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label>\n              Type of pain?\n              <select\n                onChange={this.handleChange}\n                value={this.state.typeOfPain}\n                name=\"typeOfPain\"\n              >\n                <option value=\"\"></option>\n                <option value=\"mental health\">mental health</option>\n                <option value=\"physical\">physical</option>\n              </select>\n            </label>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default AddConditionForm;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateSingleConditionThunk\n} from '../redux/singleCondition'\nclass UpdateCondition extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value})\n  }\n  handleSubmit(evt) {\n    evt.preventDefault()\n    const id = this.props.condition.id\n    this.props.updateCondition(id, this.state)\n    this.setState({\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    })\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>Update Condition</h1>\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Update Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n        </div>\n        <br />\n\n        <div>\n        <label>\n          Is it diagnosed?\n          <select\n            onChange={this.handleChange}\n            value={this.state.diagnosed}\n            name=\"diagnosed\"\n          >\n            <option value=\"\"></option>\n            <option value=\"yes\">yes</option>\n            <option value=\"no\">no</option>\n          </select>\n        </label>\n        </div>\n        <br />\n\n        <div>\n        <label>\n          Type of pain?\n          <select\n            onChange={this.handleChange}\n            value={this.state.typeOfPain}\n            name=\"typeOfPain\"\n          >\n            <option value=\"\"></option>\n            <option value=\"mental health\">mental health</option>\n            <option value=\"physical\">physical</option>\n          </select>\n        </label>\n        </div>\n        <br />\n        <button type=\"submit\">\n          Submit\n        </button>\n      </form>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n      condition: state.condition,\n      currentUser: state.currentUser\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      updateCondition: (id, condition) => dispatch(updateSingleConditionThunk(id, condition)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateCondition)\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getSingleConditionThunk,\n} from '../redux/singleCondition';\nimport { deleteConditionThunk } from '../redux/conditions';\nimport UpdateCondition from './UpdateCondition';\nclass SingleCondition extends Component {\n  constructor() {\n    super()\n    this.state = {\n      clicked: false\n    }\n    this.updateCondition = this.updateCondition.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n  componentDidMount() {\n    const id = this.props.condition.id;\n    this.props.getSingleCondition(id);\n  }\n  updateCondition = () => {\n    this.setState({ clicked: true })\n  }\n  async handleDelete(id) {\n    try {\n      await this.props.deleteCondition(id)\n      this.props.closeTheModal()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  render() {\n    const condition = this.props.condition;\n    if (!condition) {\n      return \"This condition is not in our system\"\n    } else {\n      return (\n        <div>\n          <div>Condition: {condition.name} </div>\n          <div>Has this been diagnosed?:  {condition.diagnosed}</div>\n          <div>Physical or mental condition?: {condition.typeOfPain}</div>\n          <div>\n            {this.state.clicked && <UpdateCondition />}\n          </div>\n          <div>\n            {!this.state.clicked &&\n              <button onClick={() => this.updateCondition()}>Update Condition</button>\n            }\n          </div>\n          {\n            <button\n              type=\"submit\"\n              onClick={() => this.props.removeCondition(condition.id)}\n            >\n              Remove Condition\n        </button>\n          }\n        </div>\n      )\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    condition: state.condition,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSingleCondition: id => dispatch(getSingleConditionThunk(id)),\n    removeCondition: id => dispatch(deleteConditionThunk(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCondition)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllConditionsThunk, addConditionThunk } from '../redux/conditions';\nimport { getSingleConditionThunk } from '../redux/singleCondition';\nimport AddConditionForm from './AddConditionForm';\nimport SingleCondition from './SingleCondition';\nimport ReactModal from 'react-modal';\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nclass Conditions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      showDocModal: false\n    }\n    this.openModal = this.openModal.bind(this)\n    this.openDocModal = this.openDocModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.closeDocModal = this.closeDocModal.bind(this)\n  }\n  componentDidMount() {\n    this.props.getAllConditions();\n  }\n  openModal() {\n    this.setState({ showModal: true })\n  }\n\n  openDocModal(id) {\n    this.setState({ showDocModal: true })\n    this.props.getSingleCondition(id)\n  }\n\n  closeModal() {\n    this.setState({ showModal: false })\n  }\n\n  closeDocModal() {\n    this.setState({ showDocModal: false })\n  }\n  render() {\n    const conditions = this.props.conditions;\n    return (\n      <div>\n        <button onClick={this.openModal}>Add a Condition</button>\n        <h1>My Conditions</h1>\n        <div>\n          <ReactModal\n            isOpen={this.state.showModal}\n            contentLabel=\"Example Modal\"\n          >\n            <AddConditionForm currentUser={this.props.currentUser} addCondition={this.props.addCondition} />\n            <button onClick={this.closeModal}>close</button>\n          </ReactModal>\n        </div>\n        <div>\n          {conditions && conditions.map((condition) => {\n            return (\n              <div key={condition.id}>\n                <button onClick={() => this.openDocModal(condition.id)}>{condition.name}</button>\n                <ReactModal\n                  isOpen={this.state.showDocModal}\n                  contentLabel=\"Example Modal\"\n                >\n                  <SingleCondition closeTheModal={this.closeDocModal} />\n                  <button onClick={this.closeDocModal}>close</button>\n                </ReactModal>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    conditions: state.conditions,\n    currentUser: state.currentUser,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllConditions: () => dispatch(getAllConditionsThunk()),\n    addCondition: (condition) => dispatch(addConditionThunk(condition)),\n    getSingleCondition: (id) => dispatch(getSingleConditionThunk(id))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Conditions)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMedication } from \"../redux/medications\";\n\nclass AddMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"\", dosage: \"\", frequency: \"\", userId: 0 };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleChange(event) {\n    const currentUser = this.props.currentUser.id;\n    this.setState({ userId: currentUser });\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({ name: \"\", dosage: \"\", frequency: \"\", userId: 0 });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Medication Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return { addMedication: (medication) => dispatch(addMedication(medication)) };\n};\n\nexport default connect(mapState, mapDispatch)(AddMedication);\n","import React from \"react\";\n\nconst RemoveMedication = (props) => {\n  const { medication, remove } = props;\n\n  return (\n    <div>\n      <button type=\"sumbit\" onClick={() => remove(medication.id)}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default RemoveMedication;\n","import React from \"react\";\n\nexport default class UpdateMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"\", dosage: \"\", frequency: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const medication = this.props.medication;\n    const updated = this.state;\n    console.log(\"SUMBIT\", medication, updated);\n    this.props.update(medication, updated);\n\n    this.props.close();\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Updated Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Updated Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Updated Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <br />\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n// const mapDispatch = (dispatch) => {\n//   return {\n//     update: (medication, updatedMedication) =>\n//       dispatch(updateMedication(medication, updatedMedication)),\n//   };\n// };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMedication, updateMedication } from \"../redux/singleMedication\";\nimport UpdateMedication from \"./UpdateMedication\";\n\nexport class SingleMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { update: false };\n\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n  componentDidMount() {\n    try {\n      const id = this.props.selected.id || this.props.medication;\n      this.props.loadSingleMedication(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleCancel() {\n    this.setState({ update: false });\n  }\n  handleClose(id) {\n    // this.props.loadSingleMedication(id);\n    this.setState({ update: false });\n  }\n\n  handleOpen() {\n    this.setState({ update: true });\n  }\n\n  handleUpdate(medication, updatedMedication) {\n    this.props.update(medication, updatedMedication);\n  }\n\n  render() {\n    const medication = this.props.medication;\n    const rxcui = this.props.rxcui;\n\n    return (\n      <div>\n        {/* {this.state.view && (\n          <> */}\n        {medication && !this.state.update && (\n          <div>\n            <p>{medication.name}</p>\n            <p>{medication.dosage}</p>\n            <p>{medication.frequency}</p>\n            <p>{rxcui}</p>\n            {/*\n                <RemoveMedication\n                  medication={medication}\n                  remove={this.props.remove}\n                /> */}\n            <button type=\"button\" onClick={() => this.handleOpen()}>\n              Update Medication Info\n            </button>\n          </div>\n        )}\n        {medication && this.state.update && (\n          <div>\n            <UpdateMedication\n              medication={medication}\n              close={this.handleClose}\n              update={this.handleUpdate}\n            />\n            <button type=\"button\" onClick={() => this.handleCancel()}>\n              Cancel Update\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    medication: state.medication.medication,\n    rxcui: state.medication.rxcui,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadSingleMedication: (id) => dispatch(fetchMedication(id)),\n    update: (medication, updatedMedication) =>\n      dispatch(updateMedication(medication, updatedMedication)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SingleMedication);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { fetchMedications, deleteMedication } from \"../redux/medications\";\nimport AddMedication from \"./AddMedication\";\nimport RemoveMedication from \"./RemoveMedication\";\nimport SingleMedication from \"./SingleMedication\";\n\nclass Medications extends React.Component {\n  constructor() {\n    super();\n    this.state = { selected: null, add: false };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchMedications();\n  }\n\n  handleSelect(medication) {\n    this.setState({ selected: medication, add: false });\n  }\n\n  handleAdd() {\n    this.setState({ selected: null, add: true });\n  }\n\n  handleClose() {\n    this.setState({ selected: null, add: false });\n  }\n\n  handleRemove(id) {\n    this.props.remove(id);\n    this.handleClose();\n  }\n\n  render() {\n    const { medications, remove } = this.props;\n\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Saved Medications</h3>\n          <div className=\"scroll\">\n            {medications &&\n              medications.map((medication) => {\n                return (\n                  <div className=\"listItem\" key={medication.id}>\n                    <>\n                      <button\n                        className=\"medName\"\n                        type=\"button\"\n                        onClick={() => this.handleSelect(medication)}\n                      >\n                        {medication.name}\n                      </button>\n                    </>\n                    <RemoveMedication medication={medication} remove={remove} />\n                  </div>\n                );\n              })}\n          </div>\n          <button type=\"button\" onClick={() => this.handleAdd()}>\n            Add a Medication\n          </button>\n        </div>\n        <div className=\"column\">\n          <div className=\"modal\">\n            {this.state.add && (\n              <>\n                <AddMedication />\n                <button type=\"button\" onClick={() => this.handleClose()}>\n                  X\n                </button>\n              </>\n            )}\n\n            {this.state.selected && (\n              <>\n                <button type=\"button\" onClick={() => this.handleClose()}>\n                  X\n                </button>\n\n                <SingleMedication\n                  selected={this.state.selected}\n                  remove={remove}\n                  // closeModal={this.handleClose}\n                />\n\n                <RemoveMedication\n                  medication={this.state.selected}\n                  remove={this.handleRemove}\n                  // close={this.handleClose}\n                />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    medications: state.medications,\n    currentUser: state.currentUser,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMedications: () => dispatch(fetchMedications()),\n    remove: (id) => dispatch(deleteMedication(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Medications);\n","import React, { Component } from 'react';\nclass DCMedicationForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      notes: '',\n      medicationId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const medicationId = this.props.eachMed.id;\n    this.setState({ medicationId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({\n      isClicked: false,\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const med = this.props.eachMed;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {med.name}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  Any notes on how this medication is making you feel?\n            <input\n                    className='input'\n                    placeholder='notes'\n                    type='text'\n                    name='notes'\n                    onChange={this.handleChange}\n                    value={this.state.notes}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n\n      </form>\n    )\n  }\n}\nexport default DCMedicationForm;\n","import React, { Component } from 'react';\nclass DCConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: new Date(),\n      notes: '',\n      conditionId: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const conditionId = this.props.condition.id;\n    this.setState({ conditionId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addScore(this.state);\n    this.setState({\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: '',\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const condition = this.props.condition;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {condition.name}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  How much is this affecting you today? 1 (not too much) to 10 (so very much):\n            <input\n                    className='input'\n                    placeholder='1-10'\n                    type='text'\n                    name='rate'\n                    onChange={this.handleChange}\n                    value={this.state.rate}\n                  />\n                </label>\n              </div>\n              <div>\n                <label>\n                  Notes on how I feel:\n            <input\n                    className='input'\n                    placeholder='Notes'\n                    type='text'\n                    name='notes'\n                    onChange={this.handleChange}\n                    value={this.state.notes}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n      </form>\n    )\n  }\n}\nexport default DCConditionForm;\n","import React, { Component } from 'react';\nclass DCDoctorForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      time: '',\n      doctorId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const doctorId = this.props.doctor.id;\n    this.setState({ doctorId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addAppointment(this.state);\n    this.setState({\n      isClicked: false,\n      time: '',\n      doctorId: 0\n    })\n  }\n  render() {\n    const doctor = this.props.doctor;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {doctor.firstName} {doctor.lastName}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  Time of your appointment\n              <input\n                    className='input'\n                    placeholder='HH:MM'\n                    type='text'\n                    name='time'\n                    onChange={this.handleChange}\n                    value={this.state.time}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n      </form>\n    )\n  }\n}\nexport default DCDoctorForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getScoreThunk, addScoreThunk } from '../redux/dcCondition';\nimport { getAppointmentThunk, addAppointmentThunk } from '../redux/dcDoctor';\nimport { getMedicationThunk, addMedicationThunk } from '../redux/dcMedication';\nimport DCMedicationForm from './DCMedicationForm';\nimport DCConditionForm from './DCConditionForm';\nimport DCDoctorForm from './DCDoctorForm';\nimport { getAllDoctorsThunk } from '../redux/doctors'\nclass DailyCheckin extends Component {\n  componentDidMount() {\n    this.props.getScore();\n    this.props.getAllDoctors();\n    this.props.getMedication();\n  }\n  render() {\n    const score = this.props.score;\n    const doctors = this.props.doctors;\n    const med = this.props.med;\n    return (\n      <div>\n        <h1>Daily checkin</h1>\n        <h3>What conditions are you dealing with today?</h3>\n        {\n          score && score.map(condition => {\n            return (\n              <div key={condition.id}>\n                <DCConditionForm condition={condition} addScore={this.props.addScore} />\n              </div>\n            )\n          })\n        }\n        <h3>Do you have an appointment with a doctor today?</h3>\n        {\n          doctors && doctors.map(doctor => {\n            return (\n              <div key={doctor.id}>\n                <DCDoctorForm doctor={doctor} addAppointment={this.props.addAppointment} />\n              </div>\n            )\n          })\n        }\n        <h3>What medications are you taking today?</h3>\n        {\n          med && med.map(eachMed => {\n            return (\n              <div key={eachMed.id}>\n                <DCMedicationForm eachMed={eachMed} addMedication={this.props.addMedication} />\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    score: state.score,\n    appointment: state.appointment,\n    doctors: state.doctors,\n    med: state.med\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getScore: () => dispatch(getScoreThunk()),\n    addScore: (score) => dispatch(addScoreThunk(score)),\n    getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n    addAppointment: (appointment) => dispatch(addAppointmentThunk(appointment)),\n    getMedication: () => dispatch(getMedicationThunk()),\n    addMedication: (med) => dispatch(addMedicationThunk(med))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyCheckin)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchDocuments } from '../redux/documents'\nimport { Link } from 'react-router-dom'\n\nexport class Documents extends Component {\n  componentDidMount() {\n    this.props.fetchDocuments()\n  }\n\n  render() {\n    const { documents } = this.props.currentUser\n    return (\n      <>\n        {\n          !documents ? 'No Documents' :\n            documents.map((doc, i) => (\n              <div key={i}>\n                <Link to={`/documents/${i}`}>\n                  <img src={doc.imageUrl}\n                    alt='document' width=\"200\" height=\"200\"\n                  // onError={() => props.onError(doc.public_id)}\n                  />\n                </Link>\n              </div>\n            ))\n        }\n      </>\n    )\n  }\n}\n\nconst mapState = ({ currentUser }, ownProps) => {\n  // const paramId = Number(ownProps.match.params.id)\n  // let singleDocument = {}\n  // if (documents) {\n  //   singleDocument = documents.find((document, i) => i === paramId)\n  // }\n  return {\n    currentUser,\n    // singleDocument,\n  }\n}\n\nconst mapDispatch = { fetchDocuments }\n\nexport default connect(mapState, mapDispatch)(Documents)\n","import React, { Component } from \"react\";\nimport { uploadDocumentsThunk } from '../redux/documents'\nimport { getAllConditionsThunk } from '../redux/conditions'\nimport { getAllDoctorsThunk } from '../redux/doctors'\nimport { connect } from 'react-redux'\n\nexport class UploadDocuments extends Component {\n  constructor() {\n    super()\n    this.state = {\n      description: 'null',\n      type: '',\n      doctorId: 0,\n      conditionId: 0,\n      files: [],\n    }\n    this.changeHandler = this.changeHandler.bind(this)\n    this.uploadHandler = this.uploadHandler.bind(this)\n    this.fileInput = React.createRef()\n  }\n  async componentDidMount() {\n    await this.props.getAllConditionsThunk();\n    await this.props.getAllDoctorsThunk();\n  }\n  changeHandler(e) {\n    // e.preventDefault()\n    console.log('fileinput', this.fileInput)\n    const files = Array.from(this.fileInput.current.files)\n    this.setState({\n      [e.target.name]: e.target.value,\n      files\n    })\n    console.log('state', this.state)\n  }\n\n  uploadHandler(e) {\n    e.preventDefault()\n    //formData is an object\n    const files = Array.from(this.fileInput.current.files)\n    // const files = this.fileInput.current.files\n    console.log('files', this.fileInput.current.files)\n    // const formData = {\n    //   lastModified: files[0].lastModified,\n    //   lastModifiedDate:files[0].lastModifiedDate,\n    //   name: files[0].name,\n    //   size: files[0].size,\n    //   type: files[0].type,\n    //   webkitRelativePath: files[0].webkitRelativePath,\n    // }\n    // files.forEach((file, i) => {\n    //   console.log(file, i)\n    //   formData[i] = file;\n    // })\n    const formData = new FormData();\n    console.log(Object.values(files[0]))\n    for (let i = 0; i < files.length; i++) {\n      console.log(typeof (files[i]), i)\n      formData.append(i, files[i])\n    }\n    console.log('formdata', formData)\n    const { description, type, doctorId, conditionId } = this.state\n    const docInfo = {\n      description,\n      type,\n      doctorId,\n      conditionId,\n      formData,\n    }\n    //post data will need to be an object\n    this.props.uploadDocumentsThunk(docInfo)\n  }\n\n  render() {\n    const conditions = this.props.conditions;\n    const doctors = this.props.doctors;\n    const types = ['Proof of Identity', 'Lab Result', 'Surgical Report', 'Pathology Report', 'Imaging', 'Visit Summary']\n    return (\n      <>\n        <form onSubmit={this.uploadHandler} >\n          <label>Enter a short description of what this document contains: </label>\n          <input\n            name='description'\n            // value={this.state.description}\n            type='text'\n            placeholder='Description'\n            onChange={this.changeHandler}\n          />\n          <label>Select what type of document this is:\n          <select\n              name='type'\n              // value={this.state.type}\n              onChange={this.changeHandler}>\n              {types.map((type, i) => {\n                return (\n                  <option key={i} value={type}>{type}</option>\n                )\n              })\n              }\n            </select>\n          </label>\n          <label>Which doctor is this document associated with?\n          <select\n              name='doctorId'\n              // value={this.state.doctorId}\n              onChange={this.changeHandler}>\n              {!doctors ? 'null' :\n                doctors.map(doctor => {\n                  const { id, firstName, lastName } = doctor\n                  return (\n                    <option key={id} value={id}>{firstName} {lastName}</option>\n                  )\n                })\n              }\n            </select>\n          </label>\n          <label>What condition does this document relate to?\n          <select\n              name='conditionId'\n              // value={this.state.conditionId}\n              onChange={this.changeHandler}>\n              {!conditions ? 'null' :\n                conditions.map(condition => {\n                  const { id, name } = condition\n                  return (\n                    <option key={id} value={id}>{name}</option>\n                  )\n                })\n              }\n            </select>\n          </label>\n          <>\n            <label>Choose a File</label>\n            <input\n              type=\"file\"\n              ref={this.fileInput}\n              onChange={this.changeHandler}\n              multiple\n            />\n          </>\n          <button type=\"submit\">Upload</button>\n        </form>\n      </>\n    );\n  };\n}\nconst mapState = ({ currentUser, conditions, doctors }) => ({ currentUser, conditions, doctors })\n\nconst mapDispatch = { uploadDocumentsThunk, getAllConditionsThunk, getAllDoctorsThunk }\n\nexport default connect(mapState, mapDispatch)(UploadDocuments);\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/auth'\nimport UploadDocuments from './UploadDocuments'\nimport Documents from './Documents'\n\nconst Home = (props) => {\n  const { id, firstName, lastName, email } = props.currentUser\n  const { handleClick } = props\n  return (\n    <div>\n      <h1>User Profile</h1>\n      <h4>Name: {firstName} {lastName}</h4>\n      <h4>Email: {email}</h4>\n      <span><Documents {...props} /></span>\n      <div>\n        Upload your insurance card and ID card:\n      </div>\n      <span><UploadDocuments userid={id} /></span>\n      <p>\n        <button type='submit' onClick={handleClick}>Log out</button>\n      </p>\n    </div >\n  )\n}\nconst mapState = ({ currentUser }) => ({ currentUser })\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleClick: () => {\n    dispatch(logout(ownProps.history))\n  }\n})\n\n\nexport default connect(mapState, mapDispatch)(Home)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addDoctorThunk } from '../redux/doctors'\nimport { Link } from 'react-router-dom'\n\n\nexport function AddDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const userId = props.currentUser.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        props.addNewDoctor(payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Add Your New Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>Add A Doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDoctor)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { updateSingleDoctor } from '../redux/singleDoctor'\nimport { Link } from 'react-router-dom'\n\n\nexport function UpdateDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log('what are props inside update doctor', props)\n        const userId = props.currentUser.id\n        const id = props.doctor.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        for (let key in payload) {\n            if (payload[key] === '') {\n                delete payload[key]\n            }\n        }\n        props.updateDoctor(id, payload)\n        // props.updateAllDocs(id, payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Update This Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>change this doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateDoctor: (id, updatedDoctor) => dispatch(updateSingleDoctor(id, updatedDoctor)),\n        // updateAllDocs: (id, doctor) => dispatch(updateAllDoctors(id, doctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateDoctor)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { getSingleDoctor } from \"../redux/onedoctor\";\nimport UpdateDoctor from './UpdateDoctor'\nimport { fetchSingleDoctor } from \"../redux/singleDoctor\";\nimport { deleteDoctorThunk } from \"../redux/doctors\"\nimport { getAppointmentThunk } from \"../redux/dcDoctor\"\n\nexport class SingleDoctor extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            clicked: false\n        }\n        this.updateDoctor = this.updateDoctor.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n    componentDidMount() {\n        const id = this.props.doctor.id\n        this.props.fetchSingleDoctor(id)\n        this.props.getAppointments()\n    }\n\n    updateDoctor = () => {\n        this.setState({ clicked: true })\n    }\n\n    async handleDelete(id) {\n        try {\n            await this.props.deleteDoctor(id)\n            this.props.closeTheModal()\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n\n    render() {\n        const doctor = this.props.doctor\n        const appointments = this.props.appointment\n        const filterApps = (appointmentArray) => {\n            return (appointmentArray.filter((oneapp) => {\n                return (\n                    oneapp.doctorId === doctor.id)\n            }))\n        }\n        const docApps = filterApps(appointments)\n\n        if (!doctor) {\n            return \"This doctor is not in our system\"\n        } else {\n            return (\n                <div>\n                    <div>Doctor: {doctor.firstName} {doctor.lastName}</div>\n                    <div>Specialty: {doctor.doctorType}</div>\n                    <div>Address: {doctor.address}</div>\n                    <div>\n                        {this.state.clicked === true && <UpdateDoctor />}\n                    </div>\n                    <div>\n                        {this.state.clicked === false &&\n                            <button onClick={() => this.updateDoctor()}>Update Doctor</button>\n                        }\n                    </div>\n                    <button onClick={() => this.handleDelete(doctor.id)}>Delete Doctor</button>\n                    <div>\n                        <div>My Appointments with {doctor.firstName} {doctor.lastName} </div>\n                        <ul>\n                            {\n                                docApps.map((oneapp) => {\n                                    return (\n                                        <li key={oneapp.id}>\n                                            <div>Date: {oneapp.appointmentDate}</div>\n                                            <div>Time: {oneapp.time}</div>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n\n            )\n        };\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser,\n        appointment: state.appointment\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchSingleDoctor: (id) => dispatch(fetchSingleDoctor(id)),\n        deleteDoctor: (id) => dispatch(deleteDoctorThunk(id)),\n        getAppointments: () => dispatch(getAppointmentThunk())\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleDoctor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllDoctorsThunk, addDoctorThunk } from \"../redux/doctors\";\nimport { fetchSingleDoctor } from '../redux/singleDoctor'\nimport { AddDoctor } from \"./AddDoctor\";\nimport ReactModal from 'react-modal'\nimport SingleDoctor from './SingleDoctor'\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nexport class AllDoctors extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            showModal: false,\n            showDocModal: false\n        }\n        this.openModal = this.openModal.bind(this)\n        this.openDocModal = this.openDocModal.bind(this)\n        this.closeModal = this.closeModal.bind(this)\n        this.closeDocModal = this.closeDocModal.bind(this)\n    }\n    componentDidMount() {\n        this.props.getAllDoctors()\n    }\n\n    openModal() {\n        this.setState({ showModal: true })\n    }\n\n    openDocModal(id) {\n        this.setState({ showDocModal: true })\n        this.props.fetchSingleDoctor(id)\n    }\n\n    closeModal() {\n        this.setState({ showModal: false })\n    }\n\n    closeDocModal() {\n        this.setState({ showDocModal: false })\n    }\n    render() {\n        const doctors = this.props.doctors;\n        return (\n            <div>\n\n                <div>\n                    <button onClick={this.openModal}>Add a Doctor</button>\n                    <h1>My Doctors</h1>\n                    <ReactModal\n                        isOpen={this.state.showModal}\n                        contentLabel=\"Example Modal\"\n                    >\n                        <AddDoctor currentUser={this.props.currentUser} addNewDoctor={this.props.addNewDoctor} />\n\n                        <button onClick={this.closeModal}>close</button>\n                    </ReactModal>\n                </div>\n                <div>\n                    {doctors && doctors.map((doctor) => {\n                        return (\n                            <div key={doctor.id}>\n                                <button onClick={() => this.openDocModal(doctor.id)}>{doctor.firstName} {doctor.lastName}</button>\n                                <ReactModal\n                                    isOpen={this.state.showDocModal}\n                                    contentLabel=\"Example Modal\"\n                                >\n                                    <SingleDoctor closeTheModal={this.closeDocModal} />\n                                    <button onClick={this.closeDocModal}>close</button>\n                                </ReactModal>\n                                {/* <Link to={`/doctors/${doctor.id}`}></Link> */}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        doctors: state.doctors,\n        currentUser: state.currentUser\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor)),\n        fetchSingleDoctor: (id) => dispatch(fetchSingleDoctor(id))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AllDoctors);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div>\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div id=\"upperRight\">\n        <Link to=\"/medications\">My Medications</Link>\n        <Link to=\"/doctors\">My Doctors</Link>\n        <Link to=\"/conditions\">My Conditions</Link>\n        <Link to=\"/documents\">My Documents</Link>\n        <Link to=\"/dailycheckin\">Daily Checkin</Link>\n        <Link to=\"/profile\">Profile</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport {getChartThunk} from '../redux/score';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nclass BarChart extends Component {\n    async componentDidMount() {\n        await this.props.getChart();\n        const info = this.props.chart.map(eachScore => eachScore.rate)\n        this.drawBarChart(info)\n    }\n    drawBarChart(data) {\n      const canvasHeight = 400\n      const canvasWidth = 1000\n      const scale = 20\n      const svgCanvas = d3.select(this.refs.canvas)\n        .append('svg')\n        .attr('width', canvasWidth)\n        .attr('height', canvasHeight)\n        .style('border', '1px solid black')\n      svgCanvas.selectAll('rect')\n        .data(data).enter()\n        .append('rect')\n        .attr('width', 10)\n        .attr('height', (datapoint) => datapoint * scale)\n        .attr('fill', 'yellow')\n        .attr('x', (datapoint, iteration) => iteration * 16)\n        .attr('y', (datapoint) => canvasHeight - datapoint * scale)\n      svgCanvas.selectAll('text')\n        .data(data).enter()\n        .append('text')\n        .attr('x', (dataPoint, i) => i * 16 + 10)\n        .attr('y', (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n        .text(dataPoint => dataPoint)\n      }\n    render() { return <div ref=\"canvas\"></div> }\n}\n\nconst mapStateToProps = state => {\n  return {\n    chart: state.chart,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getChart: () => dispatch(getChartThunk()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport Conditions from \"./Conditions\";\nimport Medications from \"./Medications\";\nimport { fetchCurrentUser } from \"../redux/auth\";\nimport DailyCheckin from \"./DailyCheckin\";\nimport SingleCondition from \"./SingleCondition\";\nimport Documents from \"./Documents\"\n// import SingleDocument from './SingleDocument'\nimport Profile from \"./Profile\"\nimport AllDoctors from \"./AllDoctors\"\nimport SingleDoctor from \"./SingleDoctor\";\nimport SingleMedication from \"./SingleMedication\";\nimport Navbar from \"./Navbar\";\nimport BarChartCondition from './BarChartCondition'\n\n/* -----------------    COMPONENT     ------------------ */\n\nclass Root extends Component {\n  componentDidMount() {\n    this.props.fetchInitialData();\n  }\n  render() {\n    const { isLoggedIn } = this.props;\n    return (\n      <Switch>\n        {/* Routes placed here are available to all visitors */}\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n\n        {isLoggedIn && (\n          <>\n            {/* Routes placed here are only available after logging in */}\n            <Navbar />\n\n            <Route exact path='/' component={Home} />\n            <Route exact path='/dailycheckin' component={DailyCheckin} />\n            <Route exact path='/conditions' component={Conditions} />\n            <Route path='/conditions/:id' component={SingleCondition} />\n            <Route path=\"/medications\" component={Medications} />\n            <Route path=\"/medications/:id\" component={SingleMedication} />\n            <Route path=\"/doctors\" component={AllDoctors} />\n            <Route path=\"/doctors/:id\" component={SingleDoctor} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/documents\" component={Documents} />\n            {/* <Route path=\"/documents/:id\" component={SingleDocument} /> */}\n            <Route path='/chart' component={BarChartCondition} />\n          </>\n        )}\n\n        {/* Displays our Login component as a fallback */}\n        <Route component={Login} />\n      </Switch>\n    );\n  }\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapState = (state) => {\n  return {\n    // Being 'logged in' for our purposes will be defined has having a state.user that has a truthy id.\n    // Otherwise, state.user will be an empty object, and state.user.id will be falsey\n    isLoggedIn: !!state.currentUser.id,\n  };\n};\nconst mapDispatch = (dispatch) => ({\n  fetchInitialData: () => {\n    dispatch(fetchCurrentUser());\n  },\n});\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Root));\n","import React from \"react\";\nimport { GoMarkGithub } from \"react-icons/go\";\nimport { AiOutlineLinkedin } from \"react-icons/ai\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        <a href=\"https://github.com/2006-ghp-capstone-team-c/capstone\">\n          <GoMarkGithub color=\"##e36397\" size={32} /> GitHub\n        </a>\n        <>September 2020</>\n      </div>\n      <div id=\"bottomRight\">\n        <div>\n          <a href=\"https://www.linkedin.com/in/meganleaf/\">\n            <AiOutlineLinkedin size={25} /> Megan Leaf\n          </a>\n          <a href=\"https://www.linkedin.com/in/biligma-oyola/\">\n            <AiOutlineLinkedin size={25} />\n            Biligma Oyola\n          </a>\n        </div>\n\n        <div>\n          <a href=\"https://www.linkedin.com/in/emma-seely-katz-b4386a1a3/\">\n            <AiOutlineLinkedin size={25} /> Emma Seely-Katz\n          </a>\n          <a href=\"https://www.linkedin.com/in/loowang/\">\n            <AiOutlineLinkedin size={25} /> Lu Wang\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./store\";\nimport Root from \"./components/Root\";\nimport Footer from \"./components/Footer\";\nimport * as serviceWorker from './serviceWorker';\nimport './style.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Root />\n      <Footer />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}