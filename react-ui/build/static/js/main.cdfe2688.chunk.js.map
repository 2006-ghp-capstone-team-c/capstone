{"version":3,"sources":["redux/API_URL.js","redux/conditions.js","redux/singleCondition.js","redux/auth.js","redux/users.js","redux/medications.js","redux/singleMedication.js","redux/singleDocument.js","redux/documents.js","redux/doctors.js","redux/singleDoctor.js","redux/dcCondition.js","redux/dcDoctor.js","redux/dcMedication.js","redux/score.js","store.js","utils/update-donut.js","components/datavis/doctor-appointment-donut.js","components/lineChart/Axis.js","components/lineChart/XY-axis.js","components/lineChart/Line.js","components/lineChart/LineChartCondition.js","components/AddDoctor.js","components/AddConditionForm.js","components/AddMedication.js","components/Home.js","components/Signup.js","components/Login.js","components/UpdateCondition.js","components/SingleCondition.js","components/Conditions.js","components/RemoveMedication.js","components/UpdateMedication.js","components/SingleMedication.js","components/Medications.js","components/DCMedicationForm.js","components/DCConditionForm.js","components/DCDoctorForm.js","components/DailyCheckin.js","components/UploadForm.js","components/UpdateDocument.js","components/SingleDocument.js","components/UploadDocuments.js","components/Documents.js","components/IdentityUploadForm.js","components/UploadProofOfIdentity.js","components/UpdateProofOfIdentity.js","components/ProofOfIdentity.js","components/Profile.js","components/UpdateDoctor.js","components/SingleDoctor.js","components/AllDoctors.js","utils/history.js","components/Navbar.js","components/BarChartCondition.js","components/AdminDashboard.js","components/Root.js","components/Footer.js","serviceWorker.js","index.js"],"names":["API_URL","initialState","getAllConditions","conditions","type","addCondition","condition","deleteCondition","id","updateAllConditions","getAllConditionsThunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_yield$axios$get","data","wrap","_context","prev","next","axios","get","concat","sent","t0","console","log","stop","_x","apply","this","arguments","addConditionThunk","_ref2","_callee2","_yield$axios$post","_context2","post","_x2","updateCondition","SET_CURRENT_USER","REMOVE_CURRENT_USER","setCurrentUser","user","setUserAndRedirect","history","push","INITIALIZE","CREATE","REMOVE","UPDATE","GET_USERS","remove","getAllUsers","users","newMedication","medication","removeMedication","updateAllMeds","fetchMedications","medications","updateSingleMedication","fetchMedId","medName","idGroup","rxnormId","medId","updateDocument","document","fetchSingleDocument","updateDocumentThunk","formData","_yield$axios$put","put","deleteDocument","fetchDocuments","documents","uploadDocumentThunk","deleteDocumentsThunk","_ref3","_callee3","_context3","delete","_x3","addDoctor","doctor","deleteDoctor","updateAllDoctors","addDoctorThunk","getAllDoctorsThunk","doctors","updateDoctor","getAppointmentThunk","appointment","error","getChartThunk","chart","reducer","combineReducers","length","undefined","action","toConsumableArray","filter","map","currentUser","state","updated","objectSpread","name","diagnosed","typeOfPain","med","dosage","frequency","rxcui","singleDocument","firstName","lastName","address","doctorType","score","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","updateDonut","appointmentData","doctorData","newAppointmentData","colorsArray","countObj","i","doctorId","countAppointments","arrOfDocId","keys","formattedObj","j","Number","colorIndex","count","color","connect","props","react_default","createElement","react_d3_donut_es","innerRadius","outerRadius","transition","svgClass","pieClass","displayTooltip","strokeWidth","Axis","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ref","React","createRef","renderAxis","updateAxis","axis","_this$props","scale","orient","ticks","node","current","axisBottom","axisLeft","select","_this$props2","t","duration","selectAll","_this$props3","transform","className","Component","XYAxis","xScale","yScale","height","xSettings","ySettings","lineChart_Axis","Line","lineGenerator","initialData","d","value","append","datum","attr","updateChart","line","LineChart","weeklyData","bind","assertThisInitialized","monthlyData","getChart","rate","eachScore","date","eachDate","Date","shortDate","String","slice","setState","prevState","weeklyRate","margins","width","scaleBand","domain","rangeRound","padding","scaleLinear","extent","range","nice","x","y","onClick","XY_axis","lineChart_Line","AddDoctor","_useState","useState","_useState2","slicedToArray","setFirstName","_useState3","_useState4","setLastName","_useState5","_useState6","setAddress","_useState7","_useState8","setDoctorType","onSubmit","event","preventDefault","userId","payload","addNewDoctor","handleSubmit","required","placeholder","onChange","e","target","react_router_dom","to","newDoctor","AddConditionForm","handleChange","evt","_this$setState","defineProperty","AddMedication","addMedication","htmlFor","Home","_React$Component","showDoctorModal","showConditionModal","showMedicineModal","openDoctorModal","openConditionModal","openMedicineModal","closeDoctorModal","closeConditionModal","closeMedicineModal","inherits","createClass","key","ReactModal","setAppElement","getAllDoctors","getAppointments","getMedications","appointments","lib_default","isOpen","contentLabel","components_AddDoctor","Fragment","components_AddMedication","components_AddConditionForm","doctor_appointment_donut","LineChartCondition","ownProps","email","password","credentials","signup","href","login","UpdateCondition","updateSingleConditionThunk","SingleCondition","clicked","handleDelete","closeTheModal","_this2","components_UpdateCondition","removeCondition","_yield$axios$get2","deleteConditionThunk","Conditions","showModal","showCondModal","openModal","openCondModal","closeModal","closeCondModal","getSingleCondition","components_SingleCondition","getSingleConditionThunk","RemoveMedication","UpdateMedication","update","close","SingleMedication","handleUpdate","handleClose","selected","loadSingleMedication","err","updatedMedication","handleOpen","UpdateMedication_UpdateMedication","handleCancel","fetchMedication","updateMedication","Medications","add","handleSelect","handleAdd","handleRemove","components_SingleMedication","components_RemoveMedication","deleteMedication","DCMedicationForm","isClicked","notes","medicationId","eachMed","checked","conditionId","DCConditionForm","addScore","DCDoctorForm","time","addAppointment","DailyCheckin","showDocModal","showMedModal","openDocModal","openMedModal","closeDocModal","closeMedModal","getScore","getMedication","components_DCConditionForm","components_DCDoctorForm","components_DCMedicationForm","appointmentDate","uploadHandler","handleFileRead","description","UpdateDocument","_Component","selectedFile","sendFile","_this$props$singleDoc","files","reader","FileReader","readAsDataURL","onload","result","_sendFile","file","upload_preset","abrupt","secure_url","_uploadHandler","_this$state","imageUrl","components_UploadForm","assign","mapDispatch","SingleDocument","closeDocumentModal","src","alt","components_UpdateDocument","UploadDocuments","closeUploadModal","Documents","showDocumentModal","showUploadModal","openUploadModal","openDocumentModal","_openDocumentModal","doc","components_SingleDocument","components_UploadDocuments","IdentityUploadForm","UploadProofOfIdentity","components_IdentityUploadForm","UpdateProofOfIdentity","ProofOfIdentity","showUpdateModal","openUpdateModal","closeUpdateModal","components_UpdateProofOfIdentity","Profile","loadUserInfo","_this$props$currentUs","components_ProofOfIdentity","components_UploadProofOfIdentity","updatedDoctor","updateSingleDoctor","SingleDoctor","_handleDelete","docApps","oneapp","components_UpdateDoctor","deleteDoctorThunk","AllDoctors","fetchSingleDoctor","components_SingleDoctor","createBrowserHistory","handleClick","BarChart","drawBarChart","svgCanvas","d3","refs","canvas","style","enter","datapoint","iteration","dataPoint","text","AdminDashboard","getUsers","deleteUser","deleteUserThunk","Root","fetchInitialData","isLoggedIn","react_router","path","component","Login","Signup","components_Navbar","exact","BarChartCondition","isAdmin","withRouter","_ref4","_callee4","_context4","_x4","Footer","index_esm","size","ai_index_esm","Boolean","window","location","hostname","match","ReactDOM","render","es","components_Root","components_Footer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdfe2688.chunk.js","sourcesContent":["export const API_URL = 'https://elemental-health.herokuapp.com'\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_ALL_CONDITIONS = 'GET_ALL_CONDITIONS';\nconst ADD_CONDITION = 'ADD_CONDITION';\nconst DELETE_CONDITION = 'DELETE_CONDITION';\nconst UPDATE_CONDITIONS_LIST = 'UPDATE_CONDITIONS_LIST';\nconst getAllConditions = conditions => {\n  return {\n    type: GET_ALL_CONDITIONS,\n    conditions\n  }\n}\nconst addCondition = condition => {\n  return {\n    type: ADD_CONDITION,\n    condition\n  }\n}\nconst deleteCondition = id => {\n  return {\n    type: DELETE_CONDITION,\n    id\n  }\n}\nexport const updateAllConditions = (id, condition) => {\n  return {\n      type: UPDATE_CONDITIONS_LIST,\n      id,\n      condition\n  }\n}\nexport const getAllConditionsThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/conditions/`);\n      dispatch(getAllConditions(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const addConditionThunk = (condition) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/conditions`, condition);\n      dispatch(addCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteConditionThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/api/conditions/${id}`);\n      dispatch(deleteCondition(id));\n      const {data} = await axios.get(`${API_URL}/api/conditions/`);\n      dispatch(getAllConditions(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_CONDITIONS:\n      return action.conditions\n    case ADD_CONDITION:\n      return [...state, action.condition]\n    case DELETE_CONDITION:\n      return state.filter(condition => condition.id !== action.id);\n    case UPDATE_CONDITIONS_LIST:\n      return [...state].map((condition) => {\n          if (condition.id === action.id) {\n              return action.condition\n          } else {\n              return condition\n          }\n      })\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nimport {updateAllConditions} from './conditions';\nconst initialState = {};\n\nconst GET_SINGLE_CONDITION = 'GET_SINGLE_CONDITION'\nconst UPDATE_CONDITION = 'UPDATE_CONDITION'\n\nconst getSingleCondition = condition => {\n  return {\n    type: GET_SINGLE_CONDITION,\n    condition\n  }\n}\nconst updateCondition = condition => {\n  return {\n    type: UPDATE_CONDITION,\n    condition\n  }\n}\nexport const getSingleConditionThunk = id => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/conditions/${id}`);\n      dispatch(getSingleCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const updateSingleConditionThunk = (\n  id,\n  condition\n) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.put(\n        `${API_URL}/api/conditions/${id}`,\n        condition\n      );\n      dispatch(updateCondition(data));\n      dispatch(updateAllConditions(data.id, data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SINGLE_CONDITION:\n      return action.condition\n    case UPDATE_CONDITION:\n      let updated = { ...state.condition }\n      updated.name = action.condition.name\n      updated.diagnosed = action.condition.diagnosed\n      updated.typeOfPain = action.condition.typeOfPain\n      return updated\n    default:\n      return state\n  }\n}\n","import axios from 'axios'\nimport { API_URL } from './API_URL'\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst SET_CURRENT_USER = 'SET_CURRENT_USER'\nconst REMOVE_CURRENT_USER = 'REMOVE_CURRENT_USER'\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst setCurrentUser = user => ({ type: SET_CURRENT_USER, user })\nconst removeCurrentUser = () => ({ type: REMOVE_CURRENT_USER })\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(currentUser = {}, action) {\n  switch (action.type) {\n\n    case SET_CURRENT_USER:\n      return action.user\n\n    case REMOVE_CURRENT_USER:\n      return {}\n\n    default:\n      return currentUser\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const login = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/login`, credentials)\n      // const { data } = await axios.post(`/auth/local/login`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Logging in with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const logout = history => {\n  return async dispatch => {\n    try {\n      await axios.delete(`${API_URL}/auth/local/logout`)\n      dispatch(removeCurrentUser())\n      history.push('/login')\n    } catch (err) {\n      console.error('Logging out was unsuccesful', err)\n    }\n  }\n}\n\n\nexport const signup = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/signup`, credentials)\n      // const { data } = await axios.post(`/auth/local/signup`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Signing up with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const fetchCurrentUser = () => {\n  return async dispatch => {\n    try {\n      console.log(API_URL)\n      const { data } = await axios.get(`/${API_URL}/auth/local/me`)\n      // const { data } = await axios.get(`/auth/local/me`)\n      dispatch(setCurrentUser(data))\n    } catch (err) {\n      console.error('Fetching current user failed', err)\n    }\n  }\n}\n\n/* ------------      HELPER FUNCTIONS     ------------------ */\n\nfunction setUserAndRedirect(user, history, dispatch) {\n  console.log('setUserAndRedirect')\n  console.log(user)\n  dispatch(setCurrentUser(user))\n  history.push(`/`)\n}\n","import axios from 'axios'\nimport { API_URL } from './API_URL';\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst INITIALIZE = 'INITIALIZE_USERS'\nconst CREATE = 'CREATE_USER'\nexport const REMOVE = 'REMOVE_USER'\nconst UPDATE = 'UPDATE_USER'\nconst GET_USERS = 'GET_USERS'\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst init = users => ({ type: INITIALIZE, users })\nexport const create = user => ({ type: CREATE, user })\nconst remove = id => ({ type: REMOVE, id })\nconst update = user => ({ type: UPDATE, user })\nconst getAllUsers = users => {\n  return {\n    type: GET_USERS,\n    users\n  }\n}\nexport const getUsersThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/users`);\n      console.log(data)\n      dispatch(getAllUsers(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const deleteUserThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/api/users/${id}`);\n      dispatch(remove(id));\n      const {data} = await axios.get(`${API_URL}/api/users`);\n      dispatch(getAllUsers(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(users = [], action) {\n  switch (action.type) {\n    case INITIALIZE:\n      return action.users\n\n    case CREATE:\n      return [action.user, ...users]\n\n    case REMOVE:\n      return users.filter(user => user.id !== action.id)\n\n    case UPDATE:\n      return users.map(user => (\n        action.user.id === user.id ? action.user : user\n      ))\n    case GET_USERS:\n      return action.users\n\n    default:\n      return users\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const fetchUsers = () => dispatch => {\n  axios.get('/api/users')\n    .then(res => dispatch(init(res.data)))\n}\n\nexport const removeUser = id => dispatch => {\n  axios.delete(`/api/users/${id}`)\n    .then(() => dispatch(remove(id)))\n    .catch(err => console.error(`Removing user: ${id} unsuccesful`, err))\n}\n\nexport const addUser = user => dispatch => {\n  axios.post('/api/users', user)\n    .then(res => dispatch(create(res.data)))\n    .catch(err => console.error(`Creating user: ${user} unsuccesful`, err))\n}\n\nexport const updateUser = (id, user) => dispatch => {\n  axios.put(`/api/users/${id}`, user)\n    .then(res => dispatch(update(res.data)))\n    .catch(err => console.error(`Updating user: ${user} unsuccesful`, err))\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\n\nconst GET_MEDICATIONS = \"GET_MEDICATIONS\";\nconst NEW_MEDICATION = \"NEW_MEDICATION\";\nconst REMOVE_MEDICATION = \"REMOVE_MEDICATION\";\nconst UPDATE_ALL_MEDS = \"UPDATE_ALL_MEDS\";\n\nconst initialState = [];\n\nconst getMedications = (medications) => ({\n  type: GET_MEDICATIONS,\n  medications,\n});\n\nconst newMedication = (medication) => ({\n  type: NEW_MEDICATION,\n  medication,\n});\n\nconst removeMedication = (id) => ({\n  type: REMOVE_MEDICATION,\n  id,\n});\n\nexport const updateAllMeds = (id, medication) => ({\n  type: UPDATE_ALL_MEDS,\n  id,\n  medication,\n});\n\nexport const fetchMedications = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications`);\n      dispatch(getMedications(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addMedication = (medication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(\n        `${API_URL}/api/medications`,\n        medication\n      );\n      dispatch(newMedication(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nexport const deleteMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`${API_URL}/api/medications/${id}`);\n      dispatch(removeMedication(id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATIONS:\n      return action.medications;\n    case NEW_MEDICATION:\n      return [...state, action.medication];\n    case REMOVE_MEDICATION:\n      return state.filter((med) => med.id !== action.id);\n    case UPDATE_ALL_MEDS:\n      return [...state].map((medication) => {\n        if (medication.id === action.id) {\n          return action.medication;\n        } else {\n          return medication;\n        }\n      });\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\nimport { updateAllMeds } from \"./medications\";\n\nconst GET_MEDICATION = \"GET_MEDICATION\";\nconst UPDATED_MEDICATION = \"UPDATED_MEDICATION\";\nconst GET_ID = \"GET_ID\";\n\nconst initialState = {};\n\nconst getSingleMedication = (medication) => ({\n  type: GET_MEDICATION,\n  medication,\n});\n\nconst getMedId = (medId) => ({\n  type: GET_ID,\n  medId,\n});\n\nconst updateSingleMedication = (id, medication) => ({\n  type: UPDATED_MEDICATION,\n  id,\n  medication,\n});\n\nexport const fetchMedId = (medName) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(\n        `https://rxnav.nlm.nih.gov/REST/rxcui.json?name=${medName}`\n      );\n      console.log(data.idGroup.rxnormId[0]);\n      dispatch(getMedId(data.idGroup.rxnormId[0]));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications/${id}`);\n      dispatch(getSingleMedication(data));\n      dispatch(fetchMedId(data.name));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateMedication = (medication, updatedMedication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(\n        `${API_URL}/api/medications/${medication.id}`,\n        updatedMedication\n      );\n      console.log(\"update\", data);\n      dispatch(updateSingleMedication(data.id, data));\n      dispatch(updateAllMeds(data.id, data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATION:\n      return { ...state, medication: action.medication };\n    case UPDATED_MEDICATION:\n      let updated = { ...state };\n      updated.name = action.medication.name;\n      updated.dosage = action.medication.dosage;\n      updated.frequency = action.medication.frequency;\n      return { ...state, medication: updated };\n    case GET_ID:\n      return { ...state, rxcui: action.medId };\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { API_URL } from './API_URL'\n\n\n/* -----------------    ACTION TYPES    ------------------ */\n\n\nexport const UPDATE_DOCUMENT = \"UPDATE_DOCUMENT\"\nconst GET_DOCUMENT = \"GET_DOCUMENT\"\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst getDocument = (document) => ({ type: GET_DOCUMENT, document });\nconst updateDocument = (id, document) => ({ type: UPDATE_DOCUMENT, id, document });\n\n\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case GET_DOCUMENT:\n      return action.document;\n\n    case UPDATE_DOCUMENT:\n      return action.document;\n\n    default:\n      return state;\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\nexport const fetchSingleDocument = (id) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/documents/${id}`);\n      dispatch(getDocument(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const updateDocumentThunk = (id, formData) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`${API_URL}/api/documents/${id}`, formData);\n      dispatch(updateDocument(id, data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\n\n\n","import axios from \"axios\";\nimport { API_URL } from './API_URL'\nimport { UPDATE_DOCUMENT as UPDATE_DOCUMENT_LIST } from './singleDocument'\n\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst GET_DOCUMENTS = \"GET_DOCUMENTS\";\nconst UPLOAD_DOCUMENT = \"UPLOAD_DOCUMENT\"\nconst DELETE_DOCUMENT = \"DELETE_DOCUMENT\"\n\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst getDocuments = (documents) => ({ type: GET_DOCUMENTS, documents });\nconst uploadDocument = (document) => ({ type: UPLOAD_DOCUMENT, document });\nconst deleteDocument = (id) => ({ type: DELETE_DOCUMENT, id });\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function (state = [], action) {\n  switch (action.type) {\n\n    case GET_DOCUMENTS:\n      return action.documents;\n\n    case UPLOAD_DOCUMENT:\n      return [...state, action.document]\n\n    case DELETE_DOCUMENT:\n      return state.filter(document => document.id !== action.id)\n\n    case UPDATE_DOCUMENT_LIST:\n      return [...state].map(document => {\n        if (document.id === action.id) {\n          return action.document\n        } else {\n          return document\n        }\n      })\n    default:\n      return state;\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\nexport const fetchDocuments = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/documents`);\n      dispatch(getDocuments(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const uploadDocumentThunk = (formData) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(`${API_URL}/api/documents`, formData)\n      dispatch(uploadDocument(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const deleteDocumentsThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`${API_URL}/api/documents/${id}`)\n      dispatch(deleteDocument(id));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\n","import axios from 'axios'\n\nconst initialState = []\n\n//ACTION TYPES\nconst ADD_DOCTOR = 'ADD_DOCTOR'\nconst GET_ALL_DOCTORS = 'GET_ALL_DOCTORS'\nconst REMOVE_DOCTOR = 'REMOVE_DOCTOR'\nconst UPDATE_DOCTORS_LIST = 'UPDATE_DOCTORS_LIST'\n\n//ACTION CREATORS\nconst addDoctor = doctor => {\n    return {\n        type: ADD_DOCTOR,\n        doctor\n    }\n}\nconst deleteDoctor = id => {\n    return {\n        type: REMOVE_DOCTOR,\n        id\n    }\n}\n\nconst getAllDoctors = doctors => {\n    return {\n        type: GET_ALL_DOCTORS,\n        doctors\n    }\n}\n\nexport const updateAllDoctors = (id, doctor) => {\n    return {\n        type: UPDATE_DOCTORS_LIST,\n        id,\n        doctor\n    }\n}\n\n//THUNKS\nexport const addDoctorThunk = (doctor) => {\n    return async dispatch => {\n        try {\n            let { data } = await axios.post('/api/doctors', doctor)\n            dispatch(addDoctor(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const deleteDoctorThunk = id => {\n    return async dispatch => {\n        try {\n            await axios.delete(`/api/doctors/${id}`)\n            dispatch(deleteDoctor(id))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const getAllDoctorsThunk = () => {\n    return async dispatch => {\n        try {\n            const { data } = await axios.get('/api/doctors/')\n            dispatch(getAllDoctors(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ALL_DOCTORS:\n            return action.doctors\n        case REMOVE_DOCTOR:\n            return state.filter(doctor => doctor.id !== action.id)\n        case ADD_DOCTOR:\n            return [...state, action.doctor]\n        case UPDATE_DOCTORS_LIST:\n            return [...state].map((doctor) => {\n                if (doctor.id === action.id) {\n                    return action.doctor\n                } else {\n                    return doctor\n                }\n            })\n        default:\n            return state\n    }\n}\n","import axios from 'axios'\nimport { updateAllDoctors } from './doctors'\n\nconst initialState = {}\n\n\nconst SET_SINGLE_DOCTOR = 'SET_SINGLE_DOCTOR'\nconst UPDATE_SINGLE_DOCTOR = 'UPDATE_SINGLE_DOCTOR'\n\n\nexport const setSingleDoctor = (doctor) => {\n    return {\n        type: SET_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\nexport const updateDoctor = (doctor) => {\n    return {\n        type: UPDATE_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\n\nexport const fetchSingleDoctor = (id) => {\n    console.log('inside the thunk FETCH SINGLE DOCTOR')\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.get(`/api/doctors/${id}`)\n            console.log(\"what is data in thunk\", data)\n            dispatch(setSingleDoctor(data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n};\n\nexport const updateSingleDoctor = (id, doctor) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.put(`/api/doctors/${id}`, doctor)\n            console.log(\"what is data\", data)\n            dispatch(updateDoctor(data))\n            dispatch(updateAllDoctors(data.id, data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SINGLE_DOCTOR:\n            return action.doctor\n        case UPDATE_SINGLE_DOCTOR:\n            let updated = { ...state.doctor }\n            updated.firstName = action.doctor.firstName\n            updated.lastName = action.doctor.lastName\n            updated.address = action.doctor.address\n            updated.doctorType = action.doctor.doctorType\n            return updated\n        default:\n            return state\n    }\n}\n\n\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_SCORE = 'GET_SCORE';\nconst ADD_SCORE = 'ADD_SCORE';\n\nconst getScore = score => {\n  return {\n    type: GET_SCORE,\n    score\n  }\n}\nconst addScore = score => {\n  return {\n    type: ADD_SCORE,\n    score\n  }\n}\n\nexport const getScoreThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/score`)\n      dispatch(getScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addScoreThunk = (rate, date, notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/score`, {rate, date, notes})\n      dispatch(addScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SCORE:\n      return action.score\n    case ADD_SCORE:\n      return [\n        ...state,\n        action.score\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_APPOINTMENT = 'GET_APPOINTMENT';\nconst ADD_APPOINTMENT = 'ADD_APPOINTMENT';\n\nconst getAppointment = appointment => {\n  return {\n    type: GET_APPOINTMENT,\n    appointment\n  }\n}\nconst addAppointment = appointment => {\n  return {\n    type: ADD_APPOINTMENT,\n    appointment\n  }\n}\n\nexport const getAppointmentThunk = () => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/dailycheckin/appointment`)\n      console.log('data inside get appointment thunk', data)\n      dispatch(getAppointment(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addAppointmentThunk = (appointmentDate) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/api/dailycheckin/appointment`, { appointmentDate })\n      dispatch(addAppointment(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_APPOINTMENT:\n      return action.appointment\n    case ADD_APPOINTMENT:\n      return [\n        ...state,\n        action.appointment\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_MEDS = 'GET_MEDS';\nconst ADD_MEDS = 'ADD_MEDS';\n\nconst getMedication = med => {\n  return {\n    type: GET_MEDS,\n    med\n  }\n}\nconst addMedication = med => {\n  return {\n    type: ADD_MEDS,\n    med\n  }\n}\n\nexport const getMedicationThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/meds`)\n      console.log(data)\n      dispatch(getMedication(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addMedicationThunk = (notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/meds`, {notes})\n      dispatch(addMedication(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDS:\n      return action.med\n    case ADD_MEDS:\n      return [\n        ...state,\n        action.med\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_CHART = 'GET_CHART';\n\nconst getChart = chart => {\n  return {\n    type: GET_CHART,\n    chart\n  }\n}\n\nexport const getChartThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/score`)\n      dispatch(getChart(data));\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CHART:\n      return action.chart\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport conditions from \"./redux/conditions\";\nimport condition from \"./redux/singleCondition\";\nimport currentUser from \"./redux/auth\";\nimport users from \"./redux/users\";\nimport medications from \"./redux/medications\";\nimport medication from \"./redux/singleMedication\";\nimport documents from \"./redux/documents\";\nimport singleDocument from \"./redux/singleDocument\";\nimport doctors from \"./redux/doctors\";\nimport doctor from './redux/singleDoctor';\nimport score from './redux/dcCondition';\nimport appointment from './redux/dcDoctor';\nimport med from './redux/dcMedication';\nimport chart from './redux/score';\nconst reducer = combineReducers({\n  users,\n  currentUser,\n  conditions,\n  condition,\n  medications,\n  medication,\n  documents,\n  singleDocument,\n  doctors,\n  doctor,\n  score,\n  appointment,\n  med,\n  chart\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\n","\n\nexport const countAppointments = (appointmentData) => {\n    let countObj = {}\n    for (let i = 0; i < appointmentData.length; i++) {\n        let doctorId = appointmentData[i].doctorId\n        if (!countObj[doctorId]) {\n            countObj[doctorId] = 1\n        } else {\n            countObj[doctorId] += 1\n        }\n    }\n    return countObj\n}\n\n\nexport const updateDonut = (appointmentData, doctorData) => {\n    console.log('inside update donut function')\n    let newAppointmentData = []\n    let colorsArray = ['#DA291C', '#FFB20F', '#184A45', '#76B041', '#95DBE5', '#FF9F1C', '#94DBE5', '#56A8CB', '#080357', '#339E66']\n    let countObj = countAppointments(appointmentData)\n    let arrOfDocId = Object.keys(countObj)\n    let formattedObj = {}\n\n\n    for (let i = 0; i < arrOfDocId.length; i++) {\n        for (let j = 0; j < doctorData.length; j++) {\n            if (Number(arrOfDocId[i]) === doctorData[j].id) {\n                let colorIndex = i % colorsArray.length\n                formattedObj.count = countObj[doctorData[j].id]\n                formattedObj.color = colorsArray[colorIndex]\n                formattedObj.name = `${doctorData[j].firstName} ${doctorData[j].lastName}`\n                newAppointmentData.push(formattedObj)\n                formattedObj = {}\n            }\n        }\n\n    }\n\n\n    return newAppointmentData\n}\n\n\n\n","import DonutChart from 'react-d3-donut'\nimport React from 'react'\nimport { updateDonut } from '../../utils/update-donut'\nimport { connect } from 'react-redux'\n\nexport function doctorAppointmentDonut(props) {\n    const appointmentData = props.appointment\n    const doctorData = props.doctors\n\n    const data = updateDonut(appointmentData, doctorData)\n    return (\n        <div>\n            <h4>My Appointments Over Time</h4>\n            <DonutChart\n                innerRadius={30}\n                outerRadius={80}\n                transition={true}\n                svgClass=\"example6\"\n                pieClass=\"pie6\"\n                displayTooltip={true}\n                strokeWidth={3}\n                data={data} />\n        </div>\n    )\n}\n\nconst mapState = (state) => {\n    return {\n        doctors: state.doctors,\n        appointment: state.appointment\n    }\n}\n\nexport default connect(mapState, null)(doctorAppointmentDonut)","import React from \"react\";\nimport { select, selectAll } from \"d3-selection\";\nimport { axisBottom, axisLeft } from \"d3-axis\";\nimport { transition } from 'd3-transition';\n\nclass Axis extends React.Component {\n  constructor() {\n    super();\n    this.ref = React.createRef();\n  }\n  componentDidMount() {\n    this.renderAxis();\n  }\n  componentDidUpdate() {\n    this.updateAxis();\n  }\n  renderAxis() {\n    const { scale, orient, ticks } = this.props;\n    const node = this.ref.current;\n    let axis;\n\n    if (orient === \"bottom\") {\n      axis = axisBottom(scale);\n    }\n    if (orient === \"left\") {\n      axis = axisLeft(scale)\n        .ticks(ticks);\n    }\n    select(node).call(axis);\n  }\n  updateAxis() {\n    const { scale, orient, ticks } = this.props;\n    const t = transition().duration(1000)\n\n    if (orient === \"left\") {\n      const axis = axisLeft(scale).ticks(ticks);\n      selectAll(`.${orient}`).transition(t).call(axis)\n    }\n  }\n  render() {\n    const { orient, transform } = this.props;\n    return (\n      <g\n        ref={this.ref}\n        transform={transform}\n        className={`${orient} axis`}\n      />\n    );\n  }\n}\n\nexport default Axis;\n","import React from 'react';\nimport Axis from './Axis';\n\nconst XYAxis = ({ xScale, yScale, height }) => {\n  const xSettings = {\n    scale: xScale,\n    orient: 'bottom',\n    transform: `translate(0, ${height})`,\n  };\n  const ySettings = {\n    scale: yScale,\n    orient: 'left',\n    transform: 'translate(0, 0)',\n    ticks: 9,\n  };\n  return (\n    <g className=\"axis-group\">\n      <Axis {...xSettings} />\n      <Axis {...ySettings} />\n    </g>\n  );\n};\n\nexport default XYAxis;\n","import React from 'react';\nimport { select, selectAll } from 'd3-selection';\nimport { transition } from 'd3-transition';\n\nclass Line extends React.Component {\n  constructor() {\n    super();\n    this.ref = React.createRef();\n  }\n  componentDidMount() {\n    const node = this.ref.current;\n    const { xScale, yScale, data, lineGenerator } = this.props;\n\n    const initialData = data.map(d => ({\n      name: d.name,\n      value: 0\n    }));\n\n    select(node)\n      .append('path')\n      .datum(initialData)\n      .attr('id', 'line')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 3)\n      .attr('fill', 'none')\n      .attr('d', lineGenerator);\n    this.updateChart()\n  }\n  componentDidUpdate() {\n    this.updateChart();\n  }\n  updateChart() {\n    const {\n          lineGenerator, xScale, yScale, data,\n        } = this.props;\n\n    const t = transition().duration(1000);\n\n    const line = select('#line');\n    const dot = selectAll('.circle');\n\n    line\n      .datum(data)\n      .transition(t)\n      .attr('d', lineGenerator);\n  }\n  render() {\n    return <g className=\"line-group\" ref={this.ref} />;\n  }\n}\n\nexport default Line;\n","import React, { Component } from 'react';\nimport { scaleLinear, scaleBand, scaleTime } from 'd3-scale';\nimport XYAxis from './XY-axis';\nimport Line from './Line';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { extent } from 'd3-array';\nimport { transition } from 'd3-transition';\nimport {getChartThunk} from '../../redux/score';\nimport { connect } from 'react-redux';\nclass LineChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [\n        // {name: 'Jun 30', value: 7},\n        // {name: 'Jul 01', value: 7},\n        // {name: 'Jul 02', value: 3},\n        // {name: 'Jul 03', value: 8},\n        // {name: 'Jul 04', value: 1},\n        // {name: 'Jul 05', value: 4},\n        // {name: 'Jul 06', value: 3},\n        // {name: 'Jul 07', value: 6},\n        // {name: 'Jul 08', value: 8},\n        // {name: 'Jul 09', value: 2},\n        // {name: 'Aug 22', value: 10}\n      ],\n    }\n    this.weeklyData = this.weeklyData.bind(this);\n    this.monthlyData = this.monthlyData.bind(this);\n  }\n  async componentDidMount() {\n    await this.props.getChart();\n    const rate = this.props.chart.map(eachScore => eachScore.rate);\n    const date = this.props.chart.map(eachDate => new Date(eachDate.date));\n    const shortDate = date.map(d => String(d).slice(4,10))\n    console.log(typeof(shortDate[0]))\n    this.setState((prevState) => {\n      const data = shortDate.map((d, i) => ({\n        name: d,\n        value: rate[i]\n      }))\n      return {\n        data\n      }\n    })\n  }\n  weeklyData() {\n    const rate = this.props.chart.map(eachScore => eachScore.rate);\n    const weeklyRate = rate.slice(-7)\n    const date = this.props.chart.map(eachDate => new Date(eachDate.date));\n    const weeklyDate = date.slice(-7)\n    const shortDate = weeklyDate.map(d => String(d).slice(4,10))\n    console.log(shortDate)\n    this.setState((prevState) => {\n      const data = shortDate.map((d, i) => ({\n        name: d,\n        value: weeklyRate[i]\n      }))\n      return {\n        data\n      }\n    })\n  }\n  monthlyData() {\n    const rate = this.props.chart.map(eachScore => eachScore.rate);\n    const weeklyRate = rate.slice(-30)\n    const date = this.props.chart.map(eachDate => new Date(eachDate.date));\n    const weeklyDate = date.slice(-30)\n    const shortDate = weeklyDate.map(d => String(d).slice(4,10))\n    console.log(shortDate)\n    this.setState((prevState) => {\n      const data = shortDate.map((d, i) => ({\n        name: d,\n        value: weeklyRate[i]\n      }))\n      return {\n        data\n      }\n    })\n  }\n  render() {\n    const { data } = this.state;\n    console.log(data)\n    const parentWidth = 500;\n\n    const margins = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20,\n    };\n\n    const width = parentWidth - margins.left - margins.right;\n    const height = 200 - margins.top - margins.bottom;\n\n    const ticks = 5;\n    const t = transition().duration(1000);\n\n    const xScale = scaleBand()\n      .domain(data.map(d => d.name))\n      .rangeRound([0, width]).padding(0.01)\n    // const xScale = scaleTime()\n    // .domain(extent(data, d => d.name))\n    // .range([0, width])\n    // .nice();\n\n\n    const yScale = scaleLinear()\n      .domain(extent(data, d => d.value))\n      .range([height, 0])\n      .nice();\n\n    const lineGenerator = line()\n      .x(d => xScale(d.name))\n      .y(d => yScale(d.value))\n      // .curve(curveMonotoneX);\n\n    return (\n      <div>\n        <h4>How I've Felt Over Time</h4>\n        <button onClick={this.weeklyData}>Last week</button>\n        <button onClick={this.monthlyData}>Last month</button>\n        <svg\n          width={width + margins.left + margins.right}\n          height={height + margins.top + margins.bottom}\n        >\n          <g transform={`translate(${margins.left}, ${margins.top})`}>\n            <XYAxis {...{ xScale, yScale, height, ticks, t }} />\n            <Line data={data} xScale={xScale} yScale={yScale} lineGenerator={lineGenerator} width={width} height={height} />\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chart: state.chart,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getChart: () => dispatch(getChartThunk()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LineChart);\n\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addDoctorThunk } from '../redux/doctors'\nimport { Link } from 'react-router-dom'\n\n\nexport function AddDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const userId = props.currentUser.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        props.addNewDoctor(payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Add Your New Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>Add A Doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDoctor)","import React, { Component } from \"react\";\nclass AddConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const userId = this.props.currentUser.id;\n\n    this.setState({ [evt.target.name]: evt.target.value, userId });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addCondition(this.state);\n    this.setState({\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Add new condition form</h1>\n          <div>\n            <input\n              className=\"input\"\n              placeholder=\"Condition name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </div>\n          <div>\n            <label>\n              Is it diagnosed?\n              <select\n                onChange={this.handleChange}\n                value={this.state.diagnosed}\n                name=\"diagnosed\"\n              >\n                <option value=\"\"></option>\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label>\n              Type of pain?\n              <select\n                onChange={this.handleChange}\n                value={this.state.typeOfPain}\n                name=\"typeOfPain\"\n              >\n                <option value=\"\"></option>\n                <option value=\"mental health\">mental health</option>\n                <option value=\"physical\">physical</option>\n              </select>\n            </label>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default AddConditionForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMedication } from \"../redux/medications\";\n\nclass AddMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"\", dosage: \"\", frequency: \"\", userId: 0 };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleChange(event) {\n    const currentUser = this.props.currentUser.id;\n    this.setState({ userId: currentUser });\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({ name: \"\", dosage: \"\", frequency: \"\", userId: 0 });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Medication Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return { addMedication: (medication) => dispatch(addMedication(medication)) };\n};\n\nexport default connect(mapState, mapDispatch)(AddMedication);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport DoctorDonut from './datavis/doctor-appointment-donut'\nimport { getAppointmentThunk } from '../redux/dcDoctor'\nimport { getAllDoctorsThunk, addDoctorThunk } from '../redux/doctors'\nimport conditions, { getAllConditionsThunk, addConditionThunk } from '../redux/conditions'\nimport LineChart from './lineChart/LineChartCondition'\nimport medications from '../redux/medications'\nimport ReactModal from \"react-modal\"\nimport AddDoctor from '../components/AddDoctor'\nimport AddConditionForm from '../components/AddConditionForm'\nimport AddMedication from '../components/AddMedication'\nimport { fetchMedications } from \"../redux/medications\";\nimport { getChartThunk } from '../redux/score'\n\n\nexport class Home extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      showDoctorModal: false,\n      showConditionModal: false,\n      showMedicineModal: false\n    }\n    this.openDoctorModal = this.openDoctorModal.bind(this)\n    this.openConditionModal = this.openConditionModal.bind(this)\n    this.openMedicineModal = this.openMedicineModal.bind(this)\n    this.closeDoctorModal = this.closeDoctorModal.bind(this)\n    this.closeConditionModal = this.closeConditionModal.bind(this)\n    this.closeMedicineModal = this.closeMedicineModal.bind(this)\n  }\n\n  openDoctorModal() {\n    this.setState({ showDoctorModal: true })\n  }\n  openConditionModal() {\n    this.setState({ showConditionModal: true })\n  }\n  openMedicineModal() {\n    this.setState({ showMedicineModal: true })\n  }\n\n  closeDoctorModal() {\n    this.setState({ showDoctorModal: false })\n  }\n  closeConditionModal() {\n    this.setState({ showConditionModal: false })\n  }\n  closeMedicineModal() {\n    this.setState({ showMedicineModal: false })\n  }\n\n  componentDidMount() {\n    ReactModal.setAppElement(\"body\")\n    this.props.getAllDoctors()\n    this.props.getAppointments()\n    this.props.getAllConditions()\n    this.props.getMedications()\n    this.props.getChart()\n  }\n\n  render() {\n    const { firstName } = this.props.currentUser\n    const appointments = this.props.appointment\n    const doctors = this.props.doctors\n    const conditions = this.props.conditions\n    const medications = this.props.medications\n    const chart = this.props.chart\n    return (\n      <div>\n        <h1>Welcome {firstName}!</h1>\n        <div>\n          {\n            (doctors.length === 0 || conditions.length === 0 || medications.length === 0) ?\n              (\n                <div>\n                  <h2>Get started by adding your doctors, conditions, and medications</h2>\n                  <div>\n                    <button onClick={this.openDoctorModal}>Add a Doctor</button>\n                    <ReactModal isOpen={this.state.showDoctorModal} contentLabel=\"Example Modal\">\n                      <AddDoctor\n                        currentUser={this.props.currentUser}\n                        addNewDoctor={this.props.addNewDoctor}\n                      />\n                      <button onClick={this.closeDoctorModal}>Close</button>\n                    </ReactModal>\n                  </div>\n\n                  <div>\n                    <button type=\"button\" onClick={this.openMedicineModal}>Add a Medication</button>\n                    <ReactModal isOpen={this.state.showMedicineModal} contentLabel=\"Single Document\">\n                      <>\n                        <AddMedication />\n                        <button type=\"button\" onClick={this.closeMedicineModal}>Close</button>\n                      </>\n                    </ReactModal>\n                  </div>\n\n                  <div>\n                    <button onClick={this.openConditionModal}>Add a Condition</button>\n                    <ReactModal isOpen={this.state.showConditionModal} contentLabel=\"Single Document\">\n                      <AddConditionForm\n                        currentUser={this.props.currentUser}\n                        addCondition={this.props.addCondition}\n                      />\n                      <button onClick={this.closeConditionModal}>close</button>\n                    </ReactModal>\n                  </div>\n\n                </div>\n              )\n              : (doctors && doctors.length > 0 && appointments && appointments.length > 0) ?\n                <DoctorDonut appointment={appointments} doctors={doctors} /> :\n                (chart && chart.length > 0) ?\n                  <LineChart />\n                  : null\n          }\n        </div>\n        <div>\n          {\n\n          }\n        </div>\n        <div>\n          {\n          }\n        </div>\n\n      </div >\n    )\n  }\n}\nconst mapState = (state) => {\n  return {\n    doctors: state.doctors,\n    conditions: state.conditions,\n    currentUser: state.currentUser,\n    appointment: state.appointment,\n    medications: state.medications,\n    chart: state.chart\n  }\n}\n\nconst mapDispatch = (dispatch) => ({\n  getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n  getAppointments: () => dispatch(getAppointmentThunk()),\n  getAllConditions: () => dispatch(getAllConditionsThunk()),\n  addCondition: (condition) => dispatch(addConditionThunk(condition)),\n  addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor)),\n  getMedications: () => dispatch(fetchMedications()),\n  getChart: () => dispatch(getChartThunk())\n})\n\nexport default connect(mapState, mapDispatch)(Home)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signup } from \"../redux/auth\";\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Signup = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <div className=\"loginSignup\">\n      <form onSubmit={handleSubmit}>\n        <h1>Sign up</h1>\n        <label>First Name</label>\n        <input name=\"firstName\" type=\"text\" placeholder=\"First Name\" required />\n\n        <label>Last Name</label>\n        <input name=\"lastName\" type=\"text\" placeholder=\"Last Name\" required />\n\n        <label>Email</label>\n        <input name=\"email\" type=\"email\" required />\n\n        <label>Password</label>\n        <input name=\"password\" type=\"password\" required />\n\n        <button type=\"submit\">Sign up</button>\n      </form>\n      <p>OR</p>\n\n      <a target=\"_self\" href=\"/auth/google\">\n        <i />\n        <span>Sign up with Google</span>\n      </a>\n      <a target=\"_self\" href=\"/auth/facebook\">\n        <i />\n        <span>Sign up with Facebook</span>\n      </a>\n    </div>\n  );\n};\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: (event) => {\n    event.preventDefault();\n    const firstName = event.target.firstName.value;\n    const lastName = event.target.lastName.value;\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const credentials = { firstName, lastName, email, password };\n    dispatch(signup(credentials, ownProps.history));\n  },\n});\n\nexport default connect(null, mapDispatch)(Signup);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../redux/auth\";\nimport { API_URL } from \"../redux/API_URL\";\nimport { Link } from \"react-router-dom\";\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Login = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <div className=\"loginSignup\">\n      <form onSubmit={handleSubmit}>\n        <h1>Log in</h1>\n        <label>Email</label>\n        <input name=\"email\" type=\"email\" required />\n\n        <label>Password</label>\n        <input name=\"password\" type=\"password\" required />\n\n        <button type=\"submit\">Log in</button>\n      </form>\n      <p>OR</p>\n      <a target=\"_self\" href={`${API_URL}/auth/google`}>\n        Log in with Google\n      </a>\n      <a target=\"_self\" href={`${API_URL}/auth/facebook`}>\n        Log in with Facebook\n      </a>\n\n      <Link to=\"/signup\" id=\"signup\">\n        Sign up\n      </Link>\n    </div>\n  );\n};\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: (event) => {\n    event.preventDefault();\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const credentials = { email, password };\n    dispatch(login(credentials, ownProps.history));\n  },\n});\n\nexport default connect(null, mapDispatch)(Login);\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateSingleConditionThunk\n} from '../redux/singleCondition'\nclass UpdateCondition extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value})\n  }\n  handleSubmit(evt) {\n    evt.preventDefault()\n    const id = this.props.condition.id\n    this.props.updateCondition(id, this.state)\n    this.setState({\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    })\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>Update Condition</h1>\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Update Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n        </div>\n        <br />\n\n        <div>\n        <label>\n          Is it diagnosed?\n          <select\n            onChange={this.handleChange}\n            value={this.state.diagnosed}\n            name=\"diagnosed\"\n          >\n            <option value=\"\"></option>\n            <option value=\"yes\">yes</option>\n            <option value=\"no\">no</option>\n          </select>\n        </label>\n        </div>\n        <br />\n\n        <div>\n        <label>\n          Type of pain?\n          <select\n            onChange={this.handleChange}\n            value={this.state.typeOfPain}\n            name=\"typeOfPain\"\n          >\n            <option value=\"\"></option>\n            <option value=\"mental health\">mental health</option>\n            <option value=\"physical\">physical</option>\n          </select>\n        </label>\n        </div>\n        <br />\n        <button type=\"submit\">\n          Submit\n        </button>\n      </form>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n      condition: state.condition,\n      currentUser: state.currentUser\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      updateCondition: (id, condition) => dispatch(updateSingleConditionThunk(id, condition)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateCondition)\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {deleteConditionThunk} from '../redux/conditions';\nimport UpdateCondition from './UpdateCondition';\nclass SingleCondition extends Component {\n  constructor() {\n    super()\n    this.state = {\n      clicked: false\n    }\n    this.updateCondition = this.updateCondition.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n}\n  updateCondition = () => {\n    this.setState({ clicked: true })\n  }\n  async handleDelete(id) {\n    try {\n      await this.props.deleteCondition(id)\n      this.props.closeTheModal()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  render() {\n    const condition = this.props.condition;\n    if (!condition) {\n      return \"This condition is not in our system\"\n    } else {\n      return (\n        <div>\n          <div>Condition: {condition.name} </div>\n          <div>Has this been diagnosed?:  {condition.diagnosed}</div>\n          <div>Physical or mental condition?: {condition.typeOfPain}</div>\n          <div>\n            {this.state.clicked && <UpdateCondition />}\n          </div>\n          <div>\n            {!this.state.clicked &&\n              <button onClick={() => this.updateCondition()}>Update Condition</button>\n            }\n          </div>\n          {\n            <button\n              type=\"submit\"\n              onClick={() => this.props.removeCondition(condition.id)}\n            >\n              Remove Condition\n        </button>\n          }\n        </div>\n      )\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    condition: state.condition,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeCondition: id => dispatch(deleteConditionThunk(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCondition)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllConditionsThunk, addConditionThunk } from \"../redux/conditions\";\nimport { getSingleConditionThunk } from \"../redux/singleCondition\";\nimport AddConditionForm from \"./AddConditionForm\";\nimport SingleCondition from \"./SingleCondition\";\nimport ReactModal from \"react-modal\";\n\n// const customStyles = {\n//   content: {\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)'\n//   }\n// };\nclass Conditions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      showCondModal: false,\n    };\n    this.openModal = this.openModal.bind(this);\n    this.openCondModal = this.openCondModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.closeCondModal = this.closeCondModal.bind(this);\n  }\n  componentDidMount() {\n    this.props.getAllConditions();\n    ReactModal.setAppElement(\"body\");\n  }\n  openModal() {\n    this.setState({ showModal: true });\n  }\n\n  openCondModal(id) {\n    this.setState({ showCondModal: true });\n    this.props.getSingleCondition(id);\n  }\n\n  closeModal() {\n    this.setState({ showModal: false });\n  }\n\n  closeCondModal() {\n    this.setState({ showCondModal: false });\n  }\n  render() {\n    const conditions = this.props.conditions;\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Conditions</h3>\n          <div className=\"scroll\">\n            {conditions &&\n              conditions.map((condition) => {\n                return (\n                  <div className=\"listItem\" key={condition.id}>\n                    <button\n                      className=\"bigButton\"\n                      type=\"button\"\n                      onClick={() => this.openCondModal(condition.id)}\n                    >\n                      {condition.name}\n                    </button>\n                    <ReactModal\n                      isOpen={this.state.showCondModal}\n                      contentLabel=\"Single Document\"\n                      className=\"popup\"\n                    >\n                      <SingleCondition closeTheModal={this.closeCondModal} />\n                      <button onClick={this.closeCondModal}>Close</button>\n                    </ReactModal>\n                  </div>\n                );\n              })}\n          </div>\n\n          <button onClick={this.openModal}>Add a Condition</button>\n        </div>\n        <div>\n          <ReactModal\n            isOpen={this.state.showModal}\n            contentLabel=\"Single Document\"\n            className=\"popup\"\n          >\n            <AddConditionForm\n              currentUser={this.props.currentUser}\n              addCondition={this.props.addCondition}\n            />\n            <button onClick={this.closeModal}>close</button>\n          </ReactModal>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    conditions: state.conditions,\n    currentUser: state.currentUser,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllConditions: () => dispatch(getAllConditionsThunk()),\n    addCondition: (condition) => dispatch(addConditionThunk(condition)),\n    getSingleCondition: (id) => dispatch(getSingleConditionThunk(id)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Conditions);\n","import React from \"react\";\n\nconst RemoveMedication = (props) => {\n  const { medication, remove } = props;\n\n  return (\n    <div>\n      <button type=\"sumbit\" onClick={() => remove(medication.id)}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default RemoveMedication;\n","import React from \"react\";\n\nexport default class UpdateMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"\", dosage: \"\", frequency: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const medication = this.props.medication;\n    const updated = this.state;\n    console.log(\"SUMBIT\", medication, updated);\n    this.props.update(medication, updated);\n\n    this.props.close();\n  }\n\n  render() {\n    return (\n\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\">Updated Name:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n          placeholder=\"Required\"\n        />\n\n        <label htmlFor=\"dosage\">Updated Dosage:</label>\n        <input\n          type=\"text\"\n          name=\"dosage\"\n          value={this.state.dosage}\n          onChange={this.handleChange}\n        />\n\n        <label htmlFor=\"frequency\">Updated Frequency:</label>\n        <input\n          type=\"text\"\n          name=\"frequency\"\n          value={this.state.frequency}\n          onChange={this.handleChange}\n        />\n\n        <br />\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n\n    );\n  }\n}\n\n// const mapDispatch = (dispatch) => {\n//   return {\n//     update: (medication, updatedMedication) =>\n//       dispatch(updateMedication(medication, updatedMedication)),\n//   };\n// };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMedication, updateMedication } from \"../redux/singleMedication\";\nimport UpdateMedication from \"./UpdateMedication\";\n\nexport class SingleMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { update: false };\n\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n  componentDidMount() {\n    try {\n      const id = this.props.selected.id || this.props.medication;\n      this.props.loadSingleMedication(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleCancel() {\n    this.setState({ update: false });\n  }\n  handleClose(id) {\n    // this.props.loadSingleMedication(id);\n    this.setState({ update: false });\n  }\n\n  handleOpen() {\n    this.setState({ update: true });\n  }\n\n  handleUpdate(medication, updatedMedication) {\n    this.props.update(medication, updatedMedication);\n  }\n\n  render() {\n    const medication = this.props.medication;\n    const rxcui = this.props.rxcui;\n\n    return (\n      <div>\n        {/* {this.state.view && (\n          <> */}\n        {medication && !this.state.update && (\n          <div>\n            <p>{medication.name}</p>\n            <p>{medication.dosage}</p>\n            <p>{medication.frequency}</p>\n            <p>{rxcui}</p>\n            {/*\n                <RemoveMedication\n                  medication={medication}\n                  remove={this.props.remove}\n                /> */}\n            <button type=\"button\" onClick={() => this.handleOpen()}>\n              Update Medication Info\n            </button>\n          </div>\n        )}\n        {medication && this.state.update && (\n          <div>\n            <UpdateMedication\n              medication={medication}\n              close={this.handleClose}\n              update={this.handleUpdate}\n            />\n            <button type=\"button\" onClick={() => this.handleCancel()}>\n              Cancel Update\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    medication: state.medication.medication,\n    rxcui: state.medication.rxcui,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadSingleMedication: (id) => dispatch(fetchMedication(id)),\n    update: (medication, updatedMedication) =>\n      dispatch(updateMedication(medication, updatedMedication)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SingleMedication);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ReactModal from \"react-modal\";\nimport { fetchMedications, deleteMedication } from \"../redux/medications\";\nimport AddMedication from \"./AddMedication\";\nimport RemoveMedication from \"./RemoveMedication\";\nimport SingleMedication from \"./SingleMedication\";\n\nclass Medications extends React.Component {\n  constructor() {\n    super();\n    this.state = { selected: null, add: false };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n  componentDidMount() {\n    ReactModal.setAppElement(\"body\");\n    this.props.fetchMedications();\n  }\n\n  handleSelect(medication) {\n    this.setState({ selected: medication, add: false });\n  }\n\n  handleAdd() {\n    this.setState({ selected: null, add: true });\n  }\n\n  handleClose() {\n    this.setState({ selected: null, add: false });\n  }\n\n  handleRemove(id) {\n    this.props.remove(id);\n    this.handleClose();\n  }\n\n  render() {\n    const { medications, remove } = this.props;\n\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Saved Medications</h3>\n          <div className=\"scroll\">\n            {medications &&\n              medications.map((medication) => {\n                return (\n                  <div className=\"listItem\" key={medication.id}>\n                    <>\n                      <button\n                        className=\"bigButton\"\n                        type=\"button\"\n                        onClick={() => this.handleSelect(medication)}\n                      >\n                        {medication.name}\n                      </button>\n                    </>\n                  </div>\n                );\n              })}\n          </div>\n          <button type=\"button\" onClick={() => this.handleAdd()}>\n            Add a Medication\n          </button>\n          <ReactModal\n            isOpen={this.state.add}\n            contentLabel=\"Single Document\"\n            className=\"popup\"\n          >\n            <>\n              <AddMedication />\n              <button type=\"button\" onClick={() => this.handleClose()}>\n                Close\n              </button>\n            </>\n          </ReactModal>\n          <ReactModal\n            isOpen={this.state.selected}\n            contentLabel=\"Single Document\"\n            className=\"popup\"\n          >\n            <SingleMedication selected={this.state.selected} remove={remove} />\n\n            <RemoveMedication\n              medication={this.state.selected}\n              remove={this.handleRemove}\n            />\n            <button type=\"button\" onClick={() => this.handleClose()}>\n              Close\n            </button>\n          </ReactModal>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    medications: state.medications,\n    currentUser: state.currentUser,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMedications: () => dispatch(fetchMedications()),\n    remove: (id) => dispatch(deleteMedication(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Medications);\n","import React, { Component } from 'react';\nclass DCMedicationForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      notes: '',\n      medicationId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const medicationId = this.props.eachMed.id;\n    this.setState({ medicationId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({\n      isClicked: false,\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const med = this.props.eachMed;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {med.name}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  Any notes on how this medication is making you feel?\n            <input\n                    className='input'\n                    placeholder='notes'\n                    type='text'\n                    name='notes'\n                    onChange={this.handleChange}\n                    value={this.state.notes}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n\n      </form>\n    )\n  }\n}\nexport default DCMedicationForm;\n","import React, { Component } from 'react';\nclass DCConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: new Date(),\n      notes: '',\n      conditionId: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const conditionId = this.props.condition.id;\n    this.setState({ conditionId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addScore(this.state);\n    this.setState({\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: '',\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const condition = this.props.condition;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {condition.name}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  How much is this affecting you today? 1 (not too much) to 10 (so very much):\n                  <select onChange={this.handleChange}\n                    value={this.state.rate} name=\"rate\">\n                      <option value=\"\"></option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                  </select>\n                </label>\n              </div>\n              <div>\n                <label>\n                  Notes on how I feel:\n            <input\n                    className='input'\n                    placeholder='Notes'\n                    type='text'\n                    name='notes'\n                    onChange={this.handleChange}\n                    value={this.state.notes}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n      </form>\n    )\n  }\n}\nexport default DCConditionForm;\n","import React, { Component } from 'react';\nclass DCDoctorForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      time: '',\n      doctorId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const doctorId = this.props.doctor.id;\n    this.setState({ doctorId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addAppointment(this.state);\n    this.setState({\n      isClicked: false,\n      time: '',\n      doctorId: 0\n    })\n  }\n  render() {\n    const doctor = this.props.doctor;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {doctor.firstName} {doctor.lastName}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  Time of your appointment\n              <input\n                    className='input'\n                    placeholder='HH:MM'\n                    type='text'\n                    name='time'\n                    onChange={this.handleChange}\n                    value={this.state.time}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n      </form>\n    )\n  }\n}\nexport default DCDoctorForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getScoreThunk, addScoreThunk } from '../redux/dcCondition';\nimport { addAppointmentThunk } from '../redux/dcDoctor';\nimport { getMedicationThunk, addMedicationThunk } from '../redux/dcMedication';\nimport DCMedicationForm from './DCMedicationForm';\nimport DCConditionForm from './DCConditionForm';\nimport DCDoctorForm from './DCDoctorForm';\nimport { getAllDoctorsThunk } from '../redux/doctors'\nimport ReactModal from 'react-modal';\nimport AddMedication from './AddMedication'\nimport { Link } from 'react-router-dom'\nclass DailyCheckin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showDocModal: false,\n      showMedModal: false,\n      showCondModal: false,\n    };\n    this.openDocModal = this.openDocModal.bind(this);\n    this.openMedModal = this.openMedModal.bind(this);\n    this.openCondModal = this.openCondModal.bind(this);\n    this.closeDocModal = this.closeDocModal.bind(this);\n    this.closeMedModal = this.closeMedModal.bind(this);\n    this.closeCondModal = this.closeCondModal.bind(this);\n  }\n  componentDidMount() {\n    this.props.getScore();\n    this.props.getAllDoctors();\n    this.props.getMedication();\n    ReactModal.setAppElement('body');\n  }\n  openCondModal() {\n    this.setState({ showCondModal: true });\n    this.props.getScore();\n  }\n  openDocModal() {\n    this.setState({ showDocModal: true });\n    this.props.getAllDoctors();\n  }\n  openMedModal() {\n    this.setState({ showMedModal: true });\n    this.props.getMedication();\n  }\n  closeDocModal() {\n    this.setState({ showDocModal: false });\n  }\n  closeCondModal() {\n    this.setState({ showCondModal: false });\n  }\n  closeMedModal() {\n    this.setState({ showMedModal: false });\n  }\n  addMedication() {\n\n  }\n  render() {\n    const score = this.props.score;\n    const doctors = this.props.doctors;\n    const med = this.props.med;\n    return (\n      <div className=\"main\" id=\"daily\">\n        <h1>Daily Check-in</h1>\n          <div>\n            <button\n              className=\"bigButton\"\n              type=\"button\"\n              onClick={() => this.openCondModal()}\n            >\n              Conditions\n            </button>\n            <ReactModal\n              isOpen={this.state.showCondModal}\n              contentLabel=\"Single Document\"\n            >\n            <div>\n            {(score && score.length > 0) ?\n              score.map((condition) => {\n                return (\n                  <div key={condition.id}>\n                    <DCConditionForm\n                      condition={condition}\n                      addScore={this.props.addScore}\n                    />\n                  </div>\n                );\n              }) : \"You don't have any conditions\"}\n              <div>\n              {\n                (score && score.length === 0) ? <Link to=\"/conditions\">Add Condition</Link> : null\n              }\n              </div>\n              </div>\n              <button onClick={this.closeCondModal}>Done</button>\n            </ReactModal>\n          </div>\n          <div>\n            <button\n              className=\"bigButton\"\n              type=\"button\"\n              onClick={() => this.openDocModal()}\n            >\n              Doctors\n            </button>\n            <ReactModal\n              isOpen={this.state.showDocModal}\n              contentLabel=\"Single Document\"\n            >\n            <div>\n            {\n            (doctors && doctors.length>0) ?\n            doctors.map((doctor) => {\n              return (\n                <div key={doctor.id}>\n                  <DCDoctorForm\n                    doctor={doctor}\n                    addAppointment={this.props.addAppointment}\n                  />\n                </div>\n              );\n            }) : \"You don't have any doctors\"\n            }\n            </div>\n            <div>\n              {\n                (doctors && doctors.length === 0) ? <Link to=\"/doctors\">Add Doctor</Link> : null\n              }\n              </div>\n            <button onClick={this.closeDocModal}>Done</button>\n            </ReactModal>\n          </div>\n          <div>\n            <button\n              className=\"bigButton\"\n              type=\"button\"\n              onClick={() => this.openMedModal()}\n            >\n              Medications\n            </button>\n            <ReactModal\n              isOpen={this.state.showMedModal}\n              contentLabel=\"Single Document\"\n            >\n            <div>\n              {\n                (med && med.length > 0) ? med.map((eachMed) => {\n                  return (\n                    <div key={eachMed.id}>\n                      <DCMedicationForm\n                        eachMed={eachMed}\n                        addMedication={this.props.addMedication}\n                      />\n                    </div>\n                  );\n                }) : \"You don't have any medications\"\n              }\n            </div>\n            <div>\n              {\n                (med && med.length === 0) ? <Link to=\"/medications\">Add Medication</Link> : null\n              }\n              </div>\n              <button onClick={this.closeMedModal}>Done</button>\n            </ReactModal>\n          </div>\n          \n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    score: state.score,\n    appointment: state.appointment,\n    doctors: state.doctors,\n    med: state.med,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getScore: () => dispatch(getScoreThunk()),\n    addScore: (score) => dispatch(addScoreThunk(score)),\n    getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n    addAppointment: (appointment) => dispatch(addAppointmentThunk(appointment)),\n    getMedication: () => dispatch(getMedicationThunk()),\n    addMedication: (med) => dispatch(addMedicationThunk(med)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyCheckin);\n","import React from \"react\";\nimport { connect } from 'react-redux'\n\n\nexport const UploadForm = (props) => {\n  const { doctors, conditions, uploadHandler, handleFileRead, handleChange } = props\n  const { description, type, doctorId, conditionId } = props\n\n  const types = ['Lab Result', 'Surgical Report', 'Pathology Report', 'Imaging', 'Visit Summary']\n\n  return (\n    < form onSubmit={uploadHandler} >\n      <label>Enter a short description of what this document contains:</label>\n      <input\n        name='description'\n        type='text'\n        placeholder='Description'\n        value={description}\n        onChange={handleChange}\n      />\n      <label>Select what type of document this is:\n          <select\n          name='type'\n          value={type}\n          onChange={handleChange}\n        >\n          {types.map((type, i) => {\n            return (\n              <option key={i} value={type}>{type}</option>\n            )\n          })\n          }\n        </select>\n      </label>\n      <label>Which doctor is this document associated with?\n          <select\n          name='doctorId'\n          value={doctorId}\n          onChange={handleChange}\n        >\n          <option >Select Doctor</option>\n          {doctors &&\n            doctors.map(doctor => {\n              const { id, firstName, lastName } = doctor\n              return (\n                <option key={id} value={id}>{firstName} {lastName}</option>\n              )\n            })\n          }\n        </select>\n      </label>\n      <label>What condition does this document relate to?\n          <select\n          name='conditionId'\n          value={conditionId}\n          onChange={handleChange}\n        >\n          <option>Select Condition</option>\n          {conditions &&\n            conditions.map(condition => {\n              const { id, name } = condition\n              return (\n                <option key={id} value={id}>{name}</option>\n              )\n            })\n          }\n        </select>\n      </label>\n      <label>Choose File</label>\n      <input\n        type='file'\n        onChange={handleFileRead}\n      // required\n      />\n      <button type=\"submit\" >Upload</button>\n    </form >\n  );\n};\n\n\nconst mapState = ({ doctors, conditions }) => ({ doctors, conditions })\n\nexport default connect(mapState)(UploadForm);\n\n","import React, { Component } from \"react\";\nimport { updateDocumentThunk } from '../redux/singleDocument'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport UploadForm from \"./UploadForm\";\n\n\nexport class UpdateDocument extends Component {\n  constructor() {\n    super()\n    this.state = {\n      selectedFile: null,\n      description: '',\n      type: '',\n      doctorId: '',\n      conditionId: ''\n    }\n    this.uploadHandler = this.uploadHandler.bind(this)\n    this.handleFileRead = this.handleFileRead.bind(this)\n    this.sendFile = this.sendFile.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    let { description, type, doctorId, conditionId } = this.props.singleDocument\n    if (!doctorId) doctorId = 'Select Doctor'\n    if (!conditionId) conditionId = 'Select Condition'\n    this.setState({\n      description,\n      type,\n      doctorId,\n      conditionId\n    })\n    console.log(this.props.singleDocument)\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleFileRead(e) {\n    if (e.target.files[0]) {\n      let reader = new FileReader()\n      reader.readAsDataURL(e.target.files[0])\n      reader.onload = () => {\n        this.setState({ selectedFile: reader.result })\n      }\n    }\n  }\n\n  async sendFile() {\n    if (this.state.selectedFile) {\n      const file = await axios.post(\n        `https://api.cloudinary.com/v1_1/elementhealth/image/upload`,\n        { file: this.state.selectedFile, upload_preset: 'capstone' }\n      )\n      return file.data.secure_url\n    }\n  }\n\n  async uploadHandler(e) {\n    e.preventDefault()\n    const { id } = this.props\n    const { description, type, doctorId, conditionId } = this.state\n\n    let formData = {}\n    if (this.state.selectedFile) {\n      const imageUrl = await this.sendFile()\n      formData = {\n        description,\n        type,\n        doctorId,\n        conditionId,\n        imageUrl\n      }\n    } else {\n      formData = {\n        description,\n        type,\n        doctorId,\n        conditionId\n      }\n    }\n    this.props.updateDocumentThunk(id, formData)\n  }\n\n  render() {\n    return (\n      <UploadForm {...this.state} uploadHandler={this.uploadHandler} handleFileRead={this.handleFileRead} handleChange={this.handleChange} />\n    );\n  };\n}\n\nconst mapState = ({ singleDocument }) => ({ singleDocument })\n\nconst mapDispatch = { updateDocumentThunk }\n\nexport default connect(mapState, mapDispatch)(UpdateDocument);\n\n","import React, { Component } from \"react\";\nimport { updateDocumentThunk, fetchSingleDocument } from '../redux/singleDocument'\nimport { deleteDocumentsThunk } from '../redux/documents'\nimport { connect } from 'react-redux'\nimport UpdateDocument from './UpdateDocument'\n\n\nexport class SingleDocument extends Component {\n  constructor() {\n    super()\n    this.state = {\n      clicked: false\n    }\n    this.updateDocument = this.updateDocument.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n\n  updateDocument = () => {\n    this.setState({ clicked: true })\n  }\n\n  handleDelete(id) {\n    this.props.deleteDocumentsThunk(id)\n    this.props.closeDocumentModal()\n  }\n\n  render() {\n    const { id, imageUrl, description } = this.props.singleDocument\n\n    return (\n      <>\n        <img src={imageUrl} alt='' />\n        <p>{description}</p>\n        <div>\n          {this.state.clicked ?\n            <UpdateDocument id={id} />\n            : <button onClick={() => this.updateDocument()}>Update Document</button>\n          }\n          <button onClick={() => this.handleDelete(id)}>Delete Document</button>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapState = ({ singleDocument }) => ({ singleDocument })\n\nconst mapDispatch = { updateDocumentThunk, fetchSingleDocument, deleteDocumentsThunk }\n\nexport default connect(mapState, mapDispatch)(SingleDocument);\n\n","import React, { Component } from \"react\";\nimport { uploadDocumentThunk } from '../redux/documents'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport UploadForm from \"./UploadForm\";\n\n\nexport class UploadDocuments extends Component {\n  constructor() {\n    super()\n    this.state = {\n      selectedFile: null,\n      description: '',\n      type: '',\n      doctorId: '',\n      conditionId: ''\n    }\n    this.uploadHandler = this.uploadHandler.bind(this)\n    this.handleFileRead = this.handleFileRead.bind(this)\n    this.sendFile = this.sendFile.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleFileRead(e) {\n    if (e.target.files[0]) {\n      let reader = new FileReader()\n      reader.readAsDataURL(e.target.files[0])\n      reader.onload = () => {\n        this.setState({ selectedFile: reader.result })\n      }\n    }\n  }\n\n  async sendFile() {\n    const file = await axios.post(\n      `https://api.cloudinary.com/v1_1/elementhealth/image/upload`,\n      { file: this.state.selectedFile, upload_preset: 'capstone' }\n    )\n    return file.data.secure_url\n  }\n\n  async uploadHandler(e) {\n    e.preventDefault()\n\n    const description = e.target.description.value\n    const type = e.target.type.value\n    const doctorId = e.target.doctorId.value\n    const conditionId = e.target.conditionId.value\n    const imageUrl = await this.sendFile()\n\n    console.log(typeof (doctorId), conditionId)\n\n    const formData = {\n      description,\n      type,\n      doctorId,\n      conditionId,\n      imageUrl\n    }\n\n    this.props.uploadDocumentThunk(formData)\n    this.props.closeUploadModal()\n  }\n\n  render() {\n    return (\n      <UploadForm {...this.state} uploadHandler={this.uploadHandler} handleFileRead={this.handleFileRead} handleChange={this.handleChange} />\n    );\n  };\n}\n\nconst mapDispatch = { uploadDocumentThunk }\n\nexport default connect(null, mapDispatch)(UploadDocuments);\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactModal from \"react-modal\";\nimport SingleDocument from \"./SingleDocument\";\nimport UploadDocuments from \"./UploadDocuments\";\nimport { fetchDocuments } from \"../redux/documents\";\nimport { fetchSingleDocument } from '../redux/singleDocument'\nimport { getAllConditionsThunk } from '../redux/conditions'\nimport { getAllDoctorsThunk } from '../redux/doctors'\n\nexport class Documents extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showDocumentModal: false,\n      showUploadModal: false,\n    };\n    this.openUploadModal = this.openUploadModal.bind(this);\n    this.closeUploadModal = this.closeUploadModal.bind(this);\n    this.openDocumentModal = this.openDocumentModal.bind(this);\n    this.closeDocumentModal = this.closeDocumentModal.bind(this);\n  }\n\n  componentDidMount() {\n    ReactModal.setAppElement(\"body\");\n    this.props.fetchDocuments();\n    this.props.getAllConditionsThunk();\n    this.props.getAllDoctorsThunk();\n  }\n\n  openUploadModal() {\n    this.setState({ showUploadModal: true });\n  }\n\n  closeUploadModal() {\n    this.setState({ showUploadModal: false });\n  }\n\n  async openDocumentModal(id) {\n    this.setState({ showDocumentModal: true });\n    await this.props.fetchSingleDocument(id)\n  }\n\n  closeDocumentModal() {\n    this.setState({ showDocumentModal: false });\n  }\n\n  render() {\n    const { documents } = this.props;\n    if (!documents) {\n      return \"No Documents\";\n    }\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Documents</h3>\n          {\n            documents.map((doc) => {\n              const { type, id, description } = doc;\n              return (\n                <div key={id}>\n                  {type !== \"Proof of Identity\" && (\n                    <div>\n                      <button onClick={() => this.openDocumentModal(id)}>\n                        {description}\n                      </button>\n                      <ReactModal\n                        isOpen={this.state.showDocumentModal}\n                        contentLabel=\"Single Document\"\n                        className=\"popup\"\n                      >\n                        <SingleDocument\n                          {...this.props}\n                          closeDocumentModal={this.closeDocumentModal}\n                          id={id}\n                        />\n                        <button onClick={() => this.closeDocumentModal()}>\n                          close\n                        </button>\n                      </ReactModal>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          <button onClick={() => this.openUploadModal()}>\n            Upload a Document\n          </button>\n        </div>\n\n        <ReactModal\n          isOpen={this.state.showUploadModal}\n          contentLabel=\"Upload Documents\"\n          className=\"popup\"\n        >\n          <UploadDocuments closeUploadModal={this.closeUploadModal} />\n          <button onClick={() => this.closeUploadModal()}>close</button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nconst mapState = ({ documents }) => ({ documents });\nconst mapDispatch = { fetchDocuments, fetchSingleDocument, getAllConditionsThunk, getAllDoctorsThunk };\n\nexport default connect(mapState, mapDispatch)(Documents);\n","import React, { Component } from \"react\";\n\n\nexport class IdentityUploadForm extends Component {\n\n  render() {\n    const { description, uploadHandler, handleFileRead, handleChange } = this.props\n    return (\n      <form onSubmit={uploadHandler}>\n        <label>Select what type of document this is:\n          <select\n            name='description'\n            value={description}\n            onChange={handleChange}\n          >\n            <option >ID Card</option>\n            <option >Insurance Card</option>\n          </select >\n        </label >\n        <label>Choose File</label>\n        <input\n          type='file'\n          onChange={handleFileRead}\n        />\n        <button type=\"submit\" >Upload</button>\n      </form >\n    );\n  };\n}\n\nexport default IdentityUploadForm\n\n","import React, { Component } from \"react\";\nimport { uploadDocumentThunk } from '../redux/documents'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport IdentityUploadForm from './IdentityUploadForm'\n\n\nexport class UploadProofOfIdentity extends Component {\n  constructor() {\n    super()\n    this.state = {\n      selectedFile: null,\n      description: ''\n    }\n    this.uploadHandler = this.uploadHandler.bind(this)\n    this.handleFileRead = this.handleFileRead.bind(this)\n    this.sendFile = this.sendFile.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({ description: e.target.value })\n  }\n\n  handleFileRead(e) {\n    if (e.target.files[0]) {\n      let reader = new FileReader()\n      reader.readAsDataURL(e.target.files[0])\n      reader.onload = () => {\n        this.setState({ selectedFile: reader.result })\n      }\n    }\n  }\n\n  async sendFile() {\n    const file = await axios.post(\n      `https://api.cloudinary.com/v1_1/elementhealth/image/upload`,\n      { file: this.state.selectedFile, upload_preset: 'capstone' }\n    )\n    return file.data.secure_url\n  }\n\n  async uploadHandler(e) {\n    e.preventDefault()\n    const description = e.target.description.value\n    const type = 'Proof of Identity'\n    const imageUrl = await this.sendFile()\n\n    const formData = {\n      description,\n      type,\n      imageUrl\n    }\n    this.props.uploadDocumentThunk(formData)\n    this.props.closeUploadModal()\n  }\n\n  render() {\n    return (\n      <IdentityUploadForm {...this.state} uploadHandler={this.uploadHandler} handleFileRead={this.handleFileRead} handleChange={this.handleChange} />\n    );\n  };\n}\n\nconst mapDispatch = { uploadDocumentThunk }\n\nexport default connect(null, mapDispatch)(UploadProofOfIdentity);\n\n","import React, { Component } from \"react\";\nimport { updateDocumentThunk } from '../redux/singleDocument'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport IdentityUploadForm from './IdentityUploadForm'\n\n\nexport class UpdateProofOfIdentity extends Component {\n  constructor() {\n    super()\n    this.state = {\n      selectedFile: null,\n      description: ''\n    }\n    this.uploadHandler = this.uploadHandler.bind(this)\n    this.handleFileRead = this.handleFileRead.bind(this)\n    this.sendFile = this.sendFile.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    const { description } = this.props\n    this.setState({ description })\n    console.log(description)\n  }\n\n  handleChange(e) {\n    this.setState({ description: e.target.value })\n  }\n\n  handleFileRead(e) {\n    if (e.target.files[0]) {\n      let reader = new FileReader()\n      reader.readAsDataURL(e.target.files[0])\n      reader.onload = () => {\n        this.setState({ selectedFile: reader.result })\n      }\n    }\n  }\n\n  async sendFile() {\n    const file = await axios.post(\n      `https://api.cloudinary.com/v1_1/elementhealth/image/upload`,\n      { file: this.state.selectedFile, upload_preset: 'capstone' }\n    )\n    return file.data.secure_url\n  }\n\n  async uploadHandler(e) {\n    e.preventDefault()\n    const { description, selectedFile } = this.state\n    const type = 'Proof of Identity'\n    const { id } = this.props\n\n    let formData = {}\n    if (selectedFile) {\n      const imageUrl = await this.sendFile()\n      formData = {\n        description,\n        type,\n        imageUrl\n      }\n    } else {\n      formData = {\n        description,\n        type,\n      }\n    }\n    this.props.updateDocumentThunk(id, formData)\n  }\n\n  render() {\n    const { imageUrl, description } = this.props\n    return (\n      <div><img src={imageUrl} alt='Proof of Identity' width=\"50%\" height=\"50%\" />\n        <p>{description}</p>\n\n        <IdentityUploadForm {...this.state} uploadHandler={this.uploadHandler} handleFileRead={this.handleFileRead} handleChange={this.handleChange} imageUrl={imageUrl} />\n      </div>\n    );\n  };\n}\nconst mapDispatch = { updateDocumentThunk }\n\nexport default connect(null, mapDispatch)(UpdateProofOfIdentity);\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteDocumentsThunk } from '../redux/documents'\nimport { fetchSingleDocument } from '../redux/singleDocument'\nimport ReactModal from \"react-modal\";\nimport UpdateProofOfIdentity from './UpdateProofOfIdentity';\n\nexport class ProofOfIdentity extends Component {\n  constructor() {\n    super()\n    this.state = {\n      showUpdateModal: false\n    };\n    this.openUpdateModal = this.openUpdateModal.bind(this);\n    this.closeUpdateModal = this.closeUpdateModal.bind(this);\n  }\n\n  componentDidMount() {\n    ReactModal.setAppElement(\"body\");\n  }\n\n  openUpdateModal(id) {\n    this.setState({ showUpdateModal: true });\n    this.props.fetchSingleDocument(id)\n  }\n\n  closeUpdateModal() {\n    this.setState({ showUpdateModal: false });\n  }\n\n  render() {\n    const { deleteDocumentsThunk, imageUrl, description, id } = this.props\n\n    return (\n      <div>\n        <img src={imageUrl}\n          alt='Proof of Identity'\n          width=\"25%\" height=\"25%\"\n        />\n        <p>{`This is my ${description}`}</p>\n        <button onClick={() => this.openUpdateModal(id)}>Update My Document</button>\n        <ReactModal\n          isOpen={this.state.showUpdateModal}\n          contentLabel=\"Update Document\"\n        >\n          <UpdateProofOfIdentity id={id} closeUpdateModal={this.closeUpdateModal} description={description} imageUrl={imageUrl} />\n          <button onClick={() => this.closeUpdateModal()}>close</button>\n        </ReactModal>\n        <button onClick={() => deleteDocumentsThunk(id)}>Delete My Document</button>\n      </div>\n    )\n  }\n}\n\nconst mapDispatch = { deleteDocumentsThunk, fetchSingleDocument }\n\nexport default connect(null, mapDispatch)(ProofOfIdentity)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport UploadProofOfIdentity from './UploadProofOfIdentity'\nimport ReactModal from \"react-modal\";\nimport ProofOfIdentity from './ProofOfIdentity'\nimport { getAllConditionsThunk } from '../redux/conditions'\nimport { getAllDoctorsThunk } from '../redux/doctors'\nimport { Link } from 'react-router-dom'\nimport { fetchDocuments } from '../redux/documents';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUploadModal: false,\n    };\n    this.openUploadModal = this.openUploadModal.bind(this);\n    this.closeUploadModal = this.closeUploadModal.bind(this);\n  }\n\n  componentDidMount() {\n    ReactModal.setAppElement(\"body\");\n    this.props.loadUserInfo()\n    this.props.fetchDocuments()\n  }\n\n  openUploadModal() {\n    this.setState({ showUploadModal: true });\n  }\n\n  closeUploadModal() {\n    this.setState({ showUploadModal: false });\n  }\n\n  render() {\n    const { firstName, lastName, email } = this.props.currentUser\n    const { documents } = this.props\n    if (!documents) {\n      return \"No Documents\";\n    }\n    return (\n      <div className=\"loginSignup\">\n        <h1>User Profile</h1>\n        <h4>\n          Name: {firstName} {lastName}\n        </h4>\n        <h4>Email: {email}</h4>\n\n        {\n          documents.map((doc) => {\n            const { type, id, imageUrl, description } = doc\n            return (\n              <div key={id}>\n                {\n                  type === 'Proof of Identity' &&\n                  <ProofOfIdentity id={id} imageUrl={imageUrl} description={description} />\n                }\n              </div>\n            )\n          })\n        }\n\n        <Link to=\"#\" onClick={() => this.openUploadModal()}>\n          Upload your insurance card and ID card here.\n        </Link>\n        <div className=\"popup\">\n          <ReactModal\n            isOpen={this.state.showUploadModal}\n            contentLabel=\"Upload Documents\"\n          >\n            <UploadProofOfIdentity closeUploadModal={this.closeUploadModal} />\n            <button onClick={() => this.closeUploadModal()}>close</button>\n          </ReactModal>\n        </div>\n        <Link to=\"documents\">Upload your medical documents here.</Link>\n      </div>\n    );\n  }\n}\n\nconst mapState = ({ currentUser, documents }) => ({ currentUser, documents })\n\nconst mapDispatch = (dispatch) => ({\n  loadUserInfo: () => {\n    dispatch(getAllConditionsThunk())\n    dispatch(getAllDoctorsThunk())\n  },\n  fetchDocuments: () => dispatch(fetchDocuments()),\n})\n\n\nexport default connect(mapState, mapDispatch)(Profile);\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { updateSingleDoctor } from '../redux/singleDoctor'\nimport { Link } from 'react-router-dom'\n\n\nexport function UpdateDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log('what are props inside update doctor', props)\n        const userId = props.currentUser.id\n        const id = props.doctor.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        for (let key in payload) {\n            if (payload[key] === '') {\n                delete payload[key]\n            }\n        }\n        props.updateDoctor(id, payload)\n        // props.updateAllDocs(id, payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Update This Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>change this doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateDoctor: (id, updatedDoctor) => dispatch(updateSingleDoctor(id, updatedDoctor)),\n        // updateAllDocs: (id, doctor) => dispatch(updateAllDoctors(id, doctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateDoctor)","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { getSingleDoctor } from \"../redux/onedoctor\";\nimport UpdateDoctor from './UpdateDoctor'\nimport { deleteDoctorThunk } from \"../redux/doctors\"\n\nexport class SingleDoctor extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            clicked: false\n        }\n        this.updateDoctor = this.updateDoctor.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n\n    }\n\n    updateDoctor = () => {\n        this.setState({ clicked: true })\n    }\n\n    async handleDelete(id) {\n        try {\n            await this.props.deleteDoctor(id)\n            this.props.closeTheModal()\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    render() {\n\n        const doctor = this.props.doctor\n        const appointments = this.props.appointment\n        const filterApps = (appointmentArray) => {\n            return (appointmentArray.filter((oneapp) => {\n                return (\n                    oneapp.doctorId === doctor.id)\n            }))\n        }\n        const docApps = filterApps(appointments)\n\n        if (!doctor) {\n            return \"This doctor is not in our system\"\n        } else {\n            return (\n                <div>\n                    <div>Doctor: {doctor.firstName} {doctor.lastName}</div>\n                    <div>Specialty: {doctor.doctorType}</div>\n                    <div>Address: {doctor.address}</div>\n                    <div>\n                        {this.state.clicked === true && <UpdateDoctor />}\n                    </div>\n                    <div>\n                        {this.state.clicked === false &&\n                            <button onClick={() => this.updateDoctor()}>Update Doctor</button>\n                        }\n                    </div>\n                    <button onClick={() => this.handleDelete(doctor.id)}>Delete Doctor</button>\n                    <div>\n                        <div>My Appointments with {doctor.firstName} {doctor.lastName} </div>\n                        <ul>\n                            {\n                                docApps.map((oneapp) => {\n                                    return (\n                                        <li key={oneapp.id}>\n                                            <div>Date: {oneapp.appointmentDate}</div>\n                                            <div>Time: {oneapp.time}</div>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n\n            )\n        };\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser,\n        appointment: state.appointment\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteDoctor: (id) => dispatch(deleteDoctorThunk(id))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleDoctor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllDoctorsThunk, addDoctorThunk } from \"../redux/doctors\";\nimport { fetchSingleDoctor } from \"../redux/singleDoctor\";\nimport { AddDoctor } from \"./AddDoctor\";\nimport ReactModal from \"react-modal\";\nimport SingleDoctor from \"./SingleDoctor\";\nimport { getAppointmentThunk } from \"../redux/dcDoctor\";\n\n// const customStyles = {\n//     content: {\n//         top: '50%',\n//         left: '50%',\n//         right: 'auto',\n//         bottom: 'auto',\n//         marginRight: '-50%',\n//         transform: 'translate(-50%, -50%)'\n//     }\n// };\n\nexport class AllDoctors extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      showDocModal: false,\n    };\n    this.openModal = this.openModal.bind(this);\n    this.openDocModal = this.openDocModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.closeDocModal = this.closeDocModal.bind(this);\n  }\n  componentDidMount() {\n    ReactModal.setAppElement(\"body\");\n    this.props.getAllDoctors();\n  }\n\n  openModal() {\n    this.setState({ showModal: true });\n  }\n\n  openDocModal(id) {\n    this.setState({ showDocModal: true });\n    this.props.fetchSingleDoctor(id);\n    this.props.getAppointments();\n  }\n\n  closeModal() {\n    this.setState({ showModal: false });\n  }\n\n  closeDocModal() {\n    this.setState({ showDocModal: false });\n  }\n\n  render() {\n    const doctors = this.props.doctors;\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Doctors</h3>\n          <div className=\"scroll\">\n            {doctors &&\n              doctors.map((doctor) => {\n                return (\n                  <div className=\"listItem\" key={doctor.id}>\n                    <button\n                      className=\"bigButton\"\n                      onClick={() => this.openDocModal(doctor.id)}\n                    >\n                      {doctor.firstName} {doctor.lastName}\n                    </button>\n                    <ReactModal\n                      isOpen={this.state.showDocModal}\n                      contentLabel=\"Example Modal\"\n                      className=\"popup\"\n                    >\n                      <SingleDoctor closeTheModal={this.closeDocModal} />\n                      <button onClick={this.closeDocModal}>close</button>\n                    </ReactModal>\n                  </div>\n                );\n              })}\n          </div>\n          <button onClick={this.openModal}>Add a Doctor</button>\n        </div>\n        <div className=\"column\">\n          <ReactModal\n            isOpen={this.state.showModal}\n            contentLabel=\"Example Modal\"\n            className=\"popup\"\n          >\n            <AddDoctor\n              currentUser={this.props.currentUser}\n              addNewDoctor={this.props.addNewDoctor}\n            />\n\n            <button onClick={this.closeModal}>Close</button>\n          </ReactModal>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    doctor: state.doctor,\n    doctors: state.doctors,\n    currentUser: state.currentUser,\n    appointment: state.appointment,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n    addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor)),\n    fetchSingleDoctor: (id) => dispatch(fetchSingleDoctor(id)),\n    getAppointments: () => dispatch(getAppointmentThunk()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AllDoctors);\n","import { createMemoryHistory, createBrowserHistory } from 'history'\n\nconst history =\n  process.env.NODE_ENV === 'test'\n    ? createMemoryHistory()\n    : createBrowserHistory()\n\nexport default history\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/auth'\nimport history from '../utils/history'\n\nconst Navbar = (props) => {\n  const { handleClick } = props\n\n  return (\n    <nav>\n      <div>\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div id=\"upperRight\">\n        <div className=\"navDropdown\">\n          <div className=\"navDropButton\">My Info</div>\n          <div className=\"navDropContent\">\n            <Link to=\"/medications\">Medications</Link>\n            <Link to=\"/doctors\">Doctors</Link>\n            <Link to=\"/conditions\">Conditions</Link>\n            <Link to=\"/documents\">My Documents</Link>\n          </div>\n        </div>\n\n        <Link to=\"/dailycheckin\">Daily Checkin</Link>\n        <Link to=\"/profile\">Profile</Link>\n        <Link to='#' onClick={handleClick}>Log out</Link>\n      </div>\n    </nav>\n  );\n};\n\nconst mapDispatch = (dispatch) => ({\n  handleClick: () => {\n    dispatch(logout(history))\n  }\n})\nexport default connect(null, mapDispatch)(Navbar);\n","import React, { Component } from 'react';\nimport {getChartThunk} from '../redux/score';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nclass BarChart extends Component {\n    async componentDidMount() {\n        await this.props.getChart();\n        const rate = this.props.chart.map(eachScore => eachScore.rate)\n        this.drawBarChart(rate)\n    }\n    drawBarChart(data) {\n      const canvasHeight = 400\n      const canvasWidth = 1000\n      const scale = 20\n      const svgCanvas = d3.select(this.refs.canvas)\n        .append('svg')\n        .attr('width', canvasWidth)\n        .attr('height', canvasHeight)\n        .style('border', '1px solid black')\n      svgCanvas.selectAll('rect')\n        .data(data).enter()\n        .append('rect')\n        .attr('width', 10)\n        .attr('height', (datapoint) => datapoint * scale)\n        .attr('fill', 'yellow')\n        .attr('x', (datapoint, iteration) => iteration * 16)\n        .attr('y', (datapoint) => canvasHeight - datapoint * scale)\n      svgCanvas.selectAll('text')\n        .data(data).enter()\n        .append('text')\n        .attr('x', (dataPoint, i) => i * 16 + 10)\n        .attr('y', (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n        .text(dataPoint => dataPoint)\n      }\n    render() { return <div ref=\"canvas\"></div> }\n}\n\nconst mapStateToProps = state => {\n  return {\n    chart: state.chart,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getChart: () => dispatch(getChartThunk()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsersThunk, deleteUserThunk } from '../redux/users';\n\nclass AdminDashboard extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n  render() {\n    const users = this.props.users;\n    console.log(this.props)\n    return (\n      <div>\n        <h2>Admin Dashboard</h2>\n        <h3>All users</h3>\n            {users && users.map((user) => {\n              return (\n                <div key={user.id}>\n                  <div>{user.firstName} {user.lastName}</div>\n                   <button\n                    type=\"submit\"\n                    onClick={() => this.props.deleteUser(user.id)}\n                    >\n                      Delete User\n                    </button>\n                </div>\n              )\n            })}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    users: state.users\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => dispatch(getUsersThunk()),\n    deleteUser: (id) => dispatch(deleteUserThunk(id))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminDashboard)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport Conditions from \"./Conditions\";\nimport Medications from \"./Medications\";\nimport { fetchCurrentUser } from \"../redux/auth\";\nimport DailyCheckin from \"./DailyCheckin\";\nimport SingleCondition from \"./SingleCondition\";\nimport Documents from \"./Documents\"\nimport SingleDocument from './SingleDocument'\nimport Profile from \"./Profile\"\nimport AllDoctors from \"./AllDoctors\"\nimport SingleDoctor from \"./SingleDoctor\";\nimport SingleMedication from \"./SingleMedication\";\nimport Navbar from \"./Navbar\";\nimport BarChartCondition from './BarChartCondition'\nimport LineChart from '../components/lineChart/LineChartCondition';\nimport AdminDashboard from './AdminDashboard';\n/* -----------------    COMPONENT     ------------------ */\n\nclass Root extends Component {\n  componentDidMount() {\n    this.props.fetchInitialData();\n  }\n  render() {\n    const { isLoggedIn, currentUser } = this.props;\n    return (\n      <Switch>\n        {/* Routes placed here are available to all visitors */}\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n\n        {isLoggedIn && (\n          <>\n            {/* Routes placed here are only available after logging in */}\n            <Navbar />\n\n            <Route exact path='/' component={Home} />\n            <Route exact path='/dailycheckin' component={DailyCheckin} />\n            <Route exact path='/conditions' component={Conditions} />\n            <Route path='/conditions/:id' component={SingleCondition} />\n            <Route path=\"/medications\" component={Medications} />\n            <Route path=\"/medications/:id\" component={SingleMedication} />\n            <Route path=\"/doctors\" component={AllDoctors} />\n            <Route path=\"/doctors/:id\" component={SingleDoctor} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/documents\" component={Documents} />\n            <Route path=\"/documents/:id\" component={SingleDocument} />\n            <Route path='/chart' component={BarChartCondition} />\n            <Route path='/linechart' component={LineChart} />\n            {\n              currentUser.isAdmin &&\n              <Route path='/admindashboard' component={AdminDashboard} />\n            }\n          </>\n        )}\n\n        {/* Displays our Login component as a fallback */}\n        <Route component={Login} />\n      </Switch>\n    );\n  }\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapState = (state) => {\n  return {\n    // Being 'logged in' for our purposes will be defined has having a state.user that has a truthy id.\n    // Otherwise, state.user will be an empty object, and state.user.id will be falsey\n    isLoggedIn: !!state.currentUser.id,\n    currentUser: state.currentUser\n  };\n};\nconst mapDispatch = (dispatch) => ({\n  fetchInitialData: () => {\n    dispatch(fetchCurrentUser());\n  },\n});\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Root));\n","import React from \"react\";\nimport { GoMarkGithub } from \"react-icons/go\";\nimport { AiOutlineLinkedin } from \"react-icons/ai\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        <a href=\"https://github.com/2006-ghp-capstone-team-c/capstone\">\n          <GoMarkGithub color=\"##e36397\" size={32} /> GitHub\n        </a>\n        <>September 2020</>\n      </div>\n      <div id=\"bottomRight\">\n        <div>\n          <a href=\"https://www.linkedin.com/in/meganleaf/\">\n            <AiOutlineLinkedin size={25} /> Megan Leaf\n          </a>\n          <a href=\"https://www.linkedin.com/in/biligma-oyola/\">\n            <AiOutlineLinkedin size={25} />\n            Biligma Oyola\n          </a>\n        </div>\n\n        <div>\n          <a href=\"https://www.linkedin.com/in/emma-seely-katz-b4386a1a3/\">\n            <AiOutlineLinkedin size={25} /> Emma Seely-Katz\n          </a>\n          <a href=\"https://www.linkedin.com/in/loowang/\">\n            <AiOutlineLinkedin size={25} /> Lu Wang\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./store\";\nimport Root from \"./components/Root\";\nimport Footer from \"./components/Footer\";\nimport * as serviceWorker from './serviceWorker';\nimport './style.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Root />\n      <Footer />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}