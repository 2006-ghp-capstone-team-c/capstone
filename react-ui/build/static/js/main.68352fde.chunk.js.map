{"version":3,"sources":["redux/conditions.js","redux/singleCondition.js","redux/API_URL.js","redux/auth.js","redux/users.js","redux/medications.js","redux/singleMedication.js","redux/doctors.js","redux/singleDoctor.js","redux/dailyCheckin.js","store.js","redux/documents.js","components/Home.js","components/Signup.js","components/Login.js","components/AddConditionForm.js","components/UpdateCondition.js","components/SingleCondition.js","components/Conditions.js","components/AddMedication.js","components/RemoveMedication.js","components/UpdateMedication.js","components/SingleMedication.js","components/Medications.js","components/DCConditionForm.js","components/DailyCheckin.js","components/AddDoctor.js","components/UpdateDoctor.js","components/SingleDoctor.js","components/AllDoctors.js","components/Documents.js","components/UploadDocuments.js","components/Profile.js","components/Navbar.js","components/Root.js","components/Footer.js","serviceWorker.js","index.js"],"names":["initialState","getAllConditions","conditions","type","addCondition","condition","deleteCondition","id","updateAllConditions","getSingleConditionThunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_yield$axios$get","data","wrap","_context","prev","next","axios","get","concat","sent","t0","console","log","stop","_x","apply","this","arguments","API_URL","SET_CURRENT_USER","REMOVE_CURRENT_USER","setCurrentUser","user","logout","history","_ref2","_callee2","_context2","delete","push","error","_x2","setUserAndRedirect","INITIALIZE","CREATE","REMOVE","UPDATE","newMedication","medication","removeMedication","getSingleMedication","addDoctor","doctor","deleteDoctor","updateAllDoctors","addDoctorThunk","_yield$axios$post","post","updateDoctor","fetchSingleDoctor","reducer","combineReducers","users","length","undefined","action","toConsumableArray","filter","map","currentUser","state","updated","objectSpread","name","diagnosed","typeOfPain","address","medications","med","documents","doctors","firstName","lastName","doctorType","score","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","connect","ownProps","handleClick","props","react_default","createElement","react_router_dom","to","onClick","handleSubmit","event","preventDefault","target","value","email","password","credentials","_ref3","_callee3","_context3","_x3","signup","onSubmit","placeholder","required","href","login","AddConditionForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","userId","handleChange","bind","assertThisInitialized","evt","_this$setState","setState","defineProperty","className","onChange","Component","UpdateCondition","updateCondition","_yield$axios$put","put","updateSingleConditionThunk","SingleCondition","clicked","handleDelete","getSingleCondition","closeTheModal","_this2","components_UpdateCondition","removeCondition","_yield$axios$get2","deleteConditionThunk","Conditions","showModal","showDocModal","openModal","openDocModal","closeModal","closeDocModal","lib_default","isOpen","contentLabel","components_AddConditionForm","key","components_SingleCondition","addConditionThunk","AddMedication","dosage","frequency","addMedication","htmlFor","React","RemoveMedication","remove","UpdateMedication","update","updatedMedication","updateMedication","SingleMedication","_React$Component","inherits","createClass","match","params","loadSingleMedication","err","components_UpdateMedication","fetchMedication","Medications","fetchMedications","_this$props","components_RemoveMedication","components_AddMedication","deleteMedication","DCConditionForm","isClicked","rate","date","Date","notes","conditionId","checked","addScore","DailyCheckin","getScore","components_DCConditionForm","AddDoctor","_useState","useState","_useState2","slicedToArray","setFirstName","_useState3","_useState4","setLastName","_useState5","_useState6","setAddress","_useState7","_useState8","setDoctorType","payload","addNewDoctor","e","newDoctor","updatedDoctor","updateSingleDoctor","SingleDoctor","_handleDelete","components_UpdateDoctor","deleteDoctorThunk","AllDoctors","getAllDoctors","components_SingleDoctor","Documents","_Component","fetchDocuments","Fragment","doc","i","src","secure_url","alt","width","height","mapDispatch","resources","paramId","Number","singleDocument","find","document","UploadDocuments","changeHandler","uploadHandler","files","Array","from","formData","FormData","forEach","file","append","uploadDocumentsThunk","multiple","mapDispatchToProps","_props$currentUser","components_Documents","components_UploadDocuments","userid","Navbar","Root","fetchInitialData","isLoggedIn","react_router","path","component","Login","Signup","components_Navbar","Home","exact","Profile","withRouter","_ref4","_callee4","_context4","_x4","Footer","Boolean","window","location","hostname","ReactDOM","render","es","components_Root","components_Footer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68352fde.chunk.js","sourcesContent":["import axios from 'axios';\nconst initialState = [];\n\nconst GET_ALL_CONDITIONS = 'GET_ALL_CONDITIONS';\nconst ADD_CONDITION = 'ADD_CONDITION';\nconst DELETE_CONDITION = 'DELETE_CONDITION';\nconst UPDATE_CONDITIONS_LIST = 'UPDATE_CONDITIONS_LIST';\nconst getAllConditions = conditions => {\n  return {\n    type: GET_ALL_CONDITIONS,\n    conditions\n  }\n}\nconst addCondition = condition => {\n  return {\n    type: ADD_CONDITION,\n    condition\n  }\n}\nconst deleteCondition = id => {\n  return {\n    type: DELETE_CONDITION,\n    id\n  }\n}\nexport const updateAllConditions = (id, condition) => {\n  return {\n      type: UPDATE_CONDITIONS_LIST,\n      id,\n      condition\n  }\n}\nexport const getAllConditionsThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get('/api/conditions/');\n      dispatch(getAllConditions(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const addConditionThunk = (condition) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post('/api/conditions', condition);\n      dispatch(addCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteConditionThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/api/conditions/${id}`);\n      dispatch(deleteCondition(id));\n      const {data} = await axios.get('/api/conditions/');\n      dispatch(getAllConditions(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_CONDITIONS:\n      return action.conditions\n    case ADD_CONDITION:\n      return [...state, action.condition]\n    case DELETE_CONDITION:\n      return state.filter(condition => condition.id !== action.id);\n    case UPDATE_CONDITIONS_LIST:\n      return [...state].map((condition) => {\n          if (condition.id === action.id) {\n              return action.condition\n          } else {\n              return condition\n          }\n      })\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport {updateAllConditions} from './conditions';\nconst initialState = {};\n\nconst GET_SINGLE_CONDITION = 'GET_SINGLE_CONDITION'\nconst UPDATE_CONDITION = 'UPDATE_CONDITION'\n\nconst getSingleCondition = condition => {\n  return {\n    type: GET_SINGLE_CONDITION,\n    condition\n  }\n}\nconst updateCondition = condition => {\n  return {\n    type: UPDATE_CONDITION,\n    name: condition.name,\n    diagnosed: condition.diagnosed,\n    typeOfPain: condition.typeOfPain\n  }\n}\nexport const getSingleConditionThunk = id => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`/api/conditions/${id}`);\n      dispatch(getSingleCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const updateSingleConditionThunk = (\n  id,\n  name,\n  diagnosed,\n  typeOfPain\n) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.put(\n        `/api/conditions/${id}`,\n        name,\n        diagnosed,\n        typeOfPain\n      );\n      dispatch(updateCondition(data));\n      dispatch(updateAllConditions(data.id, data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SINGLE_CONDITION:\n      return action.condition\n    case UPDATE_CONDITION:\n      let updated = { ...state.condition }\n      updated.name = action.condition.name\n      updated.diagnosed = action.condition.diagnosed\n      updated.typeOfPain = action.condition.address\n      return updated\n    default:\n      return state\n  }\n}\n","export const API_URL = 'http://localhost:3000'\n","import axios from 'axios'\nimport { API_URL } from './API_URL'\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst SET_CURRENT_USER = 'SET_CURRENT_USER'\nconst REMOVE_CURRENT_USER = 'REMOVE_CURRENT_USER'\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst setCurrentUser = user => ({ type: SET_CURRENT_USER, user })\nconst removeCurrentUser = () => ({ type: REMOVE_CURRENT_USER })\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(currentUser = {}, action) {\n  switch (action.type) {\n\n    case SET_CURRENT_USER:\n      return action.user\n\n    case REMOVE_CURRENT_USER:\n      return {}\n\n    default:\n      return currentUser\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const login = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/login`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Logging in with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const logout = history => {\n  return async dispatch => {\n    try {\n      await axios.delete(`${API_URL}/auth/local/logout`)\n      dispatch(removeCurrentUser())\n      history.push('/login')\n    } catch (err) {\n      console.error('Logging out was unsuccesful', err)\n    }\n  }\n}\n\n\nexport const signup = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/signup`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Signing up with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const fetchCurrentUser = () => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.get(`${API_URL}/auth/local/me`)\n      dispatch(setCurrentUser(data))\n    } catch (err) {\n      console.error('Fetching current user failed', err)\n    }\n  }\n}\n\n/* ------------      HELPER FUNCTIONS     ------------------ */\n\nfunction setUserAndRedirect(user, history, dispatch) {\n  console.log('setUserAndRedirect')\n  dispatch(setCurrentUser(user))\n  history.push(`/profile`)\n}\n","import axios from 'axios'\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst INITIALIZE = 'INITIALIZE_USERS'\nconst CREATE = 'CREATE_USER'\nexport const REMOVE = 'REMOVE_USER'\nconst UPDATE = 'UPDATE_USER'\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst init = users => ({ type: INITIALIZE, users })\nexport const create = user => ({ type: CREATE, user })\nconst remove = id => ({ type: REMOVE, id })\nconst update = user => ({ type: UPDATE, user })\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(users = [], action) {\n  switch (action.type) {\n    case INITIALIZE:\n      return action.users\n\n    case CREATE:\n      return [action.user, ...users]\n\n    case REMOVE:\n      return users.filter(user => user.id !== action.id)\n\n    case UPDATE:\n      return users.map(user => (\n        action.user.id === user.id ? action.user : user\n      ))\n\n    default:\n      return users\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const fetchUsers = () => dispatch => {\n  axios.get('/api/users')\n    .then(res => dispatch(init(res.data)))\n}\n\nexport const removeUser = id => dispatch => {\n  axios.delete(`/api/users/${id}`)\n    .then(() => dispatch(remove(id)))\n    .catch(err => console.error(`Removing user: ${id} unsuccesful`, err))\n}\n\nexport const addUser = user => dispatch => {\n  axios.post('/api/users', user)\n    .then(res => dispatch(create(res.data)))\n    .catch(err => console.error(`Creating user: ${user} unsuccesful`, err))\n}\n\nexport const updateUser = (id, user) => dispatch => {\n  axios.put(`/api/users/${id}`, user)\n    .then(res => dispatch(update(res.data)))\n    .catch(err => console.error(`Updating user: ${user} unsuccesful`, err))\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\n\nconst GET_MEDICATIONS = \"GET_MEDICATIONS\";\nconst NEW_MEDICATION = \"NEW_MEDICATION\";\nconst REMOVE_MEDICATION = \"REMOVE_MEDICATION\";\n\nconst initialState = [];\n\nconst getMedications = (medications) => ({\n  type: GET_MEDICATIONS,\n  medications,\n});\n\nconst newMedication = (medication) => ({\n  type: NEW_MEDICATION,\n  medication,\n});\n\nconst removeMedication = (id) => ({\n  type: REMOVE_MEDICATION,\n  id,\n});\n\nexport const fetchMedications = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications`);\n      dispatch(getMedications(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addMedication = (medication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(\n        `${API_URL}/api/medications`,\n        medication\n      );\n      dispatch(newMedication(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nexport const deleteMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`${API_URL}/api/medications/${id}`);\n      dispatch(removeMedication(id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATIONS:\n      return action.medications;\n    case NEW_MEDICATION:\n      return [...state, action.medication];\n    case REMOVE_MEDICATION:\n      return state.filter((med) => med.id !== action.id);\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\n\nconst GET_MEDICATION = \"GET_MEDICATION\";\n\nconst initialState = {};\n\nconst getSingleMedication = (medication) => ({\n  type: GET_MEDICATION,\n  medication,\n});\n\nexport const fetchMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications/${id}`);\n      dispatch(getSingleMedication(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateMedication = (medication, updatedMedication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(\n        `${API_URL}/api/medications/${medication.id}`,\n        updatedMedication\n      );\n      dispatch(getSingleMedication(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchMedId = (medName) => {\n  return async () => {\n    try {\n      const { data } = await axios.get(\n        `https://rxnav.nlm.nih.gov/REST/rxcui.json?name=${medName}`\n      );\n      console.log(data.idGroup.rxnormId[0]);\n      return data.idGroup.rxnormId[0];\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATION:\n      return action.medication;\n    default:\n      return state;\n  }\n}\n","import axios from 'axios'\n\nconst initialState = []\n\n//ACTION TYPES\nconst ADD_DOCTOR = 'ADD_DOCTOR'\nconst GET_ALL_DOCTORS = 'GET_ALL_DOCTORS'\nconst REMOVE_DOCTOR = 'REMOVE_DOCTOR'\nconst UPDATE_DOCTORS_LIST = 'UPDATE_DOCTORS_LIST'\n\n//ACTION CREATORS\nconst addDoctor = doctor => {\n    return {\n        type: ADD_DOCTOR,\n        doctor\n    }\n}\nconst deleteDoctor = id => {\n    return {\n        type: REMOVE_DOCTOR,\n        id\n    }\n}\n\nconst getAllDoctors = doctors => {\n    return {\n        type: GET_ALL_DOCTORS,\n        doctors\n    }\n}\n\nexport const updateAllDoctors = (id, doctor) => {\n    return {\n        type: UPDATE_DOCTORS_LIST,\n        id,\n        doctor\n    }\n}\n\n//THUNKS\nexport const addDoctorThunk = (doctor) => {\n    return async dispatch => {\n        try {\n            let { data } = await axios.post('/api/doctors', doctor)\n            dispatch(addDoctor(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const deleteDoctorThunk = id => {\n    return async dispatch => {\n        try {\n            await axios.delete(`/api/doctors/${id}`)\n            dispatch(deleteDoctor(id))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const getAllDoctorsThunk = () => {\n    return async dispatch => {\n        try {\n            const { data } = await axios.get('/api/doctors/')\n            dispatch(getAllDoctors(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ALL_DOCTORS:\n            return action.doctors\n        case REMOVE_DOCTOR:\n            return state.filter(doctor => doctor.id !== action.id)\n        case ADD_DOCTOR:\n            return [...state, action.doctor]\n        case UPDATE_DOCTORS_LIST:\n            return [...state].map((doctor) => {\n                if (doctor.id === action.id) {\n                    return action.doctor\n                } else {\n                    return doctor\n                }\n            })\n        default:\n            return state\n    }\n}\n","import axios from 'axios'\nimport { updateAllDoctors } from './doctors'\n\nconst initialState = {}\n\n\nconst SET_SINGLE_DOCTOR = 'SET_SINGLE_DOCTOR'\nconst UPDATE_SINGLE_DOCTOR = 'UPDATE_SINGLE_DOCTOR'\n\n\nexport const setSingleDoctor = (doctor) => {\n    return {\n        type: SET_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\nexport const updateDoctor = (doctor) => {\n    return {\n        type: UPDATE_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\n\nexport const fetchSingleDoctor = (id) => {\n    console.log('inside the thunk')\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.get(`/api/doctors/${id}`)\n            console.log(\"what is data in thunk\", data)\n            dispatch(setSingleDoctor(data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n};\n\nexport const updateSingleDoctor = (id, doctor) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.put(`/api/doctors/${id}`, doctor)\n            console.log(\"what is data\", data)\n            dispatch(updateDoctor(data))\n            dispatch(updateAllDoctors(data.id, data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SINGLE_DOCTOR:\n            return action.doctor\n        case UPDATE_SINGLE_DOCTOR:\n            let updated = { ...state.doctor }\n            updated.firstName = action.doctor.firstName\n            updated.lastName = action.doctor.lastName\n            updated.address = action.doctor.address\n            updated.doctorType = action.doctor.doctorType\n            return updated\n        default:\n            return state\n    }\n}\n\n\n","import axios from 'axios';\nconst initialState = [];\nconst DAILY_CHECKIN = 'DAILY_CHECKIN';\nconst ADD_SCORE = 'ADD_SCORE';\nconst getScore = score => {\n  return {\n    type: DAILY_CHECKIN,\n    score\n  }\n}\nconst addScore = score => {\n  return {\n    type: ADD_SCORE,\n    score\n  }\n}\nexport const getScoreThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get('/api/dailycheckin/score')\n      dispatch(getScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addScoreThunk = (rate, date, notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post('/api/dailycheckin/score', {rate, date, notes})\n      dispatch(addScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case DAILY_CHECKIN:\n      return action.score\n\n    case ADD_SCORE:\n      return [\n        ...state,\n        action.score\n      ]\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport conditions from \"./redux/conditions\";\nimport condition from \"./redux/singleCondition\";\nimport currentUser from \"./redux/auth\";\nimport users from \"./redux/users\";\nimport medications from \"./redux/medications\";\nimport medication from \"./redux/singleMedication\";\nimport documents from \"./redux/documents\";\nimport doctors from \"./redux/doctors\"\nimport doctor from './redux/singleDoctor'\nimport score from './redux/dailyCheckin'\n\nconst reducer = combineReducers({\n  users,\n  currentUser,\n  conditions,\n  condition,\n  medications,\n  medication,\n  documents,\n  doctors,\n  doctor,\n  score\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\n","import axios from \"axios\";\n\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst GET_DOCUMENTS = \"GET_DOCUMENTS\";\nconst UPLOAD_DOCUMENTS = \"UPLOAD_DOCUMENTS\"\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst getDocuments = (documents) => ({ type: GET_DOCUMENTS, documents });\nconst uploadDocuments = (documents) => ({ type: UPLOAD_DOCUMENTS, documents });\n\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function (state = [], action) {\n  switch (action.type) {\n\n    case GET_DOCUMENTS:\n      return action.documents;\n\n    case UPLOAD_DOCUMENTS:\n      return state.concat(action.documents);\n\n    default:\n      return state;\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\nexport const fetchDocuments = () => {\n  return async (dispatch) => {\n    try {\n      // figure out the api request for Cloudinary\n      const { data } = await axios.get(\"/api/uploadDocuments\");\n      console.log(data.resources)\n      dispatch(getDocuments(data.resources));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const uploadDocumentsThunk = (formData) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post('api/uploadDocuments', formData)\n      dispatch(uploadDocuments(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../redux/auth'\n\n\nconst Home = (props) => {\n  const { firstName } = props.currentUser\n  const { handleClick } = props\n  return (\n    <div>\n      <h1>Welcome {firstName}!</h1>\n      <h2>Onboarding</h2>\n      <Link to=\"/doctors\">Click to follow our onboarding</Link>\n      <p>\n        <button type='submit' onClick={handleClick}>Log out</button>\n      </p>\n    </div >\n  )\n}\nconst mapState = ({ currentUser }) => ({ currentUser })\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleClick: () => {\n    dispatch(logout(ownProps.history))\n  }\n})\n\nexport default connect(mapState, mapDispatch)(Home)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { signup } from '../redux/auth'\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Signup = (props) => {\n  const { handleSubmit } = props\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>First Name</label>\n        <input\n          name='firstName'\n          type='text'\n          placeholder='First Name'\n          required\n        />\n        <p>\n          <label>Last Name</label>\n          <input\n            name='lastName'\n            type='text'\n            placeholder='Last Name'\n            required\n          />\n        </p>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          required\n        />\n        <p>\n          <label>Password</label>\n          <input\n            name='password'\n            type='password'\n            required\n          />\n        </p>\n        <button type='submit'>Sign up</button>\n      </form>\n      <div>\n        <span>OR</span>\n      </div>\n      <p>\n        <a\n          target='_self'\n          href='/auth/google'\n        >\n          <i />\n          <span>Sign up with Google</span>\n        </a>\n        <a\n          target='_self'\n          href='/auth/facebook'\n        >\n          <i />\n          <span>Sign up with Facebook</span>\n        </a>\n      </p>\n    </div>\n  )\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: event => {\n    event.preventDefault()\n    const firstName = event.target.firstName.value\n    const lastName = event.target.lastName.value\n    const email = event.target.email.value\n    const password = event.target.password.value\n    const credentials = { firstName, lastName, email, password }\n    dispatch(signup(credentials, ownProps.history))\n  }\n})\n\nexport default connect(null, mapDispatch)(Signup)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../redux/auth'\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Login = (props) => {\n  const { handleSubmit } = props\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          required\n        />\n        <p>\n          <label>Password</label>\n          <input\n            name='password'\n            type='password'\n            required\n          />\n        </p>\n        <button type='submit'>Log in</button>\n      </form>\n      <div>\n        <span>OR</span>\n      </div>\n      <p>\n        <a\n          target='_self'\n          href='/auth/google'\n        >\n          <i />\n          <span>Log in with Google</span>\n        </a>\n        <a\n          target='_self'\n          href='/auth/facebook'\n        >\n          <i />\n          <span>Log in with Facebook</span>\n        </a>\n      </p>\n    </div>\n  )\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: event => {\n    event.preventDefault()\n    const email = event.target.email.value\n    const password = event.target.password.value\n    const credentials = { email, password }\n    dispatch(login(credentials, ownProps.history))\n  }\n})\n\nexport default connect(null, mapDispatch)(Login)\n\n","import React, { Component } from \"react\";\nclass AddConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const userId = this.props.currentUser.id;\n\n    this.setState({ [evt.target.name]: evt.target.value, userId });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addCondition(this.state);\n    this.setState({\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Add new condition form</h1>\n          <div>\n            <input\n              className=\"input\"\n              placeholder=\"Condition name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </div>\n          <div>\n            <label>\n              Is it diagnosed?\n              <select\n                onChange={this.handleChange}\n                value={this.state.diagnosed}\n                name=\"diagnosed\"\n              >\n                <option value=\"\"></option>\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label>\n              Type of pain?\n              <select\n                onChange={this.handleChange}\n                value={this.state.typeOfPain}\n                name=\"typeOfPain\"\n              >\n                <option value=\"\"></option>\n                <option value=\"mental health\">mental health</option>\n                <option value=\"physical\">physical</option>\n              </select>\n            </label>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default AddConditionForm;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateSingleConditionThunk\n} from '../redux/singleCondition'\nclass UpdateCondition extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value})\n  }\n  handleSubmit(evt) {\n    evt.preventDefault()\n    const id = this.props.condition.id\n    this.props.updateCondition(id, this.state)\n    this.setState({\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    })\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>Update Condition</h1>\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Update Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n        </div>\n        <br />\n\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Is diagnosed\"\n            type=\"text\"\n            name=\"diagnosed\"\n            onChange={this.handleChange}\n            value={this.state.diagnosed}\n          />\n        </div>\n        <br />\n\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Update Type Of Pain\"\n            type=\"text\"\n            name=\"typeOfPain\"\n            onChange={this.handleChange}\n            value={this.state.typeOfPain}\n          />\n        </div>\n        <br />\n        <button type=\"submit\">\n          Submit\n        </button>\n      </form>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n      condition: state.condition,\n      currentUser: state.currentUser\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      updateCondition: (id, condition) => dispatch(updateSingleConditionThunk(id, condition)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateCondition)\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  getSingleConditionThunk,\n} from '../redux/singleCondition';\nimport {deleteConditionThunk} from '../redux/conditions';\nimport UpdateCondition from './UpdateCondition';\nclass SingleCondition extends Component {\n  constructor() {\n    super()\n    this.state = {\n        clicked: false\n    }\n    this.updateCondition = this.updateCondition.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n}\n  componentDidMount() {\n    const id = this.props.condition.id;\n    this.props.getSingleCondition(id);\n  }\n  updateCondition = () => {\n    this.setState({ clicked: true })\n  }\n  async handleDelete(id) {\n    try {\n        await this.props.deleteCondition(id)\n        this.props.closeTheModal()\n    } catch (err) {\n        console.log(err)\n    }\n  }\n  render() {\n    const condition = this.props.condition;\n    if (!condition) {\n      return \"This condition is not in our system\"\n  } else {\n    return (\n      <div>\n        <div>{condition.name} </div>\n        <div>{condition.diagnosed}</div>\n        <div>{condition.typeOfPain}</div>\n        <div>\n          {this.state.clicked && <UpdateCondition />}\n        </div>\n        <div>\n            {!this.state.clicked &&\n                <button onClick={() => this.updateCondition()}>Update Condition</button>\n            }\n        </div>\n        {\n        <button\n        type=\"submit\"\n        onClick={() => this.props.removeCondition(condition.id)}\n        >\n          Remove Condition\n        </button>\n        }\n      </div>\n    )\n  }\n}\n}\nconst mapStateToProps = state => {\n  return {\n    condition: state.condition,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSingleCondition: id => dispatch(getSingleConditionThunk(id)),\n    removeCondition: id => dispatch(deleteConditionThunk(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCondition)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllConditionsThunk, addConditionThunk } from '../redux/conditions';\nimport {getSingleConditionThunk} from '../redux/singleCondition';\nimport AddConditionForm from './AddConditionForm';\nimport SingleCondition from './SingleCondition';\nimport ReactModal from 'react-modal';\nconst customStyles = {\n  content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)'\n  }\n};\nclass Conditions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      showDocModal: false\n    }\n      this.openModal = this.openModal.bind(this)\n      this.openDocModal = this.openDocModal.bind(this)\n      this.closeModal = this.closeModal.bind(this)\n      this.closeDocModal = this.closeDocModal.bind(this)\n  }\n  componentDidMount() {\n    this.props.getAllConditions();\n  }\n  openModal() {\n    this.setState({ showModal: true })\n  }\n\n  openDocModal(id) {\n      this.setState({ showDocModal: true })\n      this.props.getSingleCondition(id)\n  }\n\n  closeModal() {\n      this.setState({ showModal: false })\n  }\n\n  closeDocModal() {\n      this.setState({ showDocModal: false })\n  }\n  render() {\n    const conditions = this.props.conditions;\n    return (\n      <div>\n        <h1>All conditions</h1>\n        <button onClick={this.openModal}>Add a Condition</button>\n        <div>\n          <ReactModal\n            isOpen={this.state.showModal}\n            contentLabel=\"Example Modal\"\n          >\n            <AddConditionForm currentUser={this.props.currentUser} addCondition={this.props.addCondition} />\n            <button onClick={this.closeModal}>close</button>\n          </ReactModal>\n          </div>\n          <div>\n            {conditions && conditions.map((condition) => {\n              return (\n                <div key={condition.id}>\n                  <button onClick={() => this.openDocModal(condition.id)}>{condition.name}</button>\n                  <ReactModal\n                    isOpen={this.state.showDocModal}\n                    contentLabel=\"Example Modal\"\n                  >\n                    <SingleCondition closeTheModal={this.closeDocModal} />\n                    <button onClick={this.closeDocModal}>close</button>\n                  </ReactModal>\n                </div>\n              )\n            })}\n          </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    conditions: state.conditions,\n    currentUser: state.currentUser,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllConditions: () => dispatch(getAllConditionsThunk()),\n    addCondition: (condition) => dispatch(addConditionThunk(condition)),\n    getSingleCondition: (id) => dispatch(getSingleConditionThunk(id))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Conditions)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMedication } from \"../redux/medications\";\n\nclass AddMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"\", dosage: \"\", frequency: \"\", userId: 0 };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleChange(event) {\n    const currentUser = this.props.currentUser.id;\n    this.setState({ userId: currentUser });\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({ name: \"\", dosage: \"\", frequency: \"\", userId: 0 });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Medication Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return { addMedication: (medication) => dispatch(addMedication(medication)) };\n};\n\nexport default connect(mapState, mapDispatch)(AddMedication);\n","import React from \"react\";\n\nconst RemoveMedication = (props) => {\n  const { medication, remove } = props;\n  return (\n    <div>\n      <button type=\"sumbit\" onClick={() => remove(medication.id)}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default RemoveMedication;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateMedication } from \"../redux/singleMedication\";\n\nclass UpdateMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.props.update(this.props.medication, this.state);\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Updated Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Updated Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Updated Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <br />\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n  return {\n    update: (medication, updatedMedication) =>\n      dispatch(updateMedication(medication, updatedMedication)),\n  };\n};\n\nexport default connect(null, mapDispatch)(UpdateMedication);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMedication } from \"../redux/singleMedication\";\nimport UpdateMedication from \"./UpdateMedication\";\n\nexport class SingleMedication extends React.Component {\n  componentDidMount() {\n    try {\n      const id = this.props.match.params.id;\n      this.props.loadSingleMedication(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const medication = this.props.medication;\n    return (\n      <div>\n        <p>{medication.name}</p>\n        <p>{medication.dosage}</p>\n        <p>{medication.frequency}</p>\n        <UpdateMedication medication={medication} />\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    medication: state.medication,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadSingleMedication: (id) => dispatch(fetchMedication(id)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SingleMedication);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { fetchMedications, deleteMedication } from \"../redux/medications\";\nimport AddMedication from \"./AddMedication\";\nimport RemoveMedication from \"./RemoveMedication\";\nimport SingleMedication from \"./SingleMedication\";\n\nclass Medications extends React.Component {\n  // constructor() {\n  //   super();\n  //   this.state = { selected: \"\" };\n  //   this.handleSelect = this.handleSelect.bind(this);\n  // }\n  componentDidMount() {\n    this.props.fetchMedications();\n  }\n\n  // handleSelect(medication) {\n  //   this.setState({ selected: medication });\n  // }\n\n  render() {\n    const { medications, remove } = this.props;\n\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Saved Medications</h3>\n          <div className=\"scroll\">\n            {medications &&\n              medications.map((medication) => {\n                return (\n                  <div key={medication.id} className=\"listItem\">\n                    {/* <p onClick={this.handleSelect(medication)}> */}\n                    <Link to={`/medications/${medication.id}`}>\n                      {medication.name}\n                    </Link>\n\n                    <RemoveMedication medication={medication} remove={remove} />\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"column\" id=\"medModal\">\n          {/* <SingleMedication medication={this.state.selected} /> */}\n\n          <AddMedication />\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    medications: state.medications,\n    currentUser: state.currentUser,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMedications: () => dispatch(fetchMedications()),\n    remove: (id) => dispatch(deleteMedication(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Medications);\n","import React, {Component} from 'react';\nclass DCConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: new Date(),\n      notes: '',\n      conditionId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const conditionId = this.props.condition.id;\n    this.setState({conditionId});\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addScore(this.state);\n    this.setState({\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: '',\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const condition = this.props.condition;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {condition.name}\n          <input\n          type='checkbox'\n          name='isClicked'\n          onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n          <div>\n          <div>\n          <label>\n            Give score for condition from 1 to 10\n            <input\n              className='input'\n              placeholder='1-10'\n              type='text'\n              name='rate'\n              onChange={this.handleChange}\n              value={this.state.rate}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Add some notes\n            <input\n              className='input'\n              placeholder='Notes'\n              type='text'\n              name='notes'\n              onChange={this.handleChange}\n              value={this.state.notes}\n            />\n          </label>\n        </div>\n          <button type=\"submit\">\n            Submit\n          </button>\n          </div> : null\n        }\n\n      </form>\n    )\n  }\n}\nexport default DCConditionForm;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getScoreThunk, addScoreThunk} from '../redux/dailyCheckin';\nimport DCConditionForm from './DCConditionForm';\nclass DailyCheckin extends Component {\n  componentDidMount() {\n    this.props.getScore();\n  }\n  render() {\n    const score = this.props.score;\n\n    return (\n      <div>\n        <h1>Daily checkin</h1>\n        <h3>Conditions</h3>\n        {\n          score && score.map(condition => {\n            return (\n              <div key={condition.id}>\n                <DCConditionForm condition={condition} addScore={this.props.addScore}/>\n            </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    score: state.score,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getScore: () => dispatch(getScoreThunk()),\n    addScore: (score) => dispatch(addScoreThunk(score))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyCheckin)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addDoctorThunk } from '../redux/doctors'\nimport { Link } from 'react-router-dom'\n\n\nexport function AddDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const userId = props.currentUser.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        props.addNewDoctor(payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Add Your New Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>Add A Doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDoctor)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { updateSingleDoctor } from '../redux/singleDoctor'\nimport { Link } from 'react-router-dom'\n\n\nexport function UpdateDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log('what are props inside update doctor', props)\n        const userId = props.currentUser.id\n        const id = props.doctor.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        for (let key in payload) {\n            if (payload[key] === '') {\n                delete payload[key]\n            }\n        }\n        props.updateDoctor(id, payload)\n        // props.updateAllDocs(id, payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Update This Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>change this doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateDoctor: (id, updatedDoctor) => dispatch(updateSingleDoctor(id, updatedDoctor)),\n        // updateAllDocs: (id, doctor) => dispatch(updateAllDoctors(id, doctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateDoctor)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { getSingleDoctor } from \"../redux/onedoctor\";\nimport UpdateDoctor from './UpdateDoctor'\nimport { fetchSingleDoctor } from \"../redux/singleDoctor\";\nimport { deleteDoctorThunk } from \"../redux/doctors\"\n\nexport class SingleDoctor extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            clicked: false\n        }\n        this.updateDoctor = this.updateDoctor.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n    componentDidMount() {\n        const id = this.props.doctor.id\n        this.props.fetchSingleDoctor(id)\n    }\n\n    updateDoctor = () => {\n        this.setState({ clicked: true })\n    }\n\n    async handleDelete(id) {\n        try {\n            await this.props.deleteDoctor(id)\n            this.props.closeTheModal()\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    render() {\n        const doctor = this.props.doctor\n\n        if (!doctor) {\n            return \"This doctor is not in our system\"\n        } else {\n            return (\n                <div>\n                    <div>{doctor.firstName}</div>\n                    <div>{doctor.lastName}</div>\n                    <div>{doctor.doctorType}</div>\n                    <div>{doctor.address}</div>\n                    <div>\n                        {this.state.clicked === true && <UpdateDoctor />}\n                    </div>\n                    <div>\n                        {this.state.clicked === false &&\n                            <button onClick={() => this.updateDoctor()}>Update Doctor</button>\n                        }\n                    </div>\n                    <button onClick={() => this.handleDelete(doctor.id)}>Delete Doctor</button>\n                    {/* <button onClick={() => }>Delete Doctor</button> */}\n                </div>\n\n\n            )\n        };\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchSingleDoctor: (id) => dispatch(fetchSingleDoctor(id)),\n        deleteDoctor: (id) => dispatch(deleteDoctorThunk(id))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleDoctor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllDoctorsThunk, addDoctorThunk } from \"../redux/doctors\";\nimport { fetchSingleDoctor } from '../redux/singleDoctor'\nimport { AddDoctor } from \"./AddDoctor\";\nimport { Link } from 'react-router-dom'\nimport ReactModal from 'react-modal'\nimport SingleDoctor from './SingleDoctor'\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nexport class AllDoctors extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            showModal: false,\n            showDocModal: false\n        }\n        this.openModal = this.openModal.bind(this)\n        this.openDocModal = this.openDocModal.bind(this)\n        this.closeModal = this.closeModal.bind(this)\n        this.closeDocModal = this.closeDocModal.bind(this)\n    }\n    componentDidMount() {\n        this.props.getAllDoctors()\n    }\n\n    openModal() {\n        this.setState({ showModal: true })\n    }\n\n    openDocModal(id) {\n        this.setState({ showDocModal: true })\n        this.props.fetchSingleDoctor(id)\n    }\n\n    closeModal() {\n        this.setState({ showModal: false })\n    }\n\n    closeDocModal() {\n        this.setState({ showDocModal: false })\n    }\n    render() {\n        const doctors = this.props.doctors;\n        return (\n            <div>\n                <h1>All Doctors</h1>\n\n                <div>\n                    <button onClick={this.openModal}>Add a Doctor</button>\n                    <ReactModal\n                        isOpen={this.state.showModal}\n                        contentLabel=\"Example Modal\"\n                    >\n                        <AddDoctor currentUser={this.props.currentUser} addNewDoctor={this.props.addNewDoctor} />\n\n                        <button onClick={this.closeModal}>close</button>\n                    </ReactModal>\n                </div>\n                <div>\n                    {doctors && doctors.map((doctor) => {\n                        return (\n                            <div key={doctor.id}>\n                                <button onClick={() => this.openDocModal(doctor.id)}>{doctor.firstName} {doctor.lastName}</button>\n                                <ReactModal\n                                    isOpen={this.state.showDocModal}\n                                    contentLabel=\"Example Modal\"\n                                >\n                                    <SingleDoctor closeTheModal={this.closeDocModal} />\n                                    <button onClick={this.closeDocModal}>close</button>\n                                </ReactModal>\n                                {/* <Link to={`/doctors/${doctor.id}`}></Link> */}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        doctors: state.doctors,\n        currentUser: state.currentUser\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor)),\n        fetchSingleDoctor: (id) => dispatch(fetchSingleDoctor(id))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AllDoctors);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchDocuments } from '../redux/documents'\nimport { Link } from 'react-router-dom'\n\nexport class Documents extends Component {\n  componentDidMount() {\n    this.props.fetchDocuments()\n  }\n\n  render() {\n    const { documents } = this.props\n    return (\n      <>\n        {\n          !documents ? 'No Documents' :\n            documents.map((doc, i) => (\n              <div key={i}>\n                <Link to={`/documents/${i}`}>\n                  <img src={doc.secure_url} alt='document' width=\"200\" height=\"200\" />\n                </Link>\n              </div>\n            ))\n        }\n      </>\n    )\n  }\n}\n\nconst mapState = ({ documents }, ownProps) => {\n  const paramId = Number(ownProps.match.params.id)\n  let singleDocument = {}\n  if (documents) {\n    singleDocument = documents.find((document, i) => i === paramId)\n  }\n  return {\n    documents,\n    singleDocument\n  }\n}\n\nconst mapDispatch = { fetchDocuments }\n\nexport default connect(mapState, mapDispatch)(Documents)\n","import React, { Component } from \"react\";\nimport { uploadDocumentsThunk } from '../redux/documents'\nimport { connect } from 'react-redux'\n\nexport class UploadDocuments extends Component {\n  constructor() {\n    super()\n    this.state = {\n      documents: []\n    }\n    this.changeHandler = this.changeHandler.bind(this)\n    this.uploadHandler = this.uploadHandler.bind(this)\n  }\n\n  changeHandler(e) {\n    e.preventDefault()\n    const files = Array.from(e.target.files)\n    this.setState({\n      documents: files\n    })\n  }\n\n  uploadHandler(e) {\n    e.preventDefault()\n    const formData = new FormData()\n    this.state.documents.forEach((file, i) => {\n      formData.append(i, file)\n    })\n    this.props.uploadDocumentsThunk(formData)\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"file\" onChange={this.changeHandler} multiple />\n        <button type=\"submit\" onClick={this.uploadHandler}>Upload</button>\n      </>\n    );\n  };\n}\n\nconst mapDispatchToProps = { uploadDocumentsThunk }\n\nexport default connect(null, mapDispatchToProps)(UploadDocuments);\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/auth'\nimport UploadDocuments from './UploadDocuments'\nimport Documents from './Documents'\n\nconst Home = (props) => {\n  const { id, firstName, lastName, email } = props.currentUser\n  const { handleClick } = props\n  return (\n    <div>\n      <h1>User Profile</h1>\n      <h4>Name: {firstName} {lastName}</h4>\n      <h4>Email: {email}</h4>\n      <span><Documents {...props} /></span>\n      <p><UploadDocuments userid={id} /></p>\n      <p>\n        <button type='submit' onClick={handleClick}>Log out</button>\n      </p>\n    </div >\n  )\n}\nconst mapState = ({ currentUser }) => ({ currentUser })\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleClick: () => {\n    dispatch(logout(ownProps.history))\n  }\n})\n\n\nexport default connect(mapState, mapDispatch)(Home)\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div>\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div id=\"upperRight\">\n        <Link to=\"/medications\">My Medications</Link>\n        <Link to=\"/doctors\">My Doctors</Link>\n        <Link to=\"/conditions\">My Conditions</Link>\n        <Link to=\"/uploadDoc\">Add Documents</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport Conditions from \"./Conditions\";\nimport Medications from \"./Medications\";\nimport { fetchCurrentUser } from \"../redux/auth\";\nimport DailyCheckin from \"./DailyCheckin\";\nimport SingleCondition from \"./SingleCondition\";\nimport AllDoctors from \"./AllDoctors\";\nimport Documents from \"./Documents\"\nimport Profile from \"./Profile\"\nimport SingleDoctor from \"./SingleDoctor\";\nimport SingleMedication from \"./SingleMedication\";\nimport Navbar from \"./Navbar\";\n\n/* -----------------    COMPONENT     ------------------ */\n\nclass Root extends Component {\n  componentDidMount() {\n    this.props.fetchInitialData();\n  }\n  render() {\n    const { isLoggedIn } = this.props\n    return (\n\n      <Switch>\n        {/* Routes placed here are available to all visitors */}\n        <Route path='/login' component={Login} />\n        <Route path='/signup' component={Signup} />\n\n        {isLoggedIn && (\n          <>\n            {/* Routes placed here are only available after logging in */}\n            <Navbar />\n            <Route path='/' component={Home} />\n            <Route exact path='/dailycheckin/score' component={DailyCheckin} />\n            <Route exact path='/conditions' component={Conditions} />\n            <Route path='/conditions/:id' component={SingleCondition} />\n            <Route path=\"/medications\" component={Medications} />\n            <Route path=\"/medications/:id\" component={SingleMedication} />\n            <Route path=\"/doctors\" component={AllDoctors} />\n            <Route path=\"/doctors/:id\" component={SingleDoctor} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/documents/:id\" component={Documents} />\n          </>\n        )}\n\n        {/* Displays our Login component as a fallback */}\n        <Route component={Login} />\n      </Switch>\n    );\n  }\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapState = state => {\n  return {\n    // Being 'logged in' for our purposes will be defined has having a state.user that has a truthy id.\n    // Otherwise, state.user will be an empty object, and state.user.id will be falsey\n    isLoggedIn: !!state.currentUser.id\n  }\n}\nconst mapDispatch = (dispatch) => ({\n  fetchInitialData: () => {\n    dispatch(fetchCurrentUser());\n  },\n});\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Root));\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"column\">Github!</div>\n      <div className=\"column\">Names!</div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from './store'\nimport Root from './components/Root'\nimport './style.scss'\nimport Footer from \"./components/Footer\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Root />\n      <Footer />\n    </Router>\n  </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}