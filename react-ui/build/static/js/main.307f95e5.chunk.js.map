{"version":3,"sources":["redux/API_URL.js","redux/conditions.js","redux/singleCondition.js","redux/auth.js","redux/users.js","redux/medications.js","redux/singleMedication.js","redux/doctors.js","redux/singleDoctor.js","redux/dcCondition.js","redux/dcDoctor.js","redux/dcMedication.js","store.js","redux/documents.js","components/Home.js","components/Signup.js","components/Login.js","components/AddConditionForm.js","components/UpdateCondition.js","components/SingleCondition.js","components/Conditions.js","components/AddMedication.js","components/RemoveMedication.js","components/UpdateMedication.js","components/SingleMedication.js","components/Medications.js","components/DCConditionForm.js","components/ConditionDC.js","components/Documents.js","components/UploadDocuments.js","components/Profile.js","components/AddDoctor.js","components/UpdateDoctor.js","components/SingleDoctor.js","components/AllDoctors.js","components/Navbar.js","components/DCDoctorForm.js","components/DoctorDC.js","components/DCMedicationForm.js","components/MedicationDC.js","components/Root.js","components/Footer.js","serviceWorker.js","index.js"],"names":["API_URL","initialState","getAllConditions","conditions","type","addCondition","condition","deleteCondition","id","updateAllConditions","updateCondition","getSingleConditionThunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_yield$axios$get","data","wrap","_context","prev","next","axios","get","concat","sent","t0","console","log","stop","_x","apply","this","arguments","SET_CURRENT_USER","REMOVE_CURRENT_USER","setCurrentUser","user","logout","history","_ref2","_callee2","_context2","delete","push","error","_x2","setUserAndRedirect","INITIALIZE","CREATE","REMOVE","UPDATE","newMedication","medication","removeMedication","updateSingleMedication","fetchMedId","medName","idGroup","rxnormId","medId","addDoctor","doctor","deleteDoctor","updateAllDoctors","addDoctorThunk","_yield$axios$post","post","updateDoctor","fetchSingleDoctor","reducer","combineReducers","users","length","undefined","action","toConsumableArray","filter","map","currentUser","state","updated","objectSpread","name","diagnosed","typeOfPain","address","medications","med","rxcui","documents","doctors","firstName","lastName","doctorType","score","appointment","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","connect","ownProps","handleClick","props","react_default","createElement","react_router_dom","to","onClick","handleSubmit","event","preventDefault","target","value","email","password","credentials","_ref3","_callee3","_context3","_x3","signup","onSubmit","placeholder","required","href","login","AddConditionForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","userId","handleChange","bind","assertThisInitialized","evt","_this$setState","setState","defineProperty","className","onChange","Component","UpdateCondition","_yield$axios$put","put","updateSingleConditionThunk","SingleCondition","clicked","handleDelete","getSingleCondition","closeTheModal","_this2","components_UpdateCondition","removeCondition","_yield$axios$get2","deleteConditionThunk","Conditions","showModal","showDocModal","openModal","openDocModal","closeModal","closeDocModal","lib_default","isOpen","contentLabel","components_AddConditionForm","key","components_SingleCondition","addConditionThunk","AddMedication","dosage","frequency","addMedication","htmlFor","React","RemoveMedication","remove","UpdateMedication","update","updatedMedication","updateMedication","SingleMedication","_React$Component","view","handleUpdate","handleClose","inherits","createClass","loadSingleMedication","err","Fragment","components_UpdateMedication","fetchMedication","Medications","selected","add","handleSelect","handleAdd","handleRemove","fetchMedications","_this$props","components_RemoveMedication","components_AddMedication","components_SingleMedication","deleteMedication","DCConditionForm","isClicked","rate","date","Date","notes","conditionId","checked","addScore","ConditionDC","getScore","components_DCConditionForm","Documents","_Component","fetchDocuments","doc","i","src","secure_url","alt","width","height","mapDispatch","resources","paramId","Number","match","params","singleDocument","find","document","UploadDocuments","changeHandler","uploadHandler","e","files","Array","from","formData","FormData","forEach","file","append","uploadDocumentsThunk","multiple","mapDispatchToProps","_props$currentUser","components_Documents","components_UploadDocuments","userid","AddDoctor","_useState","useState","_useState2","slicedToArray","setFirstName","_useState3","_useState4","setLastName","_useState5","_useState6","setAddress","_useState7","_useState8","setDoctorType","payload","addNewDoctor","newDoctor","updatedDoctor","updateSingleDoctor","SingleDoctor","_handleDelete","components_UpdateDoctor","deleteDoctorThunk","AllDoctors","getAllDoctors","components_SingleDoctor","Navbar","DCDoctorForm","time","doctorId","addAppointment","DoctorDC","getAppointment","components_DCDoctorForm","appointmentDate","DCMedicationForm","medicationId","eachMed","MedicationDC","getMedication","components_DCMedicationForm","Root","fetchInitialData","isLoggedIn","react_router","path","component","Login","Signup","components_Navbar","exact","Home","Profile","withRouter","_ref4","_callee4","_context4","_x4","Footer","Boolean","window","location","hostname","ReactDOM","render","es","components_Root","components_Footer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.307f95e5.chunk.js","sourcesContent":["export const API_URL = 'https://elemental-health.herokuapp.com'\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_ALL_CONDITIONS = 'GET_ALL_CONDITIONS';\nconst ADD_CONDITION = 'ADD_CONDITION';\nconst DELETE_CONDITION = 'DELETE_CONDITION';\nconst UPDATE_CONDITIONS_LIST = 'UPDATE_CONDITIONS_LIST';\nconst getAllConditions = conditions => {\n  return {\n    type: GET_ALL_CONDITIONS,\n    conditions\n  }\n}\nconst addCondition = condition => {\n  return {\n    type: ADD_CONDITION,\n    condition\n  }\n}\nconst deleteCondition = id => {\n  return {\n    type: DELETE_CONDITION,\n    id\n  }\n}\nexport const updateAllConditions = (id, condition) => {\n  return {\n      type: UPDATE_CONDITIONS_LIST,\n      id,\n      condition\n  }\n}\nexport const getAllConditionsThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/conditions/`);\n      dispatch(getAllConditions(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const addConditionThunk = (condition) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/conditions`, condition);\n      dispatch(addCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteConditionThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/api/conditions/${id}`);\n      dispatch(deleteCondition(id));\n      const {data} = await axios.get(`${API_URL}/api/conditions/`);\n      dispatch(getAllConditions(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_CONDITIONS:\n      return action.conditions\n    case ADD_CONDITION:\n      return [...state, action.condition]\n    case DELETE_CONDITION:\n      return state.filter(condition => condition.id !== action.id);\n    case UPDATE_CONDITIONS_LIST:\n      return [...state].map((condition) => {\n          if (condition.id === action.id) {\n              return action.condition\n          } else {\n              return condition\n          }\n      })\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nimport {updateAllConditions} from './conditions';\nconst initialState = {};\n\nconst GET_SINGLE_CONDITION = 'GET_SINGLE_CONDITION'\nconst UPDATE_CONDITION = 'UPDATE_CONDITION'\n\nconst getSingleCondition = condition => {\n  return {\n    type: GET_SINGLE_CONDITION,\n    condition\n  }\n}\nconst updateCondition = condition => {\n  return {\n    type: UPDATE_CONDITION,\n    condition\n  }\n}\nexport const getSingleConditionThunk = id => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/conditions/${id}`);\n      dispatch(getSingleCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const updateSingleConditionThunk = (\n  id,\n  condition\n) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.put(\n        `${API_URL}/api/conditions/${id}`,\n        condition\n      );\n      dispatch(updateCondition(data));\n      dispatch(updateAllConditions(data.id, data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SINGLE_CONDITION:\n      return action.condition\n    case UPDATE_CONDITION:\n      let updated = { ...state.condition }\n      updated.name = action.condition.name\n      updated.diagnosed = action.condition.diagnosed\n      updated.typeOfPain = action.condition.address\n      return updated\n    default:\n      return state\n  }\n}\n","import axios from 'axios'\nimport { API_URL } from './API_URL'\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst SET_CURRENT_USER = 'SET_CURRENT_USER'\nconst REMOVE_CURRENT_USER = 'REMOVE_CURRENT_USER'\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst setCurrentUser = user => ({ type: SET_CURRENT_USER, user })\nconst removeCurrentUser = () => ({ type: REMOVE_CURRENT_USER })\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(currentUser = {}, action) {\n  switch (action.type) {\n\n    case SET_CURRENT_USER:\n      return action.user\n\n    case REMOVE_CURRENT_USER:\n      return {}\n\n    default:\n      return currentUser\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const login = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/login`, credentials)\n      // const { data } = await axios.post(`/auth/local/login`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Logging in with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const logout = history => {\n  return async dispatch => {\n    try {\n      await axios.delete(`${API_URL}/auth/local/logout`)\n      dispatch(removeCurrentUser())\n      history.push('/login')\n    } catch (err) {\n      console.error('Logging out was unsuccesful', err)\n    }\n  }\n}\n\n\nexport const signup = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/signup`, credentials)\n      // const { data } = await axios.post(`/auth/local/signup`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Signing up with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const fetchCurrentUser = () => {\n  return async dispatch => {\n    try {\n      console.log(API_URL)\n      const { data } = await axios.get(`/${API_URL}/auth/local/me`)\n      // const { data } = await axios.get(`/auth/local/me`)\n      dispatch(setCurrentUser(data))\n    } catch (err) {\n      console.error('Fetching current user failed', err)\n    }\n  }\n}\n\n/* ------------      HELPER FUNCTIONS     ------------------ */\n\nfunction setUserAndRedirect(user, history, dispatch) {\n  console.log('setUserAndRedirect')\n  dispatch(setCurrentUser(user))\n  history.push(`/profile`)\n}\n","import axios from 'axios'\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst INITIALIZE = 'INITIALIZE_USERS'\nconst CREATE = 'CREATE_USER'\nexport const REMOVE = 'REMOVE_USER'\nconst UPDATE = 'UPDATE_USER'\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst init = users => ({ type: INITIALIZE, users })\nexport const create = user => ({ type: CREATE, user })\nconst remove = id => ({ type: REMOVE, id })\nconst update = user => ({ type: UPDATE, user })\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(users = [], action) {\n  switch (action.type) {\n    case INITIALIZE:\n      return action.users\n\n    case CREATE:\n      return [action.user, ...users]\n\n    case REMOVE:\n      return users.filter(user => user.id !== action.id)\n\n    case UPDATE:\n      return users.map(user => (\n        action.user.id === user.id ? action.user : user\n      ))\n\n    default:\n      return users\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const fetchUsers = () => dispatch => {\n  axios.get('/api/users')\n    .then(res => dispatch(init(res.data)))\n}\n\nexport const removeUser = id => dispatch => {\n  axios.delete(`/api/users/${id}`)\n    .then(() => dispatch(remove(id)))\n    .catch(err => console.error(`Removing user: ${id} unsuccesful`, err))\n}\n\nexport const addUser = user => dispatch => {\n  axios.post('/api/users', user)\n    .then(res => dispatch(create(res.data)))\n    .catch(err => console.error(`Creating user: ${user} unsuccesful`, err))\n}\n\nexport const updateUser = (id, user) => dispatch => {\n  axios.put(`/api/users/${id}`, user)\n    .then(res => dispatch(update(res.data)))\n    .catch(err => console.error(`Updating user: ${user} unsuccesful`, err))\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\n\nconst GET_MEDICATIONS = \"GET_MEDICATIONS\";\nconst NEW_MEDICATION = \"NEW_MEDICATION\";\nconst REMOVE_MEDICATION = \"REMOVE_MEDICATION\";\n\nconst initialState = [];\n\nconst getMedications = (medications) => ({\n  type: GET_MEDICATIONS,\n  medications,\n});\n\nconst newMedication = (medication) => ({\n  type: NEW_MEDICATION,\n  medication,\n});\n\nconst removeMedication = (id) => ({\n  type: REMOVE_MEDICATION,\n  id,\n});\n\nexport const fetchMedications = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications`);\n      dispatch(getMedications(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addMedication = (medication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(\n        `${API_URL}/api/medications`,\n        medication\n      );\n      dispatch(newMedication(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nexport const deleteMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`${API_URL}/api/medications/${id}`);\n      dispatch(removeMedication(id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATIONS:\n      return action.medications;\n    case NEW_MEDICATION:\n      return [...state, action.medication];\n    case REMOVE_MEDICATION:\n      return state.filter((med) => med.id !== action.id);\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\n\nconst GET_MEDICATION = \"GET_MEDICATION\";\nconst UPDATED_MEDICATION = \"UPDATED_MEDICATION\";\nconst GET_ID = \"GET_ID\";\n\nconst initialState = {};\n\nconst getSingleMedication = (medication) => ({\n  type: GET_MEDICATION,\n  medication,\n});\n\nconst getMedId = (medId) => ({\n  type: GET_ID,\n  medId,\n});\n\nconst updateSingleMedication = (medication) => ({\n  type: UPDATED_MEDICATION,\n  medication,\n});\n\nexport const fetchMedId = (medName) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(\n        `https://rxnav.nlm.nih.gov/REST/rxcui.json?name=${medName}`\n      );\n      console.log(data.idGroup.rxnormId[0]);\n      dispatch(getMedId(data.idGroup.rxnormId[0]));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications/${id}`);\n      dispatch(getSingleMedication(data));\n      dispatch(fetchMedId(data.name));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateMedication = (medication, updatedMedication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(\n        `${API_URL}/api/medications/${medication.id}`,\n        updatedMedication\n      );\n\n      dispatch(updateSingleMedication(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATION:\n      return { ...state, medication: action.medication };\n    case UPDATED_MEDICATION:\n      return { ...state, medication: action.medication };\n    case GET_ID:\n      return { ...state, rxcui: action.medId };\n    default:\n      return state;\n  }\n}\n","import axios from 'axios'\n\nconst initialState = []\n\n//ACTION TYPES\nconst ADD_DOCTOR = 'ADD_DOCTOR'\nconst GET_ALL_DOCTORS = 'GET_ALL_DOCTORS'\nconst REMOVE_DOCTOR = 'REMOVE_DOCTOR'\nconst UPDATE_DOCTORS_LIST = 'UPDATE_DOCTORS_LIST'\n\n//ACTION CREATORS\nconst addDoctor = doctor => {\n    return {\n        type: ADD_DOCTOR,\n        doctor\n    }\n}\nconst deleteDoctor = id => {\n    return {\n        type: REMOVE_DOCTOR,\n        id\n    }\n}\n\nconst getAllDoctors = doctors => {\n    return {\n        type: GET_ALL_DOCTORS,\n        doctors\n    }\n}\n\nexport const updateAllDoctors = (id, doctor) => {\n    return {\n        type: UPDATE_DOCTORS_LIST,\n        id,\n        doctor\n    }\n}\n\n//THUNKS\nexport const addDoctorThunk = (doctor) => {\n    return async dispatch => {\n        try {\n            let { data } = await axios.post('/api/doctors', doctor)\n            dispatch(addDoctor(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const deleteDoctorThunk = id => {\n    return async dispatch => {\n        try {\n            await axios.delete(`/api/doctors/${id}`)\n            dispatch(deleteDoctor(id))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const getAllDoctorsThunk = () => {\n    return async dispatch => {\n        try {\n            const { data } = await axios.get('/api/doctors/')\n            dispatch(getAllDoctors(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ALL_DOCTORS:\n            return action.doctors\n        case REMOVE_DOCTOR:\n            return state.filter(doctor => doctor.id !== action.id)\n        case ADD_DOCTOR:\n            return [...state, action.doctor]\n        case UPDATE_DOCTORS_LIST:\n            return [...state].map((doctor) => {\n                if (doctor.id === action.id) {\n                    return action.doctor\n                } else {\n                    return doctor\n                }\n            })\n        default:\n            return state\n    }\n}\n","import axios from 'axios'\nimport { updateAllDoctors } from './doctors'\n\nconst initialState = {}\n\n\nconst SET_SINGLE_DOCTOR = 'SET_SINGLE_DOCTOR'\nconst UPDATE_SINGLE_DOCTOR = 'UPDATE_SINGLE_DOCTOR'\n\n\nexport const setSingleDoctor = (doctor) => {\n    return {\n        type: SET_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\nexport const updateDoctor = (doctor) => {\n    return {\n        type: UPDATE_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\n\nexport const fetchSingleDoctor = (id) => {\n    console.log('inside the thunk')\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.get(`/api/doctors/${id}`)\n            console.log(\"what is data in thunk\", data)\n            dispatch(setSingleDoctor(data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n};\n\nexport const updateSingleDoctor = (id, doctor) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.put(`/api/doctors/${id}`, doctor)\n            console.log(\"what is data\", data)\n            dispatch(updateDoctor(data))\n            dispatch(updateAllDoctors(data.id, data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SINGLE_DOCTOR:\n            return action.doctor\n        case UPDATE_SINGLE_DOCTOR:\n            let updated = { ...state.doctor }\n            updated.firstName = action.doctor.firstName\n            updated.lastName = action.doctor.lastName\n            updated.address = action.doctor.address\n            updated.doctorType = action.doctor.doctorType\n            return updated\n        default:\n            return state\n    }\n}\n\n\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_SCORE = 'GET_SCORE';\nconst ADD_SCORE = 'ADD_SCORE';\n\nconst getScore = score => {\n  return {\n    type: GET_SCORE,\n    score\n  }\n}\nconst addScore = score => {\n  return {\n    type: ADD_SCORE,\n    score\n  }\n}\n\nexport const getScoreThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/score`)\n      dispatch(getScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addScoreThunk = (rate, date, notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/score`, {rate, date, notes})\n      dispatch(addScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SCORE:\n      return action.score\n    case ADD_SCORE:\n      return [\n        ...state,\n        action.score\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_APPOINTMENT = 'GET_APPOINTMENT';\nconst ADD_APPOINTMENT = 'ADD_APPOINTMENT';\n\nconst getAppointment = appointment => {\n  return {\n    type: GET_APPOINTMENT,\n    appointment\n  }\n}\nconst addAppointment = appointment => {\n  return {\n    type: ADD_APPOINTMENT,\n    appointment\n  }\n}\n\nexport const getAppointmentThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/appointment`)\n      console.log(data)\n      dispatch(getAppointment(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addAppointmentThunk = (appointmentDate) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/appointment`, {appointmentDate})\n      dispatch(addAppointment(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_APPOINTMENT:\n      return action.appointment\n    case ADD_APPOINTMENT:\n      return [\n        ...state,\n        action.appointment\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_MEDICATION = 'GET_MEDICATION';\nconst ADD_MEDICATION = 'ADD_MEDICATION';\n\nconst getMedication = med => {\n  return {\n    type: GET_MEDICATION,\n    med\n  }\n}\nconst addMedication = med => {\n  return {\n    type: ADD_MEDICATION,\n    med\n  }\n}\n\nexport const getMedicationThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/meds`)\n      console.log(data)\n      dispatch(getMedication(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addMedicationThunk = (notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/meds`, {notes})\n      dispatch(addMedication(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATION:\n      return action.med\n    case ADD_MEDICATION:\n      return [\n        ...state,\n        action.med\n      ]\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport conditions from \"./redux/conditions\";\nimport condition from \"./redux/singleCondition\";\nimport currentUser from \"./redux/auth\";\nimport users from \"./redux/users\";\nimport medications from \"./redux/medications\";\nimport medication from \"./redux/singleMedication\";\nimport documents from \"./redux/documents\";\nimport doctors from \"./redux/doctors\";\nimport doctor from './redux/singleDoctor';\nimport score from './redux/dcCondition';\nimport appointment from './redux/dcDoctor';\nimport med from './redux/dcMedication'\nconst reducer = combineReducers({\n  users,\n  currentUser,\n  conditions,\n  condition,\n  medications,\n  medication,\n  documents,\n  doctors,\n  doctor,\n  score,\n  appointment,\n  med\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\n","import axios from \"axios\";\n\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst GET_DOCUMENTS = \"GET_DOCUMENTS\";\nconst UPLOAD_DOCUMENTS = \"UPLOAD_DOCUMENTS\"\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst getDocuments = (documents) => ({ type: GET_DOCUMENTS, documents });\nconst uploadDocuments = (documents) => ({ type: UPLOAD_DOCUMENTS, documents });\n\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function (state = [], action) {\n  switch (action.type) {\n\n    case GET_DOCUMENTS:\n      return action.documents;\n\n    case UPLOAD_DOCUMENTS:\n      return state.concat(action.documents);\n\n    default:\n      return state;\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\nexport const fetchDocuments = () => {\n  return async (dispatch) => {\n    try {\n      // figure out the api request for Cloudinary\n      const { data } = await axios.get(\"/api/uploadDocuments\");\n      console.log(data.resources)\n      dispatch(getDocuments(data.resources));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const uploadDocumentsThunk = (formData) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post('api/uploadDocuments', formData)\n      dispatch(uploadDocuments(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../redux/auth'\n\n\nconst Home = (props) => {\n  console.log(\"home page\")\n  const { firstName } = props.currentUser\n  const { handleClick } = props\n  return (\n    <div>\n      <h1>Welcome {firstName}!</h1>\n      <h2>Onboarding</h2>\n      <Link to=\"/doctors\">Click to follow our onboarding</Link>\n      <p>\n        <button type='submit' onClick={handleClick}>Log out</button>\n      </p>\n    </div >\n  )\n}\nconst mapState = ({ currentUser }) => ({ currentUser })\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleClick: () => {\n    dispatch(logout(ownProps.history))\n  }\n})\n\nexport default connect(mapState, mapDispatch)(Home)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { signup } from '../redux/auth'\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Signup = (props) => {\n  const { handleSubmit } = props\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>First Name</label>\n        <input\n          name='firstName'\n          type='text'\n          placeholder='First Name'\n          required\n        />\n        <p>\n          <label>Last Name</label>\n          <input\n            name='lastName'\n            type='text'\n            placeholder='Last Name'\n            required\n          />\n        </p>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          required\n        />\n        <p>\n          <label>Password</label>\n          <input\n            name='password'\n            type='password'\n            required\n          />\n        </p>\n        <button type='submit'>Sign up</button>\n      </form>\n      <div>\n        <span>OR</span>\n      </div>\n      <p>\n        <a\n          target='_self'\n          href='/auth/google'\n        >\n          <i />\n          <span>Sign up with Google</span>\n        </a>\n        <a\n          target='_self'\n          href='/auth/facebook'\n        >\n          <i />\n          <span>Sign up with Facebook</span>\n        </a>\n      </p>\n    </div>\n  )\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: event => {\n    event.preventDefault()\n    const firstName = event.target.firstName.value\n    const lastName = event.target.lastName.value\n    const email = event.target.email.value\n    const password = event.target.password.value\n    const credentials = { firstName, lastName, email, password }\n    dispatch(signup(credentials, ownProps.history))\n  }\n})\n\nexport default connect(null, mapDispatch)(Signup)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../redux/auth'\nimport { API_URL } from '../redux/API_URL';\n/* -----------------    COMPONENT     ------------------ */\n\nconst Login = (props) => {\n  console.log('Login')\n  const { handleSubmit } = props\n  console.log('login page')\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          required\n        />\n        <p>\n          <label>Password</label>\n          <input\n            name='password'\n            type='password'\n            required\n          />\n        </p>\n        <button type='submit'>Log in</button>\n      </form>\n      <div>\n        <span>OR</span>\n      </div>\n      <p>\n        <a\n          target='_self'\n          href={`${API_URL}/auth/google`}\n        >\n          <i />\n          <span>Log in with Google</span>\n        </a>\n        <a\n          target='_self'\n          href={`${API_URL}/auth/facebook`}\n        >\n          <i />\n          <span>Log in with Facebook</span>\n        </a>\n      </p>\n    </div>\n  )\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: event => {\n    event.preventDefault()\n    const email = event.target.email.value\n    const password = event.target.password.value\n    const credentials = { email, password }\n    dispatch(login(credentials, ownProps.history))\n  }\n})\n\nexport default connect(null, mapDispatch)(Login)\n\n","import React, { Component } from \"react\";\nclass AddConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const userId = this.props.currentUser.id;\n\n    this.setState({ [evt.target.name]: evt.target.value, userId });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addCondition(this.state);\n    this.setState({\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Add new condition form</h1>\n          <div>\n            <input\n              className=\"input\"\n              placeholder=\"Condition name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </div>\n          <div>\n            <label>\n              Is it diagnosed?\n              <select\n                onChange={this.handleChange}\n                value={this.state.diagnosed}\n                name=\"diagnosed\"\n              >\n                <option value=\"\"></option>\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label>\n              Type of pain?\n              <select\n                onChange={this.handleChange}\n                value={this.state.typeOfPain}\n                name=\"typeOfPain\"\n              >\n                <option value=\"\"></option>\n                <option value=\"mental health\">mental health</option>\n                <option value=\"physical\">physical</option>\n              </select>\n            </label>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default AddConditionForm;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateSingleConditionThunk\n} from '../redux/singleCondition'\nclass UpdateCondition extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value})\n  }\n  handleSubmit(evt) {\n    evt.preventDefault()\n    const id = this.props.condition.id\n    this.props.updateCondition(id, this.state)\n    this.setState({\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    })\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>Update Condition</h1>\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Update Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n        </div>\n        <br />\n\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Is diagnosed\"\n            type=\"text\"\n            name=\"diagnosed\"\n            onChange={this.handleChange}\n            value={this.state.diagnosed}\n          />\n        </div>\n        <br />\n\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Update Type Of Pain\"\n            type=\"text\"\n            name=\"typeOfPain\"\n            onChange={this.handleChange}\n            value={this.state.typeOfPain}\n          />\n        </div>\n        <br />\n        <button type=\"submit\">\n          Submit\n        </button>\n      </form>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n      condition: state.condition,\n      currentUser: state.currentUser\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      updateCondition: (id, condition) => dispatch(updateSingleConditionThunk(id, condition)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateCondition)\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  getSingleConditionThunk,\n} from '../redux/singleCondition';\nimport {deleteConditionThunk} from '../redux/conditions';\nimport UpdateCondition from './UpdateCondition';\nclass SingleCondition extends Component {\n  constructor() {\n    super()\n    this.state = {\n        clicked: false\n    }\n    this.updateCondition = this.updateCondition.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n}\n  componentDidMount() {\n    const id = this.props.condition.id;\n    this.props.getSingleCondition(id);\n  }\n  updateCondition = () => {\n    this.setState({ clicked: true })\n  }\n  async handleDelete(id) {\n    try {\n        await this.props.deleteCondition(id)\n        this.props.closeTheModal()\n    } catch (err) {\n        console.log(err)\n    }\n  }\n  render() {\n    const condition = this.props.condition;\n    if (!condition) {\n      return \"This condition is not in our system\"\n  } else {\n    return (\n      <div>\n        <div>{condition.name} </div>\n        <div>{condition.diagnosed}</div>\n        <div>{condition.typeOfPain}</div>\n        <div>\n          {this.state.clicked && <UpdateCondition />}\n        </div>\n        <div>\n            {!this.state.clicked &&\n                <button onClick={() => this.updateCondition()}>Update Condition</button>\n            }\n        </div>\n        {\n        <button\n        type=\"submit\"\n        onClick={() => this.props.removeCondition(condition.id)}\n        >\n          Remove Condition\n        </button>\n        }\n      </div>\n    )\n  }\n}\n}\nconst mapStateToProps = state => {\n  return {\n    condition: state.condition,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSingleCondition: id => dispatch(getSingleConditionThunk(id)),\n    removeCondition: id => dispatch(deleteConditionThunk(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCondition)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllConditionsThunk, addConditionThunk } from '../redux/conditions';\nimport {getSingleConditionThunk} from '../redux/singleCondition';\nimport AddConditionForm from './AddConditionForm';\nimport SingleCondition from './SingleCondition';\nimport ReactModal from 'react-modal';\nconst customStyles = {\n  content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)'\n  }\n};\nclass Conditions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      showDocModal: false\n    }\n      this.openModal = this.openModal.bind(this)\n      this.openDocModal = this.openDocModal.bind(this)\n      this.closeModal = this.closeModal.bind(this)\n      this.closeDocModal = this.closeDocModal.bind(this)\n  }\n  componentDidMount() {\n    this.props.getAllConditions();\n  }\n  openModal() {\n    this.setState({ showModal: true })\n  }\n\n  openDocModal(id) {\n      this.setState({ showDocModal: true })\n      this.props.getSingleCondition(id)\n  }\n\n  closeModal() {\n      this.setState({ showModal: false })\n  }\n\n  closeDocModal() {\n      this.setState({ showDocModal: false })\n  }\n  render() {\n    const conditions = this.props.conditions;\n    return (\n      <div>\n        <h1>All conditions</h1>\n        <button onClick={this.openModal}>Add a Condition</button>\n        <div>\n          <ReactModal\n            isOpen={this.state.showModal}\n            contentLabel=\"Example Modal\"\n          >\n            <AddConditionForm currentUser={this.props.currentUser} addCondition={this.props.addCondition} />\n            <button onClick={this.closeModal}>close</button>\n          </ReactModal>\n          </div>\n          <div>\n            {conditions && conditions.map((condition) => {\n              return (\n                <div key={condition.id}>\n                  <button onClick={() => this.openDocModal(condition.id)}>{condition.name}</button>\n                  <ReactModal\n                    isOpen={this.state.showDocModal}\n                    contentLabel=\"Example Modal\"\n                  >\n                    <SingleCondition closeTheModal={this.closeDocModal} />\n                    <button onClick={this.closeDocModal}>close</button>\n                  </ReactModal>\n                </div>\n              )\n            })}\n          </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    conditions: state.conditions,\n    currentUser: state.currentUser,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllConditions: () => dispatch(getAllConditionsThunk()),\n    addCondition: (condition) => dispatch(addConditionThunk(condition)),\n    getSingleCondition: (id) => dispatch(getSingleConditionThunk(id))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Conditions)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMedication } from \"../redux/medications\";\n\nclass AddMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"\", dosage: \"\", frequency: \"\", userId: 0 };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleChange(event) {\n    const currentUser = this.props.currentUser.id;\n    this.setState({ userId: currentUser });\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({ name: \"\", dosage: \"\", frequency: \"\", userId: 0 });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Medication Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return { addMedication: (medication) => dispatch(addMedication(medication)) };\n};\n\nexport default connect(mapState, mapDispatch)(AddMedication);\n","import React from \"react\";\n\n// function handleRemove(){\n\n// }\nconst RemoveMedication = (props) => {\n  const { medication, remove } = props;\n\n  return (\n    <div>\n      <button type=\"sumbit\" onClick={() => remove(medication.id)}>\n        Delete\n      </button>\n\n      {/* <button type=\"sumbit\" onClick={() => (remove(medication.id)\n   )}>\n        Delete\n      </button> */}\n    </div>\n  );\n};\n\nexport default RemoveMedication;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateMedication } from \"../redux/singleMedication\";\n\nclass UpdateMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.props.update(this.props.medication, this.state);\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Updated Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Updated Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Updated Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <br />\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n  return {\n    update: (medication, updatedMedication) =>\n      dispatch(updateMedication(medication, updatedMedication)),\n  };\n};\n\nexport default connect(null, mapDispatch)(UpdateMedication);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMedication } from \"../redux/singleMedication\";\nimport UpdateMedication from \"./UpdateMedication\";\n\nexport class SingleMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { view: true, update: false };\n\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    // this.handleRemove = this.handleRemove.bind(this);\n  }\n  componentDidMount() {\n    try {\n      const id = this.props.medication.id;\n      this.props.loadSingleMedication(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleClose() {\n    this.setState({ update: false });\n  }\n\n  handleUpdate() {\n    this.setState({ update: true });\n  }\n\n  // handleRemove() {\n  //   this.setState({ view: false });\n\n  // }\n\n  render() {\n    const medication = this.props.medication;\n    const rxcui = this.props.rxcui;\n\n    return (\n      <div>\n        {this.state.view && (\n          <>\n            {medication && !this.state.update && (\n              <div>\n                <p>{medication.name}</p>\n                <p>{medication.dosage}</p>\n                <p>{medication.frequency}</p>\n                <p>{rxcui}</p>\n                {/*\n                <RemoveMedication\n                  medication={medication}\n                  remove={this.props.remove}\n                /> */}\n                <button type=\"button\" onClick={() => this.handleUpdate()}>\n                  Update Medication Info\n                </button>\n              </div>\n            )}\n            {medication && this.state.update && (\n              <div>\n                <UpdateMedication medication={medication} />\n                <button type=\"button\" onClick={() => this.handleClose()}>\n                  Cancel Update\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    // medication: state.medication.medication,\n    rxcui: state.medication.rxcui,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadSingleMedication: (id) => dispatch(fetchMedication(id)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SingleMedication);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { fetchMedications, deleteMedication } from \"../redux/medications\";\nimport AddMedication from \"./AddMedication\";\nimport RemoveMedication from \"./RemoveMedication\";\nimport SingleMedication from \"./SingleMedication\";\n\nclass Medications extends React.Component {\n  constructor() {\n    super();\n    this.state = { selected: null, add: false };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchMedications();\n  }\n\n  handleSelect(medication) {\n    this.setState({ selected: medication, add: false });\n  }\n\n  handleAdd() {\n    this.setState({ selected: null, add: true });\n  }\n\n  handleClose() {\n    this.setState({ selected: null, add: false });\n  }\n\n  handleRemove(id) {\n    this.props.remove(id);\n    this.handleClose();\n  }\n\n  render() {\n    const { medications, remove } = this.props;\n\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Saved Medications</h3>\n          <div className=\"scroll\">\n            {medications &&\n              medications.map((medication) => {\n                return (\n                  <div key={medication.id} className=\"listItem\">\n                    <button\n                      type=\"button\"\n                      onClick={() => this.handleSelect(medication)}\n                    >\n                      {medication.name}\n                    </button>\n                    {/* <p onClick={this.handleSelect(medication)}> */}\n                    {/* <Link to={`/medications/${medication.id}`}>\n                      {medication.name}\n                    </Link> */}\n\n                    <RemoveMedication medication={medication} remove={remove} />\n                  </div>\n                );\n              })}\n          </div>\n          <button type=\"button\" onClick={() => this.handleAdd()}>\n            Add a Medication\n          </button>\n        </div>\n        <div className=\"column\">\n          <div className=\"modal\">\n            {this.state.add && (\n              <>\n                <AddMedication />\n                <button type=\"button\" onClick={() => this.handleClose()}>\n                  X\n                </button>\n              </>\n            )}\n\n            {this.state.selected && (\n              <>\n                <button type=\"button\" onClick={() => this.handleClose()}>\n                  X\n                </button>\n\n                <SingleMedication\n                  medication={this.state.selected}\n                  remove={remove}\n                  // close={this.handleClose}\n                />\n\n                <RemoveMedication\n                  medication={this.state.selected}\n                  remove={this.handleRemove}\n                  // close={this.handleClose}\n                />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    medications: state.medications,\n    currentUser: state.currentUser,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMedications: () => dispatch(fetchMedications()),\n    remove: (id) => dispatch(deleteMedication(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Medications);\n","import React, {Component} from 'react';\nclass DCConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: new Date(),\n      notes: '',\n      conditionId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const conditionId = this.props.condition.id;\n    this.setState({conditionId});\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addScore(this.state);\n    this.setState({\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: '',\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const condition = this.props.condition;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {condition.name}\n          <input\n          type='checkbox'\n          name='isClicked'\n          onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n          <div>\n          <div>\n          <label>\n            Give score for condition from 1 to 10\n            <input\n              className='input'\n              placeholder='1-10'\n              type='text'\n              name='rate'\n              onChange={this.handleChange}\n              value={this.state.rate}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Add some notes\n            <input\n              className='input'\n              placeholder='Notes'\n              type='text'\n              name='notes'\n              onChange={this.handleChange}\n              value={this.state.notes}\n            />\n          </label>\n        </div>\n          <button type=\"submit\">\n            Submit\n          </button>\n          </div> : null\n        }\n\n      </form>\n    )\n  }\n}\nexport default DCConditionForm;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getScoreThunk, addScoreThunk} from '../redux/dcCondition';\nimport DCConditionForm from './DCConditionForm';\nclass ConditionDC extends Component {\n  componentDidMount() {\n    this.props.getScore();\n  }\n  render() {\n    const score = this.props.score;\n    return (\n      <div>\n        <h1>Daily checkin</h1>\n        <h3>Conditions</h3>\n        {\n          score && score.map(condition => {\n            return (\n              <div key={condition.id}>\n                <DCConditionForm condition={condition} addScore={this.props.addScore}/>\n            </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    score: state.score,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getScore: () => dispatch(getScoreThunk()),\n    addScore: (score) => dispatch(addScoreThunk(score)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ConditionDC)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchDocuments } from '../redux/documents'\nimport { Link } from 'react-router-dom'\n\nexport class Documents extends Component {\n  componentDidMount() {\n    this.props.fetchDocuments()\n  }\n\n  render() {\n    const { documents } = this.props\n    return (\n      <>\n        {\n          !documents ? 'No Documents' :\n            documents.map((doc, i) => (\n              <div key={i}>\n                <Link to={`/documents/${i}`}>\n                  <img src={doc.secure_url} alt='document' width=\"200\" height=\"200\" />\n                </Link>\n              </div>\n            ))\n        }\n      </>\n    )\n  }\n}\n\nconst mapState = ({ documents }, ownProps) => {\n  const paramId = Number(ownProps.match.params.id)\n  let singleDocument = {}\n  if (documents) {\n    singleDocument = documents.find((document, i) => i === paramId)\n  }\n  return {\n    documents,\n    singleDocument\n  }\n}\n\nconst mapDispatch = { fetchDocuments }\n\nexport default connect(mapState, mapDispatch)(Documents)\n","import React, { Component } from \"react\";\nimport { uploadDocumentsThunk } from '../redux/documents'\nimport { connect } from 'react-redux'\n\nexport class UploadDocuments extends Component {\n  constructor() {\n    super()\n    this.state = {\n      documents: []\n    }\n    this.changeHandler = this.changeHandler.bind(this)\n    this.uploadHandler = this.uploadHandler.bind(this)\n  }\n\n  changeHandler(e) {\n    e.preventDefault()\n    const files = Array.from(e.target.files)\n    this.setState({\n      documents: files\n    })\n  }\n\n  uploadHandler(e) {\n    e.preventDefault()\n    const formData = new FormData()\n    this.state.documents.forEach((file, i) => {\n      formData.append(i, file)\n    })\n    this.props.uploadDocumentsThunk(formData)\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"file\" onChange={this.changeHandler} multiple />\n        <button type=\"submit\" onClick={this.uploadHandler}>Upload</button>\n      </>\n    );\n  };\n}\n\nconst mapDispatchToProps = { uploadDocumentsThunk }\n\nexport default connect(null, mapDispatchToProps)(UploadDocuments);\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/auth'\nimport UploadDocuments from './UploadDocuments'\nimport Documents from './Documents'\n\nconst Home = (props) => {\n  const { id, firstName, lastName, email } = props.currentUser\n  const { handleClick } = props\n  return (\n    <div>\n      <h1>User Profile</h1>\n      <h4>Name: {firstName} {lastName}</h4>\n      <h4>Email: {email}</h4>\n      <span><Documents {...props} /></span>\n      <p><UploadDocuments userid={id} /></p>\n      <p>\n        <button type='submit' onClick={handleClick}>Log out</button>\n      </p>\n    </div >\n  )\n}\nconst mapState = ({ currentUser }) => ({ currentUser })\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleClick: () => {\n    dispatch(logout(ownProps.history))\n  }\n})\n\n\nexport default connect(mapState, mapDispatch)(Home)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addDoctorThunk } from '../redux/doctors'\nimport { Link } from 'react-router-dom'\n\n\nexport function AddDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const userId = props.currentUser.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        props.addNewDoctor(payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Add Your New Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>Add A Doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDoctor)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { updateSingleDoctor } from '../redux/singleDoctor'\nimport { Link } from 'react-router-dom'\n\n\nexport function UpdateDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log('what are props inside update doctor', props)\n        const userId = props.currentUser.id\n        const id = props.doctor.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        for (let key in payload) {\n            if (payload[key] === '') {\n                delete payload[key]\n            }\n        }\n        props.updateDoctor(id, payload)\n        // props.updateAllDocs(id, payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Update This Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>change this doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateDoctor: (id, updatedDoctor) => dispatch(updateSingleDoctor(id, updatedDoctor)),\n        // updateAllDocs: (id, doctor) => dispatch(updateAllDoctors(id, doctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateDoctor)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { getSingleDoctor } from \"../redux/onedoctor\";\nimport UpdateDoctor from './UpdateDoctor'\nimport { fetchSingleDoctor } from \"../redux/singleDoctor\";\nimport { deleteDoctorThunk } from \"../redux/doctors\"\n\nexport class SingleDoctor extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            clicked: false\n        }\n        this.updateDoctor = this.updateDoctor.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n    componentDidMount() {\n        const id = this.props.doctor.id\n        this.props.fetchSingleDoctor(id)\n    }\n\n    updateDoctor = () => {\n        this.setState({ clicked: true })\n    }\n\n    async handleDelete(id) {\n        try {\n            await this.props.deleteDoctor(id)\n            this.props.closeTheModal()\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    render() {\n        const doctor = this.props.doctor\n\n        if (!doctor) {\n            return \"This doctor is not in our system\"\n        } else {\n            return (\n                <div>\n                    <div>{doctor.firstName}</div>\n                    <div>{doctor.lastName}</div>\n                    <div>{doctor.doctorType}</div>\n                    <div>{doctor.address}</div>\n                    <div>\n                        {this.state.clicked === true && <UpdateDoctor />}\n                    </div>\n                    <div>\n                        {this.state.clicked === false &&\n                            <button onClick={() => this.updateDoctor()}>Update Doctor</button>\n                        }\n                    </div>\n                    <button onClick={() => this.handleDelete(doctor.id)}>Delete Doctor</button>\n                    {/* <button onClick={() => }>Delete Doctor</button> */}\n                </div>\n\n\n            )\n        };\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchSingleDoctor: (id) => dispatch(fetchSingleDoctor(id)),\n        deleteDoctor: (id) => dispatch(deleteDoctorThunk(id))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleDoctor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllDoctorsThunk, addDoctorThunk } from \"../redux/doctors\";\nimport { fetchSingleDoctor } from '../redux/singleDoctor'\nimport { AddDoctor } from \"./AddDoctor\";\nimport ReactModal from 'react-modal'\nimport SingleDoctor from './SingleDoctor'\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nexport class AllDoctors extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            showModal: false,\n            showDocModal: false\n        }\n        this.openModal = this.openModal.bind(this)\n        this.openDocModal = this.openDocModal.bind(this)\n        this.closeModal = this.closeModal.bind(this)\n        this.closeDocModal = this.closeDocModal.bind(this)\n    }\n    componentDidMount() {\n        this.props.getAllDoctors()\n    }\n\n    openModal() {\n        this.setState({ showModal: true })\n    }\n\n    openDocModal(id) {\n        this.setState({ showDocModal: true })\n        this.props.fetchSingleDoctor(id)\n    }\n\n    closeModal() {\n        this.setState({ showModal: false })\n    }\n\n    closeDocModal() {\n        this.setState({ showDocModal: false })\n    }\n    render() {\n        const doctors = this.props.doctors;\n        return (\n            <div>\n                <h1>All Doctors</h1>\n\n                <div>\n                    <button onClick={this.openModal}>Add a Doctor</button>\n                    <ReactModal\n                        isOpen={this.state.showModal}\n                        contentLabel=\"Example Modal\"\n                    >\n                        <AddDoctor currentUser={this.props.currentUser} addNewDoctor={this.props.addNewDoctor} />\n\n                        <button onClick={this.closeModal}>close</button>\n                    </ReactModal>\n                </div>\n                <div>\n                    {doctors && doctors.map((doctor) => {\n                        return (\n                            <div key={doctor.id}>\n                                <button onClick={() => this.openDocModal(doctor.id)}>{doctor.firstName} {doctor.lastName}</button>\n                                <ReactModal\n                                    isOpen={this.state.showDocModal}\n                                    contentLabel=\"Example Modal\"\n                                >\n                                    <SingleDoctor closeTheModal={this.closeDocModal} />\n                                    <button onClick={this.closeDocModal}>close</button>\n                                </ReactModal>\n                                {/* <Link to={`/doctors/${doctor.id}`}></Link> */}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        doctors: state.doctors,\n        currentUser: state.currentUser\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor)),\n        fetchSingleDoctor: (id) => dispatch(fetchSingleDoctor(id))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AllDoctors);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div>\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div id=\"upperRight\">\n        <Link to=\"/medications\">My Medications</Link>\n        <Link to=\"/doctors\">My Doctors</Link>\n        <Link to=\"/conditions\">My Conditions</Link>\n        <Link to=\"/uploadDoc\">Add Documents</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, {Component} from 'react';\nclass DCDoctorForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      time: '',\n      doctorId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const doctorId = this.props.doctor.id;\n    this.setState({doctorId});\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addAppointment(this.state);\n    this.setState({\n      isClicked: false,\n      time: '',\n      doctorId: 0\n    })\n  }\n  render() {\n    const doctor = this.props.doctor;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {doctor.firstName}{doctor.lastName}\n          <input\n          type='checkbox'\n          name='isClicked'\n          onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n          <div>\n          <div>\n            <label>\n              Time of your appointment\n              <input\n                className='input'\n                placeholder='HH:MM'\n                type='text'\n                name='time'\n                onChange={this.handleChange}\n                value={this.state.time}\n              />\n            </label>\n          </div>\n          <button type=\"submit\">\n            Submit\n          </button>\n          </div> : null\n        }\n      </form>\n    )\n  }\n}\nexport default DCDoctorForm;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getAppointmentThunk, addAppointmentThunk} from '../redux/dcDoctor';\nimport DCDoctorForm from './DCDoctorForm';\nclass DoctorDC extends Component {\n  componentDidMount() {\n    this.props.getAppointment();\n  }\n  render() {\n    const appointment = this.props.appointment;\n    console.log(this.props)\n    return (\n      <div>\n        <h1>Daily checkin</h1>\n        <h3>Doctors</h3>\n        {\n          appointment && appointment.map(doctor => {\n            return (\n              <div key={doctor.id}>\n                <DCDoctorForm doctor={doctor} addAppointment={this.props.addAppointment}/>\n            </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    appointment: state.appointment\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAppointment: () => dispatch(getAppointmentThunk()),\n    addAppointment: (appointment) => dispatch(addAppointmentThunk(appointment))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorDC)\n","import React, {Component} from 'react';\nclass DCMedicationForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      notes: '',\n      medicationId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const medicationId = this.props.eachMed.id;\n    this.setState({medicationId});\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({\n      isClicked: false,\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const med = this.props.eachMed;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {med.name}\n          <input\n          type='checkbox'\n          name='isClicked'\n          onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n          <div>\n          <div>\n          <label>\n            Any notes?\n            <input\n              className='input'\n              placeholder='notes'\n              type='text'\n              name='notes'\n              onChange={this.handleChange}\n              value={this.state.notes}\n            />\n          </label>\n        </div>\n          <button type=\"submit\">\n            Submit\n          </button>\n          </div> : null\n        }\n\n      </form>\n    )\n  }\n}\nexport default DCMedicationForm;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getMedicationThunk, addMedicationThunk} from '../redux/dcMedication';\nimport DCMedicationForm from './DCMedicationForm';\nclass MedicationDC extends Component {\n  componentDidMount() {\n    this.props.getMedication();\n  }\n  render() {\n    const med = this.props.med;\n    return (\n      <div>\n        <h1>Daily checkin</h1>\n        <h3>Medications</h3>\n        {\n          med && med.map(eachMed => {\n            return (\n              <div key={eachMed.id}>\n                <DCMedicationForm eachMed={eachMed} addMedication={this.props.addMedication}/>\n            </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    med: state.med\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMedication: () => dispatch(getMedicationThunk()),\n    addMedication: (med) => dispatch(addMedicationThunk(med))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicationDC)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport Conditions from \"./Conditions\";\nimport Medications from \"./Medications\";\nimport { fetchCurrentUser } from \"../redux/auth\";\nimport ConditionDC from \"./ConditionDC\";\nimport SingleCondition from \"./SingleCondition\";\nimport Documents from \"./Documents\"\nimport Profile from \"./Profile\"\nimport AllDoctors from \"./AllDoctors\"\nimport SingleDoctor from \"./SingleDoctor\";\nimport SingleMedication from \"./SingleMedication\";\nimport Navbar from \"./Navbar\";\nimport DoctorDC from \"./DoctorDC\";\nimport MedicationDC from './MedicationDC';\n/* -----------------    COMPONENT     ------------------ */\n\nclass Root extends Component {\n  componentDidMount() {\n    this.props.fetchInitialData();\n  }\n  render() {\n    const { isLoggedIn } = this.props;\n    return (\n      <Switch>\n        {/* Routes placed here are available to all visitors */}\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n\n        {isLoggedIn && (\n          <>\n            {/* Routes placed here are only available after logging in */}\n            <Navbar />\n\n            <Route exact path='/' component={Home} />\n            <Route exact path='/dailycheckin/score' component={ConditionDC} />\n            <Route exact path='/conditions' component={Conditions} />\n            <Route path='/conditions/:id' component={SingleCondition} />\n            <Route path=\"/medications\" component={Medications} />\n            <Route path=\"/medications/:id\" component={SingleMedication} />\n            <Route path=\"/doctors\" component={AllDoctors} />\n            <Route path=\"/doctors/:id\" component={SingleDoctor} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/documents/:id\" component={Documents} />\n            <Route exact path='/dailycheckin/appointment' component={DoctorDC} />\n            <Route exact path='/dailycheckin/meds' component={MedicationDC} />\n          </>\n        )}\n\n        {/* Displays our Login component as a fallback */}\n        <Route component={Login} />\n      </Switch>\n    );\n  }\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapState = (state) => {\n  return {\n    // Being 'logged in' for our purposes will be defined has having a state.user that has a truthy id.\n    // Otherwise, state.user will be an empty object, and state.user.id will be falsey\n    isLoggedIn: !!state.currentUser.id,\n  };\n};\nconst mapDispatch = (dispatch) => ({\n  fetchInitialData: () => {\n    dispatch(fetchCurrentUser());\n  },\n});\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Root));\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"column\">Github!</div>\n      <div className=\"column\">Names!</div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./store\";\nimport Root from \"./components/Root\";\nimport Footer from \"./components/Footer\";\nimport * as serviceWorker from './serviceWorker';\nimport './style.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Root />\n      <Footer />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}