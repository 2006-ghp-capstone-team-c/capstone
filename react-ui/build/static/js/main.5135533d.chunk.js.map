{"version":3,"sources":["redux/API_URL.js","redux/conditions.js","redux/singleCondition.js","redux/auth.js","redux/users.js","redux/medications.js","redux/singleMedication.js","redux/singleDocument.js","redux/documents.js","redux/doctors.js","redux/singleDoctor.js","redux/dcCondition.js","redux/dcDoctor.js","redux/dcMedication.js","redux/score.js","store.js","utils/update-donut.js","components/datavis/doctor-appointment-donut.js","components/lineChart/Axis.js","components/lineChart/XY-axis.js","components/lineChart/Line.js","components/lineChart/LineChartCondition.js","components/Home.js","components/Signup.js","components/Login.js","components/AddConditionForm.js","components/UpdateCondition.js","components/SingleCondition.js","components/Conditions.js","components/AddMedication.js","components/RemoveMedication.js","components/UpdateMedication.js","components/SingleMedication.js","components/Medications.js","components/DCMedicationForm.js","components/DCConditionForm.js","components/DCDoctorForm.js","components/DailyCheckin.js","components/UpdateDocument.js","components/SingleDocument.js","components/UploadDocuments.js","components/Documents.js","components/ProofOfIdentity.js","components/Profile.js","components/AddDoctor.js","components/UpdateDoctor.js","components/SingleDoctor.js","components/AllDoctors.js","components/Navbar.js","components/BarChartCondition.js","components/AdminDashboard.js","components/Root.js","components/Footer.js","serviceWorker.js","index.js"],"names":["API_URL","initialState","getAllConditions","conditions","type","addCondition","condition","deleteCondition","id","updateAllConditions","getAllConditionsThunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_yield$axios$get","data","wrap","_context","prev","next","axios","get","concat","sent","t0","console","log","stop","_x","apply","this","arguments","updateCondition","SET_CURRENT_USER","REMOVE_CURRENT_USER","setCurrentUser","user","logout","history","_ref2","_callee2","_context2","delete","push","error","_x2","setUserAndRedirect","INITIALIZE","CREATE","REMOVE","UPDATE","GET_USERS","remove","getAllUsers","users","newMedication","medication","removeMedication","updateAllMeds","updateSingleMedication","fetchMedId","medName","idGroup","rxnormId","medId","updateDocument","document","updateDocumentThunk","formData","_yield$axios$put","put","deleteDocument","fetchDocuments","documents","addDoctor","doctor","deleteDoctor","updateAllDoctors","addDoctorThunk","_yield$axios$post","post","getAllDoctorsThunk","_ref3","_callee3","_context3","doctors","_x3","updateDoctor","getAppointmentThunk","appointment","getChartThunk","chart","reducer","combineReducers","length","undefined","action","toConsumableArray","filter","map","currentUser","state","updated","objectSpread","name","diagnosed","typeOfPain","medications","med","dosage","frequency","rxcui","singleDocument","firstName","lastName","address","doctorType","score","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","updateDonut","appointmentData","doctorData","newAppointmentData","colorsArray","countObj","i","doctorId","countAppointments","arrOfDocId","keys","formattedObj","j","Number","colorIndex","count","color","connect","props","react_default","createElement","react_d3_donut_es","innerRadius","outerRadius","transition","svgClass","pieClass","displayTooltip","strokeWidth","Axis","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ref","React","createRef","renderAxis","updateAxis","axis","_this$props","scale","orient","ticks","node","current","axisBottom","axisLeft","select","_this$props2","t","duration","selectAll","_this$props3","transform","className","Component","XYAxis","xScale","yScale","height","xSettings","ySettings","lineChart_Axis","Line","lineGenerator","initialData","d","value","append","datum","attr","updateChart","line","LineChart","weeklyData","bind","assertThisInitialized","monthlyData","getChart","rate","eachScore","date","eachDate","Date","shortDate","String","slice","setState","prevState","weeklyRate","margins","width","scaleBand","domain","rangeRound","padding","scaleLinear","extent","range","nice","x","y","onClick","XY_axis","lineChart_Line","Home","_React$Component","inherits","createClass","key","getAllDoctors","getAppointments","handleClick","appointments","doctor_appointment_donut","LineChartCondition","ownProps","handleSubmit","event","preventDefault","target","email","password","credentials","signup","onSubmit","placeholder","required","href","login","react_router_dom","to","AddConditionForm","userId","handleChange","evt","_this$setState","defineProperty","onChange","UpdateCondition","updateSingleConditionThunk","SingleCondition","clicked","handleDelete","closeTheModal","_this2","components_UpdateCondition","removeCondition","_yield$axios$get2","deleteConditionThunk","Conditions","showModal","showDocModal","openModal","openDocModal","closeModal","closeDocModal","ReactModal","setAppElement","getSingleCondition","lib_default","isOpen","contentLabel","components_SingleCondition","components_AddConditionForm","addConditionThunk","getSingleConditionThunk","AddMedication","addMedication","htmlFor","RemoveMedication","UpdateMedication","update","close","SingleMedication","handleUpdate","handleClose","selected","loadSingleMedication","err","updatedMedication","handleOpen","UpdateMedication_UpdateMedication","handleCancel","fetchMedication","updateMedication","Medications","add","handleSelect","handleAdd","handleRemove","fetchMedications","Fragment","components_AddMedication","components_SingleMedication","components_RemoveMedication","deleteMedication","DCMedicationForm","isClicked","notes","medicationId","eachMed","checked","conditionId","DCConditionForm","addScore","DCDoctorForm","time","addAppointment","DailyCheckin","getScore","getMedication","components_DCConditionForm","components_DCDoctorForm","components_DCMedicationForm","appointmentDate","UploadDocument","_Component","selectedFile","uploadHandler","handleFileRead","sendFile","e","files","reader","FileReader","readAsDataURL","onload","result","_sendFile","file","upload_preset","abrupt","secure_url","_uploadHandler","description","imageUrl","_formData","mapDispatch","SingleDocument","fetchSingleDocument","deleteDocumentsThunk","closeDocumentModal","_this$props$singleDoc","src","alt","UpdateDocument","UploadDocuments","uploadDocumentThunk","closeUploadModal","Documents","showDocumentModal","showUploadModal","openUploadModal","openDocumentModal","doc","components_SingleDocument","assign","components_UploadDocuments","ProofOfIdentity","Profile","loadUserInfo","_this$props$currentUs","components_ProofOfIdentity","AddDoctor","_useState","useState","_useState2","slicedToArray","setFirstName","_useState3","_useState4","setLastName","_useState5","_useState6","setAddress","_useState7","_useState8","setDoctorType","payload","addNewDoctor","newDoctor","updatedDoctor","updateSingleDoctor","SingleDoctor","_handleDelete","docApps","oneapp","components_UpdateDoctor","deleteDoctorThunk","AllDoctors","fetchSingleDoctor","components_SingleDoctor","Navbar","BarChart","drawBarChart","svgCanvas","d3","refs","canvas","style","enter","datapoint","iteration","dataPoint","text","AdminDashboard","getUsers","deleteUser","deleteUserThunk","Root","fetchInitialData","isLoggedIn","react_router","path","component","Login","Signup","components_Navbar","exact","BarChartCondition","isAdmin","withRouter","_ref4","_callee4","_context4","_x4","Footer","index_esm","size","ai_index_esm","Boolean","window","location","hostname","match","ReactDOM","render","es","components_Root","components_Footer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5135533d.chunk.js","sourcesContent":["export const API_URL = 'https://elemental-health.herokuapp.com'\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_ALL_CONDITIONS = 'GET_ALL_CONDITIONS';\nconst ADD_CONDITION = 'ADD_CONDITION';\nconst DELETE_CONDITION = 'DELETE_CONDITION';\nconst UPDATE_CONDITIONS_LIST = 'UPDATE_CONDITIONS_LIST';\nconst getAllConditions = conditions => {\n  return {\n    type: GET_ALL_CONDITIONS,\n    conditions\n  }\n}\nconst addCondition = condition => {\n  return {\n    type: ADD_CONDITION,\n    condition\n  }\n}\nconst deleteCondition = id => {\n  return {\n    type: DELETE_CONDITION,\n    id\n  }\n}\nexport const updateAllConditions = (id, condition) => {\n  return {\n      type: UPDATE_CONDITIONS_LIST,\n      id,\n      condition\n  }\n}\nexport const getAllConditionsThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/conditions/`);\n      dispatch(getAllConditions(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const addConditionThunk = (condition) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/conditions`, condition);\n      dispatch(addCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteConditionThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/api/conditions/${id}`);\n      dispatch(deleteCondition(id));\n      const {data} = await axios.get(`${API_URL}/api/conditions/`);\n      dispatch(getAllConditions(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_CONDITIONS:\n      return action.conditions\n    case ADD_CONDITION:\n      return [...state, action.condition]\n    case DELETE_CONDITION:\n      return state.filter(condition => condition.id !== action.id);\n    case UPDATE_CONDITIONS_LIST:\n      return [...state].map((condition) => {\n          if (condition.id === action.id) {\n              return action.condition\n          } else {\n              return condition\n          }\n      })\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nimport {updateAllConditions} from './conditions';\nconst initialState = {};\n\nconst GET_SINGLE_CONDITION = 'GET_SINGLE_CONDITION'\nconst UPDATE_CONDITION = 'UPDATE_CONDITION'\n\nconst getSingleCondition = condition => {\n  return {\n    type: GET_SINGLE_CONDITION,\n    condition\n  }\n}\nconst updateCondition = condition => {\n  return {\n    type: UPDATE_CONDITION,\n    condition\n  }\n}\nexport const getSingleConditionThunk = id => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/conditions/${id}`);\n      dispatch(getSingleCondition(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const updateSingleConditionThunk = (\n  id,\n  condition\n) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.put(\n        `${API_URL}/api/conditions/${id}`,\n        condition\n      );\n      dispatch(updateCondition(data));\n      dispatch(updateAllConditions(data.id, data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SINGLE_CONDITION:\n      return action.condition\n    case UPDATE_CONDITION:\n      let updated = { ...state.condition }\n      updated.name = action.condition.name\n      updated.diagnosed = action.condition.diagnosed\n      updated.typeOfPain = action.condition.typeOfPain\n      return updated\n    default:\n      return state\n  }\n}\n","import axios from 'axios'\nimport { API_URL } from './API_URL'\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst SET_CURRENT_USER = 'SET_CURRENT_USER'\nconst REMOVE_CURRENT_USER = 'REMOVE_CURRENT_USER'\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst setCurrentUser = user => ({ type: SET_CURRENT_USER, user })\nconst removeCurrentUser = () => ({ type: REMOVE_CURRENT_USER })\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(currentUser = {}, action) {\n  switch (action.type) {\n\n    case SET_CURRENT_USER:\n      return action.user\n\n    case REMOVE_CURRENT_USER:\n      return {}\n\n    default:\n      return currentUser\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const login = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/login`, credentials)\n      // const { data } = await axios.post(`/auth/local/login`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Logging in with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const logout = history => {\n  return async dispatch => {\n    try {\n      await axios.delete(`${API_URL}/auth/local/logout`)\n      dispatch(removeCurrentUser())\n      history.push('/login')\n    } catch (err) {\n      console.error('Logging out was unsuccesful', err)\n    }\n  }\n}\n\n\nexport const signup = (credentials, history) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/auth/local/signup`, credentials)\n      // const { data } = await axios.post(`/auth/local/signup`, credentials)\n      setUserAndRedirect(data, history, dispatch)\n    } catch (err) {\n      console.error(`Signing up with ${credentials.email} was unsuccesful`, err)\n    }\n  }\n}\n\nexport const fetchCurrentUser = () => {\n  return async dispatch => {\n    try {\n      console.log(API_URL)\n      const { data } = await axios.get(`/${API_URL}/auth/local/me`)\n      // const { data } = await axios.get(`/auth/local/me`)\n      dispatch(setCurrentUser(data))\n    } catch (err) {\n      console.error('Fetching current user failed', err)\n    }\n  }\n}\n\n/* ------------      HELPER FUNCTIONS     ------------------ */\n\nfunction setUserAndRedirect(user, history, dispatch) {\n  console.log('setUserAndRedirect')\n  console.log(user)\n  dispatch(setCurrentUser(user))\n  history.push(`/profile`)\n}\n","import axios from 'axios'\nimport { API_URL } from './API_URL';\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst INITIALIZE = 'INITIALIZE_USERS'\nconst CREATE = 'CREATE_USER'\nexport const REMOVE = 'REMOVE_USER'\nconst UPDATE = 'UPDATE_USER'\nconst GET_USERS = 'GET_USERS'\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst init = users => ({ type: INITIALIZE, users })\nexport const create = user => ({ type: CREATE, user })\nconst remove = id => ({ type: REMOVE, id })\nconst update = user => ({ type: UPDATE, user })\nconst getAllUsers = users => {\n  return {\n    type: GET_USERS,\n    users\n  }\n}\nexport const getUsersThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/users`);\n      console.log(data)\n      dispatch(getAllUsers(data));\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\nexport const deleteUserThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/api/users/${id}`);\n      dispatch(remove(id));\n      const {data} = await axios.get(`${API_URL}/api/users`);\n      dispatch(getAllUsers(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n/* ------------          REDUCER         ------------------ */\n\nexport default function reducer(users = [], action) {\n  switch (action.type) {\n    case INITIALIZE:\n      return action.users\n\n    case CREATE:\n      return [action.user, ...users]\n\n    case REMOVE:\n      return users.filter(user => user.id !== action.id)\n\n    case UPDATE:\n      return users.map(user => (\n        action.user.id === user.id ? action.user : user\n      ))\n    case GET_USERS:\n      return action.users\n\n    default:\n      return users\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\n\nexport const fetchUsers = () => dispatch => {\n  axios.get('/api/users')\n    .then(res => dispatch(init(res.data)))\n}\n\nexport const removeUser = id => dispatch => {\n  axios.delete(`/api/users/${id}`)\n    .then(() => dispatch(remove(id)))\n    .catch(err => console.error(`Removing user: ${id} unsuccesful`, err))\n}\n\nexport const addUser = user => dispatch => {\n  axios.post('/api/users', user)\n    .then(res => dispatch(create(res.data)))\n    .catch(err => console.error(`Creating user: ${user} unsuccesful`, err))\n}\n\nexport const updateUser = (id, user) => dispatch => {\n  axios.put(`/api/users/${id}`, user)\n    .then(res => dispatch(update(res.data)))\n    .catch(err => console.error(`Updating user: ${user} unsuccesful`, err))\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\n\nconst GET_MEDICATIONS = \"GET_MEDICATIONS\";\nconst NEW_MEDICATION = \"NEW_MEDICATION\";\nconst REMOVE_MEDICATION = \"REMOVE_MEDICATION\";\nconst UPDATE_ALL_MEDS = \"UPDATE_ALL_MEDS\";\n\nconst initialState = [];\n\nconst getMedications = (medications) => ({\n  type: GET_MEDICATIONS,\n  medications,\n});\n\nconst newMedication = (medication) => ({\n  type: NEW_MEDICATION,\n  medication,\n});\n\nconst removeMedication = (id) => ({\n  type: REMOVE_MEDICATION,\n  id,\n});\n\nexport const updateAllMeds = (id, medication) => ({\n  type: UPDATE_ALL_MEDS,\n  id,\n  medication,\n});\n\nexport const fetchMedications = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications`);\n      dispatch(getMedications(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addMedication = (medication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(\n        `${API_URL}/api/medications`,\n        medication\n      );\n      dispatch(newMedication(data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nexport const deleteMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`${API_URL}/api/medications/${id}`);\n      dispatch(removeMedication(id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATIONS:\n      return action.medications;\n    case NEW_MEDICATION:\n      return [...state, action.medication];\n    case REMOVE_MEDICATION:\n      return state.filter((med) => med.id !== action.id);\n    case UPDATE_ALL_MEDS:\n      return [...state].map((medication) => {\n        if (medication.id === action.id) {\n          return action.medication;\n        } else {\n          return medication;\n        }\n      });\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { API_URL } from \"./API_URL\";\nimport { updateAllMeds } from \"./medications\";\n\nconst GET_MEDICATION = \"GET_MEDICATION\";\nconst UPDATED_MEDICATION = \"UPDATED_MEDICATION\";\nconst GET_ID = \"GET_ID\";\n\nconst initialState = {};\n\nconst getSingleMedication = (medication) => ({\n  type: GET_MEDICATION,\n  medication,\n});\n\nconst getMedId = (medId) => ({\n  type: GET_ID,\n  medId,\n});\n\nconst updateSingleMedication = (id, medication) => ({\n  type: UPDATED_MEDICATION,\n  id,\n  medication,\n});\n\nexport const fetchMedId = (medName) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(\n        `https://rxnav.nlm.nih.gov/REST/rxcui.json?name=${medName}`\n      );\n      console.log(data.idGroup.rxnormId[0]);\n      dispatch(getMedId(data.idGroup.rxnormId[0]));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchMedication = (id) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/medications/${id}`);\n      dispatch(getSingleMedication(data));\n      dispatch(fetchMedId(data.name));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateMedication = (medication, updatedMedication) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(\n        `${API_URL}/api/medications/${medication.id}`,\n        updatedMedication\n      );\n      console.log(\"update\", data);\n      dispatch(updateSingleMedication(data.id, data));\n      dispatch(updateAllMeds(data.id, data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDICATION:\n      return { ...state, medication: action.medication };\n    case UPDATED_MEDICATION:\n      let updated = { ...state };\n      updated.name = action.medication.name;\n      updated.dosage = action.medication.dosage;\n      updated.frequency = action.medication.frequency;\n      return { ...state, medication: updated };\n    case GET_ID:\n      return { ...state, rxcui: action.medId };\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { API_URL } from './API_URL'\n\n\n/* -----------------    ACTION TYPES    ------------------ */\n\n\nexport const UPDATE_DOCUMENT = \"UPDATE_DOCUMENT\"\nconst GET_DOCUMENT = \"GET_DOCUMENT\"\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst getDocument = (document) => ({ type: GET_DOCUMENT, document });\nconst updateDocument = (id, document) => ({ type: UPDATE_DOCUMENT, id, document });\n\n\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case GET_DOCUMENT:\n      return action.document;\n\n    case UPDATE_DOCUMENT:\n      return action.document;\n\n    default:\n      return state;\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\nexport const fetchSingleDocument = (id) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/documents/${id}`);\n      dispatch(getDocument(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const updateDocumentThunk = (id, formData) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`${API_URL}/api/documents/${id}`, formData);\n      dispatch(updateDocument(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\n\n\n","import axios from \"axios\";\nimport { API_URL } from './API_URL'\nimport { UPDATE_DOCUMENT as UPDATE_DOCUMENT_LIST } from './singleDocument'\n\n\n/* -----------------    ACTION TYPES    ------------------ */\n\nconst GET_DOCUMENTS = \"GET_DOCUMENTS\";\nconst UPLOAD_DOCUMENT = \"UPLOAD_DOCUMENT\"\nconst DELETE_DOCUMENT = \"DELETE_DOCUMENT\"\n\n\n/* ------------     ACTION CREATORS      ------------------ */\n\nconst getDocuments = (documents) => ({ type: GET_DOCUMENTS, documents });\nconst uploadDocument = (document) => ({ type: UPLOAD_DOCUMENT, document });\nconst deleteDocument = (id) => ({ type: DELETE_DOCUMENT, id });\n\n/* ------------          REDUCER         ------------------ */\n\nexport default function (state = [], action) {\n  switch (action.type) {\n\n    case GET_DOCUMENTS:\n      return action.documents;\n\n    case UPLOAD_DOCUMENT:\n      return [...state, action.document]\n\n    case DELETE_DOCUMENT:\n      return state.filter(document => document.id !== action.id)\n\n    case UPDATE_DOCUMENT_LIST:\n      return [...state].map((document) => {\n        if (document.id === action.id) {\n          return action.document\n        } else {\n          return document\n        }\n      })\n    default:\n      return state;\n  }\n}\n\n/* ------------       THUNK CREATORS     ------------------ */\nexport const fetchDocuments = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/documents`);\n      dispatch(getDocuments(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const uploadDocumentThunk = (formData) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(`${API_URL}/api/documents`, formData)\n      dispatch(uploadDocument(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const deleteDocumentsThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`${API_URL}/api/documents/${id}`)\n      dispatch(deleteDocument(id));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\n","import axios from 'axios'\n\nconst initialState = []\n\n//ACTION TYPES\nconst ADD_DOCTOR = 'ADD_DOCTOR'\nconst GET_ALL_DOCTORS = 'GET_ALL_DOCTORS'\nconst REMOVE_DOCTOR = 'REMOVE_DOCTOR'\nconst UPDATE_DOCTORS_LIST = 'UPDATE_DOCTORS_LIST'\n\n//ACTION CREATORS\nconst addDoctor = doctor => {\n    return {\n        type: ADD_DOCTOR,\n        doctor\n    }\n}\nconst deleteDoctor = id => {\n    return {\n        type: REMOVE_DOCTOR,\n        id\n    }\n}\n\nconst getAllDoctors = doctors => {\n    return {\n        type: GET_ALL_DOCTORS,\n        doctors\n    }\n}\n\nexport const updateAllDoctors = (id, doctor) => {\n    return {\n        type: UPDATE_DOCTORS_LIST,\n        id,\n        doctor\n    }\n}\n\n//THUNKS\nexport const addDoctorThunk = (doctor) => {\n    return async dispatch => {\n        try {\n            let { data } = await axios.post('/api/doctors', doctor)\n            dispatch(addDoctor(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const deleteDoctorThunk = id => {\n    return async dispatch => {\n        try {\n            await axios.delete(`/api/doctors/${id}`)\n            dispatch(deleteDoctor(id))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const getAllDoctorsThunk = () => {\n    return async dispatch => {\n        try {\n            const { data } = await axios.get('/api/doctors/')\n            dispatch(getAllDoctors(data))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ALL_DOCTORS:\n            return action.doctors\n        case REMOVE_DOCTOR:\n            return state.filter(doctor => doctor.id !== action.id)\n        case ADD_DOCTOR:\n            return [...state, action.doctor]\n        case UPDATE_DOCTORS_LIST:\n            return [...state].map((doctor) => {\n                if (doctor.id === action.id) {\n                    return action.doctor\n                } else {\n                    return doctor\n                }\n            })\n        default:\n            return state\n    }\n}\n","import axios from 'axios'\nimport { updateAllDoctors } from './doctors'\n\nconst initialState = {}\n\n\nconst SET_SINGLE_DOCTOR = 'SET_SINGLE_DOCTOR'\nconst UPDATE_SINGLE_DOCTOR = 'UPDATE_SINGLE_DOCTOR'\n\n\nexport const setSingleDoctor = (doctor) => {\n    return {\n        type: SET_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\nexport const updateDoctor = (doctor) => {\n    return {\n        type: UPDATE_SINGLE_DOCTOR,\n        doctor\n    }\n}\n\n\n\nexport const fetchSingleDoctor = (id) => {\n    console.log('inside the thunk FETCH SINGLE DOCTOR')\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.get(`/api/doctors/${id}`)\n            console.log(\"what is data in thunk\", data)\n            dispatch(setSingleDoctor(data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n};\n\nexport const updateSingleDoctor = (id, doctor) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios.put(`/api/doctors/${id}`, doctor)\n            console.log(\"what is data\", data)\n            dispatch(updateDoctor(data))\n            dispatch(updateAllDoctors(data.id, data))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n}\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SINGLE_DOCTOR:\n            return action.doctor\n        case UPDATE_SINGLE_DOCTOR:\n            let updated = { ...state.doctor }\n            updated.firstName = action.doctor.firstName\n            updated.lastName = action.doctor.lastName\n            updated.address = action.doctor.address\n            updated.doctorType = action.doctor.doctorType\n            return updated\n        default:\n            return state\n    }\n}\n\n\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_SCORE = 'GET_SCORE';\nconst ADD_SCORE = 'ADD_SCORE';\n\nconst getScore = score => {\n  return {\n    type: GET_SCORE,\n    score\n  }\n}\nconst addScore = score => {\n  return {\n    type: ADD_SCORE,\n    score\n  }\n}\n\nexport const getScoreThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/score`)\n      dispatch(getScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addScoreThunk = (rate, date, notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/score`, {rate, date, notes})\n      dispatch(addScore(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SCORE:\n      return action.score\n    case ADD_SCORE:\n      return [\n        ...state,\n        action.score\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_APPOINTMENT = 'GET_APPOINTMENT';\nconst ADD_APPOINTMENT = 'ADD_APPOINTMENT';\n\nconst getAppointment = appointment => {\n  return {\n    type: GET_APPOINTMENT,\n    appointment\n  }\n}\nconst addAppointment = appointment => {\n  return {\n    type: ADD_APPOINTMENT,\n    appointment\n  }\n}\n\nexport const getAppointmentThunk = () => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.get(`${API_URL}/api/dailycheckin/appointment`)\n      console.log('data inside get appointment thunk', data)\n      dispatch(getAppointment(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addAppointmentThunk = (appointmentDate) => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.post(`${API_URL}/api/dailycheckin/appointment`, { appointmentDate })\n      dispatch(addAppointment(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_APPOINTMENT:\n      return action.appointment\n    case ADD_APPOINTMENT:\n      return [\n        ...state,\n        action.appointment\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_MEDS = 'GET_MEDS';\nconst ADD_MEDS = 'ADD_MEDS';\n\nconst getMedication = med => {\n  return {\n    type: GET_MEDS,\n    med\n  }\n}\nconst addMedication = med => {\n  return {\n    type: ADD_MEDS,\n    med\n  }\n}\n\nexport const getMedicationThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/dailycheckin/meds`)\n      console.log(data)\n      dispatch(getMedication(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport const addMedicationThunk = (notes) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.post(`${API_URL}/api/dailycheckin/meds`, {notes})\n      dispatch(addMedication(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_MEDS:\n      return action.med\n    case ADD_MEDS:\n      return [\n        ...state,\n        action.med\n      ]\n    default:\n      return state\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from './API_URL';\nconst initialState = [];\n\nconst GET_CHART = 'GET_CHART';\n\nconst getChart = chart => {\n  return {\n    type: GET_CHART,\n    chart\n  }\n}\n\nexport const getChartThunk = () => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.get(`${API_URL}/api/score`)\n      dispatch(getChart(data));\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CHART:\n      return action.chart\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport conditions from \"./redux/conditions\";\nimport condition from \"./redux/singleCondition\";\nimport currentUser from \"./redux/auth\";\nimport users from \"./redux/users\";\nimport medications from \"./redux/medications\";\nimport medication from \"./redux/singleMedication\";\nimport documents from \"./redux/documents\";\nimport singleDocument from \"./redux/singleDocument\";\nimport doctors from \"./redux/doctors\";\nimport doctor from './redux/singleDoctor';\nimport score from './redux/dcCondition';\nimport appointment from './redux/dcDoctor';\nimport med from './redux/dcMedication';\nimport chart from './redux/score';\nconst reducer = combineReducers({\n  users,\n  currentUser,\n  conditions,\n  condition,\n  medications,\n  medication,\n  documents,\n  singleDocument,\n  doctors,\n  doctor,\n  score,\n  appointment,\n  med,\n  chart\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\n","\n\nexport const countAppointments = (appointmentData) => {\n    let countObj = {}\n    for (let i = 0; i < appointmentData.length; i++) {\n        let doctorId = appointmentData[i].doctorId\n        if (!countObj[doctorId]) {\n            countObj[doctorId] = 1\n        } else {\n            countObj[doctorId] += 1\n        }\n    }\n    return countObj\n}\n\n\nexport const updateDonut = (appointmentData, doctorData) => {\n    console.log('inside update donut function')\n    let newAppointmentData = []\n    let colorsArray = ['#DA291C', '#FFB20F', '#184A45', '#76B041', '#95DBE5', '#FF9F1C', '#94DBE5', '#56A8CB', '#080357', '#339E66']\n    let countObj = countAppointments(appointmentData)\n    let arrOfDocId = Object.keys(countObj)\n    let formattedObj = {}\n\n\n    for (let i = 0; i < arrOfDocId.length; i++) {\n        for (let j = 0; j < doctorData.length; j++) {\n            if (Number(arrOfDocId[i]) === doctorData[j].id) {\n                let colorIndex = i % colorsArray.length\n                formattedObj.count = countObj[doctorData[j].id]\n                formattedObj.color = colorsArray[colorIndex]\n                formattedObj.name = `${doctorData[j].firstName} ${doctorData[j].lastName}`\n                newAppointmentData.push(formattedObj)\n                formattedObj = {}\n            }\n        }\n\n    }\n\n\n    return newAppointmentData\n}\n\n\n\n","import DonutChart from 'react-d3-donut'\nimport React from 'react'\nimport { updateDonut } from '../../utils/update-donut'\nimport { connect } from 'react-redux'\n\nexport function doctorAppointmentDonut(props) {\n    const appointmentData = props.appointment\n    const doctorData = props.doctors\n\n    const data = updateDonut(appointmentData, doctorData)\n    return (\n        <div>\n            <h4>My Appointments Over Time</h4>\n            <DonutChart\n                innerRadius={30}\n                outerRadius={80}\n                transition={true}\n                svgClass=\"example6\"\n                pieClass=\"pie6\"\n                displayTooltip={true}\n                strokeWidth={3}\n                data={data} />\n        </div>\n    )\n}\n\nconst mapState = (state) => {\n    return {\n        doctors: state.doctors,\n        appointment: state.appointment\n    }\n}\n\nexport default connect(mapState, null)(doctorAppointmentDonut)","import React from \"react\";\nimport { select, selectAll } from \"d3-selection\";\nimport { axisBottom, axisLeft } from \"d3-axis\";\nimport { transition } from 'd3-transition';\n\nclass Axis extends React.Component {\n  constructor() {\n    super();\n    this.ref = React.createRef();\n  }\n  componentDidMount() {\n    this.renderAxis();\n  }\n  componentDidUpdate() {\n    this.updateAxis();\n  }\n  renderAxis() {\n    const { scale, orient, ticks } = this.props;\n    const node = this.ref.current;\n    let axis;\n\n    if (orient === \"bottom\") {\n      axis = axisBottom(scale);\n    }\n    if (orient === \"left\") {\n      axis = axisLeft(scale)\n        .ticks(ticks);\n    }\n    select(node).call(axis);\n  }\n  updateAxis() {\n    const { scale, orient, ticks } = this.props;\n    const t = transition().duration(1000)\n\n    if (orient === \"left\") {\n      const axis = axisLeft(scale).ticks(ticks);\n      selectAll(`.${orient}`).transition(t).call(axis)\n    }\n  }\n  render() {\n    const { orient, transform } = this.props;\n    return (\n      <g\n        ref={this.ref}\n        transform={transform}\n        className={`${orient} axis`}\n      />\n    );\n  }\n}\n\nexport default Axis;\n","import React from 'react';\nimport Axis from './Axis';\n\nconst XYAxis = ({ xScale, yScale, height }) => {\n  const xSettings = {\n    scale: xScale,\n    orient: 'bottom',\n    transform: `translate(0, ${height})`,\n  };\n  const ySettings = {\n    scale: yScale,\n    orient: 'left',\n    transform: 'translate(0, 0)',\n    ticks: 9,\n  };\n  return (\n    <g className=\"axis-group\">\n      <Axis {...xSettings} />\n      <Axis {...ySettings} />\n    </g>\n  );\n};\n\nexport default XYAxis;\n","import React from 'react';\nimport { select, selectAll } from 'd3-selection';\nimport { transition } from 'd3-transition';\n\nclass Line extends React.Component {\n  constructor() {\n    super();\n    this.ref = React.createRef();\n  }\n  componentDidMount() {\n    const node = this.ref.current;\n    const { xScale, yScale, data, lineGenerator } = this.props;\n\n    const initialData = data.map(d => ({\n      name: d.name,\n      value: 0\n    }));\n\n    select(node)\n      .append('path')\n      .datum(initialData)\n      .attr('id', 'line')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 3)\n      .attr('fill', 'none')\n      .attr('d', lineGenerator);\n    this.updateChart()\n  }\n  componentDidUpdate() {\n    this.updateChart();\n  }\n  updateChart() {\n    const {\n          lineGenerator, xScale, yScale, data,\n        } = this.props;\n\n    const t = transition().duration(1000);\n\n    const line = select('#line');\n    const dot = selectAll('.circle');\n\n    line\n      .datum(data)\n      .transition(t)\n      .attr('d', lineGenerator);\n  }\n  render() {\n    return <g className=\"line-group\" ref={this.ref} />;\n  }\n}\n\nexport default Line;\n","import React, { Component } from 'react';\nimport { scaleLinear, scaleBand, scaleTime } from 'd3-scale';\nimport XYAxis from './XY-axis';\nimport Line from './Line';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { extent } from 'd3-array';\nimport { transition } from 'd3-transition';\nimport {getChartThunk} from '../../redux/score';\nimport { connect } from 'react-redux';\nclass LineChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [\n        // {name: 'Jun 30', value: 7},\n        // {name: 'Jul 01', value: 7},\n        // {name: 'Jul 02', value: 3},\n        // {name: 'Jul 03', value: 8},\n        // {name: 'Jul 04', value: 1},\n        // {name: 'Jul 05', value: 4},\n        // {name: 'Jul 06', value: 3},\n        // {name: 'Jul 07', value: 6},\n        // {name: 'Jul 08', value: 8},\n        // {name: 'Jul 09', value: 2},\n        // {name: 'Aug 22', value: 10}\n      ],\n    }\n    this.weeklyData = this.weeklyData.bind(this);\n    this.monthlyData = this.monthlyData.bind(this);\n  }\n  async componentDidMount() {\n    await this.props.getChart();\n    const rate = this.props.chart.map(eachScore => eachScore.rate);\n    const date = this.props.chart.map(eachDate => new Date(eachDate.date));\n    const shortDate = date.map(d => String(d).slice(4,10))\n    console.log(typeof(shortDate[0]))\n    this.setState((prevState) => {\n      const data = shortDate.map((d, i) => ({\n        name: d,\n        value: rate[i]\n      }))\n      return {\n        data\n      }\n    })\n  }\n  weeklyData() {\n    const rate = this.props.chart.map(eachScore => eachScore.rate);\n    const weeklyRate = rate.slice(-7)\n    const date = this.props.chart.map(eachDate => new Date(eachDate.date));\n    const weeklyDate = date.slice(-7)\n    const shortDate = weeklyDate.map(d => String(d).slice(4,10))\n    console.log(shortDate)\n    this.setState((prevState) => {\n      const data = shortDate.map((d, i) => ({\n        name: d,\n        value: weeklyRate[i]\n      }))\n      return {\n        data\n      }\n    })\n  }\n  monthlyData() {\n    const rate = this.props.chart.map(eachScore => eachScore.rate);\n    const weeklyRate = rate.slice(-30)\n    const date = this.props.chart.map(eachDate => new Date(eachDate.date));\n    const weeklyDate = date.slice(-30)\n    const shortDate = weeklyDate.map(d => String(d).slice(4,10))\n    console.log(shortDate)\n    this.setState((prevState) => {\n      const data = shortDate.map((d, i) => ({\n        name: d,\n        value: weeklyRate[i]\n      }))\n      return {\n        data\n      }\n    })\n  }\n  render() {\n    const { data } = this.state;\n    console.log(data)\n    const parentWidth = 500;\n\n    const margins = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20,\n    };\n\n    const width = parentWidth - margins.left - margins.right;\n    const height = 200 - margins.top - margins.bottom;\n\n    const ticks = 5;\n    const t = transition().duration(1000);\n\n    const xScale = scaleBand()\n      .domain(data.map(d => d.name))\n      .rangeRound([0, width]).padding(0.01)\n    // const xScale = scaleTime()\n    // .domain(extent(data, d => d.name))\n    // .range([0, width])\n    // .nice();\n\n\n    const yScale = scaleLinear()\n      .domain(extent(data, d => d.value))\n      .range([height, 0])\n      .nice();\n\n    const lineGenerator = line()\n      .x(d => xScale(d.name))\n      .y(d => yScale(d.value))\n      // .curve(curveMonotoneX);\n\n    return (\n      <div>\n        <h4>How I've Felt Over Time</h4>\n        <button onClick={this.weeklyData}>Weekly data</button>\n        <button onClick={this.monthlyData}>Monthly data</button>\n        <svg\n          width={width + margins.left + margins.right}\n          height={height + margins.top + margins.bottom}\n        >\n          <g transform={`translate(${margins.left}, ${margins.top})`}>\n            <XYAxis {...{ xScale, yScale, height, ticks, t }} />\n            <Line data={data} xScale={xScale} yScale={yScale} lineGenerator={lineGenerator} width={width} height={height} />\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chart: state.chart,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getChart: () => dispatch(getChartThunk()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LineChart);\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/auth'\nimport DoctorDonut from './datavis/doctor-appointment-donut'\nimport { getAppointmentThunk } from '../redux/dcDoctor'\nimport { getAllDoctorsThunk } from '../redux/doctors'\nimport LineChart from './lineChart/LineChartCondition'\n\n\n\nexport class Home extends React.Component {\n\n  componentDidMount() {\n    this.props.getAllDoctors()\n    this.props.getAppointments()\n  }\n\n  render() {\n    const { firstName } = this.props.currentUser\n    const { handleClick } = this.props\n    const appointments = this.props.appointment\n    const doctors = this.props.doctors\n    return (\n      <div>\n        <h1>Welcome {firstName}!</h1>\n        <p>\n          <button type='submit' onClick={handleClick}>Log out</button>\n        </p>\n        <div>\n          {\n            (doctors && doctors.length > 0 && appointments && appointments.length > 0) ?\n              <DoctorDonut appointment={appointments} doctors={doctors} /> : null\n          }\n        </div>\n        <div>\n          <LineChart />\n        </div>\n\n      </div >\n    )\n  }\n}\nconst mapState = (state) => {\n  return {\n    doctors: state.doctors,\n    currentUser: state.currentUser,\n    appointment: state.appointment\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleClick: () => {\n    dispatch(logout(ownProps.history))\n  },\n  getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n  getAppointments: () => dispatch(getAppointmentThunk())\n})\n\nexport default connect(mapState, mapDispatch)(Home)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { signup } from '../redux/auth'\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Signup = (props) => {\n  const { handleSubmit } = props\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>First Name</label>\n        <input\n          name='firstName'\n          type='text'\n          placeholder='First Name'\n          required\n        />\n        <p>\n          <label>Last Name</label>\n          <input\n            name='lastName'\n            type='text'\n            placeholder='Last Name'\n            required\n          />\n        </p>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          required\n        />\n        <p>\n          <label>Password</label>\n          <input\n            name='password'\n            type='password'\n            required\n          />\n        </p>\n        <button type='submit'>Sign up</button>\n      </form>\n      <div>\n        <span>OR</span>\n      </div>\n      <p>\n        <a\n          target='_self'\n          href='/auth/google'\n        >\n          <i />\n          <span>Sign up with Google</span>\n        </a>\n        <a\n          target='_self'\n          href='/auth/facebook'\n        >\n          <i />\n          <span>Sign up with Facebook</span>\n        </a>\n      </p>\n    </div>\n  )\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: event => {\n    event.preventDefault()\n    const firstName = event.target.firstName.value\n    const lastName = event.target.lastName.value\n    const email = event.target.email.value\n    const password = event.target.password.value\n    const credentials = { firstName, lastName, email, password }\n    dispatch(signup(credentials, ownProps.history))\n  }\n})\n\nexport default connect(null, mapDispatch)(Signup)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../redux/auth'\nimport { API_URL } from '../redux/API_URL';\nimport { Link } from 'react-router-dom'\n\n/* -----------------    COMPONENT     ------------------ */\n\nconst Login = (props) => {\n  console.log('Login')\n  const { handleSubmit } = props\n  console.log('login page')\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          required\n        />\n        <p>\n          <label>Password</label>\n          <input\n            name='password'\n            type='password'\n            required\n          />\n        </p>\n        <button type='submit'>Log in</button>\n      </form>\n      <div>\n        <span>OR</span>\n      </div>\n      <p>\n        <a\n          target='_self'\n          href={`${API_URL}/auth/google`}\n        >\n          <i />\n          <span>Log in with Google</span>\n        </a>\n        <a\n          target='_self'\n          href={`${API_URL}/auth/facebook`}\n        >\n          <i />\n          <span>Log in with Facebook</span>\n        </a>\n      </p>\n\n\n      <p>\n        <Link to='/signup'>\n          Sign up here\n        </Link>\n      </p>\n    </div>\n  )\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleSubmit: event => {\n    event.preventDefault()\n    const email = event.target.email.value\n    const password = event.target.password.value\n    const credentials = { email, password }\n    dispatch(login(credentials, ownProps.history))\n  }\n})\n\nexport default connect(null, mapDispatch)(Login)\n\n","import React, { Component } from \"react\";\nclass AddConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const userId = this.props.currentUser.id;\n\n    this.setState({ [evt.target.name]: evt.target.value, userId });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addCondition(this.state);\n    this.setState({\n      name: \"\",\n      diagnosed: \"\",\n      typeOfPain: \"\",\n      userId: 0,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Add new condition form</h1>\n          <div>\n            <input\n              className=\"input\"\n              placeholder=\"Condition name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </div>\n          <div>\n            <label>\n              Is it diagnosed?\n              <select\n                onChange={this.handleChange}\n                value={this.state.diagnosed}\n                name=\"diagnosed\"\n              >\n                <option value=\"\"></option>\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label>\n              Type of pain?\n              <select\n                onChange={this.handleChange}\n                value={this.state.typeOfPain}\n                name=\"typeOfPain\"\n              >\n                <option value=\"\"></option>\n                <option value=\"mental health\">mental health</option>\n                <option value=\"physical\">physical</option>\n              </select>\n            </label>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default AddConditionForm;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateSingleConditionThunk\n} from '../redux/singleCondition'\nclass UpdateCondition extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value})\n  }\n  handleSubmit(evt) {\n    evt.preventDefault()\n    const id = this.props.condition.id\n    this.props.updateCondition(id, this.state)\n    this.setState({\n      name: '',\n      diagnosed: '',\n      typeOfPain: ''\n    })\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>Update Condition</h1>\n        <div>\n          <input\n            className=\"input\"\n            placeholder=\"Update Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n        </div>\n        <br />\n\n        <div>\n        <label>\n          Is it diagnosed?\n          <select\n            onChange={this.handleChange}\n            value={this.state.diagnosed}\n            name=\"diagnosed\"\n          >\n            <option value=\"\"></option>\n            <option value=\"yes\">yes</option>\n            <option value=\"no\">no</option>\n          </select>\n        </label>\n        </div>\n        <br />\n\n        <div>\n        <label>\n          Type of pain?\n          <select\n            onChange={this.handleChange}\n            value={this.state.typeOfPain}\n            name=\"typeOfPain\"\n          >\n            <option value=\"\"></option>\n            <option value=\"mental health\">mental health</option>\n            <option value=\"physical\">physical</option>\n          </select>\n        </label>\n        </div>\n        <br />\n        <button type=\"submit\">\n          Submit\n        </button>\n      </form>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n      condition: state.condition,\n      currentUser: state.currentUser\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n      updateCondition: (id, condition) => dispatch(updateSingleConditionThunk(id, condition)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateCondition)\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {deleteConditionThunk} from '../redux/conditions';\nimport UpdateCondition from './UpdateCondition';\nclass SingleCondition extends Component {\n  constructor() {\n    super()\n    this.state = {\n      clicked: false\n    }\n    this.updateCondition = this.updateCondition.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n}\n  updateCondition = () => {\n    this.setState({ clicked: true })\n  }\n  async handleDelete(id) {\n    try {\n      await this.props.deleteCondition(id)\n      this.props.closeTheModal()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  render() {\n    const condition = this.props.condition;\n    if (!condition) {\n      return \"This condition is not in our system\"\n    } else {\n      return (\n        <div>\n          <div>Condition: {condition.name} </div>\n          <div>Has this been diagnosed?:  {condition.diagnosed}</div>\n          <div>Physical or mental condition?: {condition.typeOfPain}</div>\n          <div>\n            {this.state.clicked && <UpdateCondition />}\n          </div>\n          <div>\n            {!this.state.clicked &&\n              <button onClick={() => this.updateCondition()}>Update Condition</button>\n            }\n          </div>\n          {\n            <button\n              type=\"submit\"\n              onClick={() => this.props.removeCondition(condition.id)}\n            >\n              Remove Condition\n        </button>\n          }\n        </div>\n      )\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    condition: state.condition,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeCondition: id => dispatch(deleteConditionThunk(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCondition)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllConditionsThunk, addConditionThunk } from '../redux/conditions';\nimport { getSingleConditionThunk } from '../redux/singleCondition';\nimport AddConditionForm from './AddConditionForm';\nimport SingleCondition from './SingleCondition';\nimport ReactModal from 'react-modal';\n\n// const customStyles = {\n//   content: {\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)'\n//   }\n// };\nclass Conditions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      showDocModal: false,\n    };\n    this.openModal = this.openModal.bind(this);\n    this.openDocModal = this.openDocModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.closeDocModal = this.closeDocModal.bind(this);\n  }\n  componentDidMount() {\n    this.props.getAllConditions();\n    ReactModal.setAppElement('body');\n  }\n  openModal() {\n    this.setState({ showModal: true });\n  }\n\n  openDocModal(id) {\n    this.setState({ showDocModal: true });\n    this.props.getSingleCondition(id);\n  }\n\n  closeModal() {\n    this.setState({ showModal: false });\n  }\n\n  closeDocModal() {\n    this.setState({ showDocModal: false });\n  }\n  render() {\n    const conditions = this.props.conditions;\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Conditions</h3>\n          <div className=\"scroll\">\n            {conditions &&\n              conditions.map((condition) => {\n                return (\n                  <div className=\"listItem\" key={condition.id}>\n                    <button\n                      className=\"bigButton\"\n                      type=\"button\"\n                      onClick={() => this.openDocModal(condition.id)}\n                    >\n                      {condition.name}\n                    </button>\n                    <ReactModal\n                      isOpen={this.state.showDocModal}\n                      contentLabel=\"Single Document\"\n                    >\n                      <SingleCondition closeTheModal={this.closeDocModal} />\n                      <button onClick={this.closeDocModal}>Close</button>\n                    </ReactModal>\n                  </div>\n                );\n              })}\n          </div>\n\n          <button onClick={this.openModal}>Add a Condition</button>\n        </div>\n        <div>\n          <ReactModal\n            isOpen={this.state.showModal}\n            contentLabel=\"Single Document\"\n          >\n            <AddConditionForm\n              currentUser={this.props.currentUser}\n              addCondition={this.props.addCondition}\n            />\n            <button onClick={this.closeModal}>close</button>\n          </ReactModal>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    conditions: state.conditions,\n    currentUser: state.currentUser,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllConditions: () => dispatch(getAllConditionsThunk()),\n    addCondition: (condition) => dispatch(addConditionThunk(condition)),\n    getSingleCondition: (id) => dispatch(getSingleConditionThunk(id)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Conditions);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMedication } from \"../redux/medications\";\n\nclass AddMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"\", dosage: \"\", frequency: \"\", userId: 0 };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleChange(event) {\n    const currentUser = this.props.currentUser.id;\n    this.setState({ userId: currentUser });\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({ name: \"\", dosage: \"\", frequency: \"\", userId: 0 });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Medication Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return { addMedication: (medication) => dispatch(addMedication(medication)) };\n};\n\nexport default connect(mapState, mapDispatch)(AddMedication);\n","import React from \"react\";\n\nconst RemoveMedication = (props) => {\n  const { medication, remove } = props;\n\n  return (\n    <div>\n      <button type=\"sumbit\" onClick={() => remove(medication.id)}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default RemoveMedication;\n","import React from \"react\";\n\nexport default class UpdateMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"\", dosage: \"\", frequency: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const medication = this.props.medication;\n    const updated = this.state;\n    console.log(\"SUMBIT\", medication, updated);\n    this.props.update(medication, updated);\n\n    this.props.close();\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Updated Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Required\"\n          />\n\n          <label htmlFor=\"dosage\">Updated Dosage:</label>\n          <input\n            type=\"text\"\n            name=\"dosage\"\n            value={this.state.dosage}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frequency\">Updated Frequency:</label>\n          <input\n            type=\"text\"\n            name=\"frequency\"\n            value={this.state.frequency}\n            onChange={this.handleChange}\n          />\n\n          <br />\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n// const mapDispatch = (dispatch) => {\n//   return {\n//     update: (medication, updatedMedication) =>\n//       dispatch(updateMedication(medication, updatedMedication)),\n//   };\n// };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMedication, updateMedication } from \"../redux/singleMedication\";\nimport UpdateMedication from \"./UpdateMedication\";\n\nexport class SingleMedication extends React.Component {\n  constructor() {\n    super();\n    this.state = { update: false };\n\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n  componentDidMount() {\n    try {\n      const id = this.props.selected.id || this.props.medication;\n      this.props.loadSingleMedication(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleCancel() {\n    this.setState({ update: false });\n  }\n  handleClose(id) {\n    // this.props.loadSingleMedication(id);\n    this.setState({ update: false });\n  }\n\n  handleOpen() {\n    this.setState({ update: true });\n  }\n\n  handleUpdate(medication, updatedMedication) {\n    this.props.update(medication, updatedMedication);\n  }\n\n  render() {\n    const medication = this.props.medication;\n    const rxcui = this.props.rxcui;\n\n    return (\n      <div>\n        {/* {this.state.view && (\n          <> */}\n        {medication && !this.state.update && (\n          <div>\n            <p>{medication.name}</p>\n            <p>{medication.dosage}</p>\n            <p>{medication.frequency}</p>\n            <p>{rxcui}</p>\n            {/*\n                <RemoveMedication\n                  medication={medication}\n                  remove={this.props.remove}\n                /> */}\n            <button type=\"button\" onClick={() => this.handleOpen()}>\n              Update Medication Info\n            </button>\n          </div>\n        )}\n        {medication && this.state.update && (\n          <div>\n            <UpdateMedication\n              medication={medication}\n              close={this.handleClose}\n              update={this.handleUpdate}\n            />\n            <button type=\"button\" onClick={() => this.handleCancel()}>\n              Cancel Update\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    medication: state.medication.medication,\n    rxcui: state.medication.rxcui,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadSingleMedication: (id) => dispatch(fetchMedication(id)),\n    update: (medication, updatedMedication) =>\n      dispatch(updateMedication(medication, updatedMedication)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SingleMedication);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ReactModal from \"react-modal\";\nimport { fetchMedications, deleteMedication } from \"../redux/medications\";\nimport AddMedication from \"./AddMedication\";\nimport RemoveMedication from \"./RemoveMedication\";\nimport SingleMedication from \"./SingleMedication\";\n\nclass Medications extends React.Component {\n  constructor() {\n    super();\n    this.state = { selected: null, add: false };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchMedications();\n  }\n\n  handleSelect(medication) {\n    this.setState({ selected: medication, add: false });\n  }\n\n  handleAdd() {\n    this.setState({ selected: null, add: true });\n  }\n\n  handleClose() {\n    this.setState({ selected: null, add: false });\n  }\n\n  handleRemove(id) {\n    this.props.remove(id);\n    this.handleClose();\n  }\n\n  render() {\n    const { medications, remove } = this.props;\n\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Saved Medications</h3>\n          <div className=\"scroll\">\n            {medications &&\n              medications.map((medication) => {\n                return (\n                  <div className=\"listItem\" key={medication.id}>\n                    <>\n                      <button\n                        className=\"bigButton\"\n                        type=\"button\"\n                        onClick={() => this.handleSelect(medication)}\n                      >\n                        {medication.name}\n                      </button>\n                    </>\n                    {/* <RemoveMedication medication={medication} remove={remove} /> */}\n                  </div>\n                );\n              })}\n          </div>\n          <button type=\"button\" onClick={() => this.handleAdd()}>\n            Add a Medication\n          </button>\n          <ReactModal isOpen={this.state.add} contentLabel=\"Single Document\">\n            (\n            <>\n              <AddMedication />\n              <button type=\"button\" onClick={() => this.handleClose()}>\n                Close\n              </button>\n            </>\n            )\n          </ReactModal>\n          <ReactModal\n            isOpen={this.state.selected}\n            contentLabel=\"Single Document\"\n          >\n            <SingleMedication\n              selected={this.state.selected}\n              remove={remove}\n              // closeModal={this.handleClose}\n            />\n\n            <RemoveMedication\n              medication={this.state.selected}\n              remove={this.handleRemove}\n              // close={this.handleClose}\n            />\n            <button type=\"button\" onClick={() => this.handleClose()}>\n              Close\n            </button>\n          </ReactModal>\n\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    medications: state.medications,\n    currentUser: state.currentUser,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMedications: () => dispatch(fetchMedications()),\n    remove: (id) => dispatch(deleteMedication(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Medications);\n","import React, { Component } from 'react';\nclass DCMedicationForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      notes: '',\n      medicationId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const medicationId = this.props.eachMed.id;\n    this.setState({ medicationId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addMedication(this.state);\n    this.setState({\n      isClicked: false,\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const med = this.props.eachMed;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {med.name}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  Any notes on how this medication is making you feel?\n            <input\n                    className='input'\n                    placeholder='notes'\n                    type='text'\n                    name='notes'\n                    onChange={this.handleChange}\n                    value={this.state.notes}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n\n      </form>\n    )\n  }\n}\nexport default DCMedicationForm;\n","import React, { Component } from 'react';\nclass DCConditionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: new Date(),\n      notes: '',\n      conditionId: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const conditionId = this.props.condition.id;\n    this.setState({ conditionId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addScore(this.state);\n    this.setState({\n      isClicked: false,\n      name: '',\n      rate: '',\n      date: '',\n      notes: '',\n      conditionId: 0\n    })\n  }\n  render() {\n    const condition = this.props.condition;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {condition.name}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  How much is this affecting you today? 1 (not too much) to 10 (so very much):\n            <input\n                    className='input'\n                    placeholder='1-10'\n                    type='text'\n                    name='rate'\n                    onChange={this.handleChange}\n                    value={this.state.rate}\n                  />\n                </label>\n              </div>\n              <div>\n                <label>\n                  Notes on how I feel:\n            <input\n                    className='input'\n                    placeholder='Notes'\n                    type='text'\n                    name='notes'\n                    onChange={this.handleChange}\n                    value={this.state.notes}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n      </form>\n    )\n  }\n}\nexport default DCConditionForm;\n","import React, { Component } from 'react';\nclass DCDoctorForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      time: '',\n      doctorId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    const doctorId = this.props.doctor.id;\n    this.setState({ doctorId });\n    const target = evt.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addAppointment(this.state);\n    this.setState({\n      isClicked: false,\n      time: '',\n      doctorId: 0\n    })\n  }\n  render() {\n    const doctor = this.props.doctor;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          {doctor.firstName} {doctor.lastName}\n          <input\n            type='checkbox'\n            name='isClicked'\n            onChange={this.handleChange}\n          />\n        </label>\n        {\n          this.state.isClicked ?\n            <div>\n              <div>\n                <label>\n                  Time of your appointment\n              <input\n                    className='input'\n                    placeholder='HH:MM'\n                    type='text'\n                    name='time'\n                    onChange={this.handleChange}\n                    value={this.state.time}\n                  />\n                </label>\n              </div>\n              <button type=\"submit\">\n                Submit\n          </button>\n            </div> : null\n        }\n      </form>\n    )\n  }\n}\nexport default DCDoctorForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getScoreThunk, addScoreThunk } from '../redux/dcCondition';\nimport { addAppointmentThunk } from '../redux/dcDoctor';\nimport { getMedicationThunk, addMedicationThunk } from '../redux/dcMedication';\nimport DCMedicationForm from './DCMedicationForm';\nimport DCConditionForm from './DCConditionForm';\nimport DCDoctorForm from './DCDoctorForm';\nimport { getAllDoctorsThunk } from '../redux/doctors'\n\nclass DailyCheckin extends Component {\n  componentDidMount() {\n    this.props.getScore();\n    this.props.getAllDoctors();\n    this.props.getMedication();\n  }\n  render() {\n    const score = this.props.score;\n    const doctors = this.props.doctors;\n    const med = this.props.med;\n    return (\n      <div className=\"main\" id=\"daily\">\n        <h1>Daily Check-in</h1>\n        <div className=\"daily\">\n          <div className=\"dailyColumn\">\n            <h3>What conditions are you dealing with today?</h3>\n            {score &&\n              score.map((condition) => {\n                return (\n                  <div key={condition.id}>\n                    <DCConditionForm\n                      condition={condition}\n                      addScore={this.props.addScore}\n                    />\n                  </div>\n                );\n              })}\n          </div>\n          <div className=\"dailyColumn\">\n            <h3>Do you have an appointment with a doctor today?</h3>\n            {doctors &&\n              doctors.map((doctor) => {\n                return (\n                  <div key={doctor.id}>\n                    <DCDoctorForm\n                      doctor={doctor}\n                      addAppointment={this.props.addAppointment}\n                    />\n                  </div>\n                );\n              })}\n          </div>\n          <div className=\"dailyColumn\">\n            <h3>What medications are you taking today?</h3>\n            {med &&\n              med.map((eachMed) => {\n                return (\n                  <div key={eachMed.id}>\n                    <DCMedicationForm\n                      eachMed={eachMed}\n                      addMedication={this.props.addMedication}\n                    />\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    score: state.score,\n    appointment: state.appointment,\n    doctors: state.doctors,\n    med: state.med,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getScore: () => dispatch(getScoreThunk()),\n    addScore: (score) => dispatch(addScoreThunk(score)),\n    getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n    addAppointment: (appointment) => dispatch(addAppointmentThunk(appointment)),\n    getMedication: () => dispatch(getMedicationThunk()),\n    addMedication: (med) => dispatch(addMedicationThunk(med)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyCheckin);\n","import React, { Component } from \"react\";\nimport { updateDocumentThunk } from '../redux/singleDocument'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\n\nexport class UploadDocument extends Component {\n  constructor() {\n    super()\n    this.state = {\n      selectedFile: null,\n    }\n    this.uploadHandler = this.uploadHandler.bind(this)\n    this.handleFileRead = this.handleFileRead.bind(this)\n    this.sendFile = this.sendFile.bind(this)\n  }\n\n  handleFileRead(e) {\n    if (e.target.files[0]) {\n      let reader = new FileReader()\n      reader.readAsDataURL(e.target.files[0])\n      reader.onload = () => {\n        this.setState({ selectedFile: reader.result })\n      }\n    }\n  }\n\n  async sendFile() {\n    if (this.state.selectedFile) {\n      const file = await axios.post(\n        `https://api.cloudinary.com/v1_1/elementhealth/image/upload`,\n        { file: this.state.selectedFile, upload_preset: 'capstone' }\n      )\n      return file.data.secure_url\n    }\n  }\n\n  async uploadHandler(e) {\n    e.preventDefault()\n    const { id } = this.props\n    const description = e.target.description.value\n    const type = e.target.type.value\n    let doctorId = null\n    if (typeof (e.target.doctorId.value) === 'number') doctorId = e.target.doctorId.value\n\n    let conditionId = null\n    if (typeof (e.target.conditionId.value) === 'number') conditionId = e.target.doctorId.value\n\n    if (this.state.selectedFile) {\n      const imageUrl = await this.sendFile()\n      const formData = {\n        description,\n        type,\n        doctorId,\n        conditionId,\n        imageUrl\n      }\n      this.props.updateDocumentThunk(id, formData)\n    } else {\n      const formData = {\n        description,\n        type,\n        doctorId,\n        conditionId\n      }\n      this.props.updateDocumentThunk(id, formData)\n    }\n  }\n\n  render() {\n    const { doctors, conditions } = this.props\n    const types = ['Proof of Identity', 'Lab Result', 'Surgical Report', 'Pathology Report', 'Imaging', 'Visit Summary']\n    return (\n      <form onSubmit={this.uploadHandler}>\n        <label>Enter a short description of what this document contains:</label>\n        <input\n          name='description'\n          type='text'\n          placeholder='Description'\n        />\n        <label>Select what type of document this is:\n          <select\n            name='type'\n          >\n            {types.map((type, i) => {\n              return (\n                <option key={i} value={type}>{type}</option>\n              )\n            })\n            }\n          </select>\n        </label>\n        <label>Which doctor is this document associated with?\n          <select\n            name='doctorId'\n          >\n            <option>Select Doctor</option>\n            {doctors &&\n              doctors.map(doctor => {\n                const { id, firstName, lastName } = doctor\n                return (\n                  <option key={id} value={id}>{firstName} {lastName}</option>\n                )\n              })\n            }\n          </select>\n        </label>\n        <label>What condition does this document relate to?\n          <select\n            name='conditionId'\n          >\n            <option>Select Condition</option>\n            {conditions &&\n              conditions.map(condition => {\n                const { id, name } = condition\n                return (\n                  <option key={id} value={id}>{name}</option>\n                )\n              })\n            }\n          </select>\n        </label>\n        <label>Choose File to Replace Current File</label>\n        <input\n          type='file'\n          onChange={this.handleFileRead}\n        // multiple\n        />\n        <button type=\"submit\" >Update</button>\n      </form>\n    );\n  };\n}\nconst mapState = ({ doctors, conditions }) => ({ doctors, conditions })\n\nconst mapDispatch = { updateDocumentThunk }\n\nexport default connect(mapState, mapDispatch)(UploadDocument);\n\n","import React, { Component } from \"react\";\nimport { updateDocumentThunk, fetchSingleDocument } from '../redux/singleDocument'\nimport { deleteDocumentsThunk } from '../redux/documents'\nimport { connect } from 'react-redux'\nimport UpdateDocument from './UpdateDocument'\n\n\nexport class SingleDocument extends Component {\n  constructor() {\n    super()\n    this.state = {\n      clicked: false\n    }\n    this.updateDocument = this.updateDocument.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n  componentDidMount() {\n    const { id } = this.props\n    this.props.fetchSingleDocument(id)\n  }\n\n  updateDocument = () => {\n    this.setState({ clicked: true })\n  }\n\n  handleDelete(id) {\n    this.props.deleteDocumentsThunk(id)\n    this.props.closeDocumentModal()\n  }\n\n  render() {\n    const { id, imageUrl } = this.props.singleDocument\n\n    return (\n      <>\n        <img src={imageUrl} alt='' />\n\n        {this.state.clicked ?\n          <UpdateDocument id={id} />\n          : <button onClick={() => this.updateDocument()}>Update Document</button>\n        }\n        <button onClick={() => this.handleDelete(id)}>Delete Document</button>\n      </>\n    )\n  }\n}\n\nconst mapState = ({ currentUser, singleDocument }, ownProps) => {\n  // const { id } = ownProps\n  return {\n    // singleDocument: currentUser.documents.find(document => document.id = id)\n    singleDocument\n  }\n}\n\nconst mapDispatch = { updateDocumentThunk, fetchSingleDocument, deleteDocumentsThunk }\n\nexport default connect(mapState, mapDispatch)(SingleDocument);\n\n","import React, { Component } from \"react\";\nimport { uploadDocumentThunk } from '../redux/documents'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\n\nexport class UploadDocuments extends Component {\n  constructor() {\n    super()\n    this.state = {\n      selectedFile: null,\n    }\n    this.uploadHandler = this.uploadHandler.bind(this)\n    this.handleFileRead = this.handleFileRead.bind(this)\n    this.sendFile = this.sendFile.bind(this)\n  }\n\n  handleFileRead(e) {\n    if (e.target.files[0]) {\n      let reader = new FileReader()\n      reader.readAsDataURL(e.target.files[0])\n      reader.onload = () => {\n        this.setState({ selectedFile: reader.result })\n      }\n    }\n  }\n\n  async sendFile() {\n    const file = await axios.post(\n      `https://api.cloudinary.com/v1_1/elementhealth/image/upload`,\n      { file: this.state.selectedFile, upload_preset: 'capstone' }\n    )\n    return file.data.secure_url\n  }\n\n  async uploadHandler(e) {\n    e.preventDefault()\n\n    const description = e.target.description.value\n    const type = e.target.type.value\n    let doctorId = null\n    if (typeof (e.target.doctorId.value) === 'number') doctorId = e.target.doctorId.value\n\n    let conditionId = null\n    if (typeof (e.target.conditionId.value) === 'number') conditionId = e.target.doctorId.value\n\n    const imageUrl = await this.sendFile()\n\n    const formData = {\n      description,\n      type,\n      doctorId,\n      conditionId,\n      imageUrl\n    }\n    this.props.uploadDocumentThunk(formData)\n    this.props.closeUploadModal()\n  }\n\n  render() {\n    const { doctors, conditions } = this.props\n    const types = ['Proof of Identity', 'Lab Result', 'Surgical Report', 'Pathology Report', 'Imaging', 'Visit Summary']\n    return (\n      <form onSubmit={this.uploadHandler}>\n        <label>Enter a short description of what this document contains:</label>\n        <input\n          name='description'\n          type='text'\n          placeholder='Description'\n        />\n        <label>Select what type of document this is:\n          <select\n            name='type'\n          >\n            {types.map((type, i) => {\n              return (\n                <option key={i} value={type}>{type}</option>\n              )\n            })\n            }\n          </select>\n        </label>\n        <label>Which doctor is this document associated with?\n          <select\n            name='doctorId'\n          >\n            <option>Select Doctor</option>\n            {doctors &&\n              doctors.map(doctor => {\n                const { id, firstName, lastName } = doctor\n                return (\n                  <option key={id} value={id}>{firstName} {lastName}</option>\n                )\n              })\n            }\n          </select>\n        </label>\n        <label>What condition does this document relate to?\n          <select\n            name='conditionId'\n          >\n            <option>Select Condition</option>\n            {conditions &&\n              conditions.map(condition => {\n                const { id, name } = condition\n                return (\n                  <option key={id} value={id}>{name}</option>\n                )\n              })\n            }\n          </select>\n        </label>\n        <label>Choose File</label>\n        <input\n          type='file'\n          onChange={this.handleFileRead}\n        // multiple\n        />\n        <button type=\"submit\" >Upload</button>\n      </form>\n    );\n  };\n}\nconst mapState = ({ currentUser, doctors, conditions }) => ({ currentUser, doctors, conditions })\n\nconst mapDispatch = { uploadDocumentThunk }\n\nexport default connect(mapState, mapDispatch)(UploadDocuments);\n\n","\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactModal from \"react-modal\";\nimport SingleDocument from \"./SingleDocument\";\nimport UploadDocuments from \"./UploadDocuments\";\nimport { fetchDocuments } from \"../redux/documents\";\n\nexport class Documents extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showDocumentModal: false,\n      showUploadModal: false,\n    };\n    this.openUploadModal = this.openUploadModal.bind(this);\n    this.closeUploadModal = this.closeUploadModal.bind(this);\n    this.openDocumentModal = this.openDocumentModal.bind(this);\n    this.closeDocumentModal = this.closeDocumentModal.bind(this);\n  }\n\n  componentDidMount() {\n    ReactModal.setAppElement(\"body\");\n    this.props.fetchDocuments();\n  }\n\n  openUploadModal() {\n    this.setState({ showUploadModal: true });\n  }\n\n  closeUploadModal() {\n    this.setState({ showUploadModal: false });\n  }\n\n  openDocumentModal() {\n    this.setState({ showDocumentModal: true });\n  }\n\n  closeDocumentModal() {\n    this.setState({ showDocumentModal: false });\n\n  }\n\n  render() {\n    const { documents } = this.props;\n    if (!documents) {\n      return \"No Documents\";\n    }\n    return (\n      <div className=\"main\">\n        <div className=\"column\">\n          <h3>My Documents</h3>\n          {documents &&\n            documents.map((doc) => {\n              const { type, id, description } = doc;\n              return (\n                <div key={id}>\n                  {type !== \"Proof of Identity\" && (\n                    <div>\n                      <button onClick={() => this.openDocumentModal()}>\n                        {description}\n                      </button>\n                      <ReactModal\n                        isOpen={this.state.showDocumentModal}\n                        contentLabel=\"Single Document\"\n                      >\n                        <SingleDocument\n                          {...this.props}\n                          closeDocumentModal={this.closeDocumentModal}\n                          id={id}\n                        />\n                        <button onClick={() => this.closeDocumentModal()}>\n                          close\n                        </button>\n                      </ReactModal>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          <button onClick={() => this.openUploadModal()}>\n            Upload a Document\n          </button>\n        </div>\n\n        <div className=\"popup\">\n          <ReactModal\n            isOpen={this.state.showUploadModal}\n            contentLabel=\"Upload Documents\"\n          >\n            <UploadDocuments closeUploadModal={this.closeUploadModal} />\n            <button onClick={() => this.closeUploadModal()}>close</button>\n          </ReactModal>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = ({ documents }) => ({ documents });\nconst mapDispatch = { fetchDocuments };\n\nexport default connect(mapState, mapDispatch)(Documents);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchDocuments } from '../redux/documents'\n\nexport class ProofOfIdentity extends Component {\n  componentDidMount() {\n    this.props.fetchDocuments()\n  }\n\n  render() {\n    const { documents } = this.props.currentUser\n    return (\n      <>\n        {\n          !documents ? 'No Documents' :\n            documents.map((doc, i) => {\n              const { type } = doc\n              return (\n                <div key={i}>\n                  {type === 'Proof of Identity' &&\n                    <img src={doc.imageUrl}\n                      alt='document'\n                      width=\"50%\" height=\"50%\"\n                    />\n                  }\n                </div>\n              )\n            }\n            )\n        }\n      </>\n    )\n  }\n}\n\nconst mapState = ({ currentUser }) => ({ currentUser })\n\nconst mapDispatch = { fetchDocuments }\n\nexport default connect(mapState, mapDispatch)(ProofOfIdentity)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/auth'\nimport UploadDocuments from './UploadDocuments'\nimport ProofOfIdentity from './ProofOfIdentity'\nimport { getAllConditionsThunk } from '../redux/conditions'\nimport { getAllDoctorsThunk } from '../redux/doctors'\n\nclass Profile extends Component {\n  componentDidMount() {\n    this.props.loadUserInfo()\n  }\n\n  render() {\n    const { firstName, lastName, email } = this.props.currentUser\n    const { handleClick } = this.props\n    return (\n      <div>\n        <h1>User Profile</h1>\n        <h4>Name: {firstName} {lastName}</h4>\n        <h4>Email: {email}</h4>\n        <div>\n          Your insurance card and ID card:\n      </div>\n        <span><ProofOfIdentity {...this.props} /></span>\n        <span><UploadDocuments /></span>\n        <p>\n          <button type='submit' onClick={handleClick}>Log out</button>\n        </p>\n      </div >\n    )\n  }\n}\n\nconst mapState = ({ currentUser }) => ({ currentUser })\n\nconst mapDispatch = (dispatch, ownProps) => ({\n  handleClick: () => {\n    dispatch(logout(ownProps.history))\n  },\n  loadUserInfo: () => {\n    dispatch(getAllConditionsThunk())\n    dispatch(getAllDoctorsThunk())\n  }\n})\n\n\nexport default connect(mapState, mapDispatch)(Profile)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addDoctorThunk } from '../redux/doctors'\nimport { Link } from 'react-router-dom'\n\n\nexport function AddDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const userId = props.currentUser.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        props.addNewDoctor(payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Add Your New Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        required\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>Add A Doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDoctor)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { updateSingleDoctor } from '../redux/singleDoctor'\nimport { Link } from 'react-router-dom'\n\n\nexport function UpdateDoctor(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [address, setAddress] = useState('')\n    const [doctorType, setDoctorType] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log('what are props inside update doctor', props)\n        const userId = props.currentUser.id\n        const id = props.doctor.id\n        const payload = { firstName, lastName, address, doctorType, userId }\n        for (let key in payload) {\n            if (payload[key] === '') {\n                delete payload[key]\n            }\n        }\n        props.updateDoctor(id, payload)\n        // props.updateAllDocs(id, payload)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={(event) => handleSubmit(event)}>\n                <h1>Update This Doctor</h1>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"first name or title\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"last name\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"office address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </div>\n                <br />\n\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"specialty\"\n                        value={doctorType}\n                        onChange={(e) => setDoctorType(e.target.value)}\n                    />\n                </div>\n                <br />\n                <button type='submit'>change this doctor</button>\n                <Link to='/medications'>Add A Medication</Link>\n            </form>\n\n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateDoctor: (id, updatedDoctor) => dispatch(updateSingleDoctor(id, updatedDoctor)),\n        // updateAllDocs: (id, doctor) => dispatch(updateAllDoctors(id, doctor))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateDoctor)","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { getSingleDoctor } from \"../redux/onedoctor\";\nimport UpdateDoctor from './UpdateDoctor'\nimport { deleteDoctorThunk } from \"../redux/doctors\"\n\nexport class SingleDoctor extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            clicked: false\n        }\n        this.updateDoctor = this.updateDoctor.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n\n    }\n\n    updateDoctor = () => {\n        this.setState({ clicked: true })\n    }\n\n    async handleDelete(id) {\n        try {\n            await this.props.deleteDoctor(id)\n            this.props.closeTheModal()\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    render() {\n\n        const doctor = this.props.doctor\n        const appointments = this.props.appointment\n        const filterApps = (appointmentArray) => {\n            return (appointmentArray.filter((oneapp) => {\n                return (\n                    oneapp.doctorId === doctor.id)\n            }))\n        }\n        const docApps = filterApps(appointments)\n\n        if (!doctor) {\n            return \"This doctor is not in our system\"\n        } else {\n            return (\n                <div>\n                    <div>Doctor: {doctor.firstName} {doctor.lastName}</div>\n                    <div>Specialty: {doctor.doctorType}</div>\n                    <div>Address: {doctor.address}</div>\n                    <div>\n                        {this.state.clicked === true && <UpdateDoctor />}\n                    </div>\n                    <div>\n                        {this.state.clicked === false &&\n                            <button onClick={() => this.updateDoctor()}>Update Doctor</button>\n                        }\n                    </div>\n                    <button onClick={() => this.handleDelete(doctor.id)}>Delete Doctor</button>\n                    <div>\n                        <div>My Appointments with {doctor.firstName} {doctor.lastName} </div>\n                        <ul>\n                            {\n                                docApps.map((oneapp) => {\n                                    return (\n                                        <li key={oneapp.id}>\n                                            <div>Date: {oneapp.appointmentDate}</div>\n                                            <div>Time: {oneapp.time}</div>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n\n            )\n        };\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        currentUser: state.currentUser,\n        appointment: state.appointment\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteDoctor: (id) => dispatch(deleteDoctorThunk(id))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleDoctor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllDoctorsThunk, addDoctorThunk } from \"../redux/doctors\";\nimport { fetchSingleDoctor } from '../redux/singleDoctor'\nimport { AddDoctor } from \"./AddDoctor\";\nimport ReactModal from 'react-modal'\nimport SingleDoctor from './SingleDoctor'\nimport { getAppointmentThunk } from \"../redux/dcDoctor\"\n\n// const customStyles = {\n//     content: {\n//         top: '50%',\n//         left: '50%',\n//         right: 'auto',\n//         bottom: 'auto',\n//         marginRight: '-50%',\n//         transform: 'translate(-50%, -50%)'\n//     }\n// };\n\nexport class AllDoctors extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            showModal: false,\n            showDocModal: false\n        }\n        this.openModal = this.openModal.bind(this)\n        this.openDocModal = this.openDocModal.bind(this)\n        this.closeModal = this.closeModal.bind(this)\n        this.closeDocModal = this.closeDocModal.bind(this)\n    }\n    componentDidMount() {\n        ReactModal.setAppElement('body')\n        this.props.getAllDoctors()\n    }\n\n    openModal() {\n        this.setState({ showModal: true })\n    }\n\n    openDocModal(id) {\n        this.setState({ showDocModal: true })\n        this.props.fetchSingleDoctor(id)\n        this.props.getAppointments()\n    }\n\n    closeModal() {\n        this.setState({ showModal: false })\n    }\n\n    closeDocModal() {\n        this.setState({ showDocModal: false })\n    }\n    render() {\n        const doctors = this.props.doctors;\n        return (\n            <div>\n\n                <div>\n                    <button onClick={this.openModal}>Add a Doctor</button>\n                    <h1>My Doctors</h1>\n                    <ReactModal\n                        isOpen={this.state.showModal}\n                        contentLabel=\"Example Modal\"\n                    >\n                        <AddDoctor currentUser={this.props.currentUser} addNewDoctor={this.props.addNewDoctor} />\n\n                        <button onClick={this.closeModal}>close</button>\n                    </ReactModal>\n                </div>\n                <div>\n                    {doctors && doctors.map((doctor) => {\n                        return (\n                            <div key={doctor.id}>\n                                <button onClick={() => this.openDocModal(doctor.id)}>{doctor.firstName} {doctor.lastName}</button>\n                                <ReactModal\n                                    isOpen={this.state.showDocModal}\n                                    contentLabel=\"Example Modal\"\n                                >\n                                    <SingleDoctor closeTheModal={this.closeDocModal} />\n                                    <button onClick={this.closeDocModal}>close</button>\n                                </ReactModal>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        doctor: state.doctor,\n        doctors: state.doctors,\n        currentUser: state.currentUser,\n        appointment: state.appointment\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getAllDoctors: () => dispatch(getAllDoctorsThunk()),\n        addNewDoctor: (newDoctor) => dispatch(addDoctorThunk(newDoctor)),\n        fetchSingleDoctor: (id) => dispatch(fetchSingleDoctor(id)),\n        getAppointments: () => dispatch(getAppointmentThunk())\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AllDoctors);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div>\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div id=\"upperRight\">\n        <div className=\"navDropdown\">\n          <div className=\"navDropButton\">My Info</div>\n          <div className=\"navDropContent\">\n            <Link to=\"/medications\">Medications</Link>\n            <Link to=\"/doctors\">Doctors</Link>\n            <Link to=\"/conditions\">Conditions</Link>\n            <Link to=\"/documents\">My Documents</Link>\n          </div>\n        </div>\n\n        <Link to=\"/dailycheckin\">Daily Checkin</Link>\n        <Link to=\"/profile\">Profile</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport {getChartThunk} from '../redux/score';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nclass BarChart extends Component {\n    async componentDidMount() {\n        await this.props.getChart();\n        const rate = this.props.chart.map(eachScore => eachScore.rate)\n        this.drawBarChart(rate)\n    }\n    drawBarChart(data) {\n      const canvasHeight = 400\n      const canvasWidth = 1000\n      const scale = 20\n      const svgCanvas = d3.select(this.refs.canvas)\n        .append('svg')\n        .attr('width', canvasWidth)\n        .attr('height', canvasHeight)\n        .style('border', '1px solid black')\n      svgCanvas.selectAll('rect')\n        .data(data).enter()\n        .append('rect')\n        .attr('width', 10)\n        .attr('height', (datapoint) => datapoint * scale)\n        .attr('fill', 'yellow')\n        .attr('x', (datapoint, iteration) => iteration * 16)\n        .attr('y', (datapoint) => canvasHeight - datapoint * scale)\n      svgCanvas.selectAll('text')\n        .data(data).enter()\n        .append('text')\n        .attr('x', (dataPoint, i) => i * 16 + 10)\n        .attr('y', (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n        .text(dataPoint => dataPoint)\n      }\n    render() { return <div ref=\"canvas\"></div> }\n}\n\nconst mapStateToProps = state => {\n  return {\n    chart: state.chart,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getChart: () => dispatch(getChartThunk()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsersThunk, deleteUserThunk } from '../redux/users';\n\nclass AdminDashboard extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n  render() {\n    const users = this.props.users;\n    console.log(this.props)\n    return (\n      <div>\n        <h2>Admin Dashboard</h2>\n        <h3>All users</h3>\n            {users && users.map((user) => {\n              return (\n                <div key={user.id}>\n                  <div>{user.firstName} {user.lastName}</div>\n                   <button\n                    type=\"submit\"\n                    onClick={() => this.props.deleteUser(user.id)}\n                    >\n                      Delete User\n                    </button>\n                </div>\n              )\n            })}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    users: state.users\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => dispatch(getUsersThunk()),\n    deleteUser: (id) => dispatch(deleteUserThunk(id))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminDashboard)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport Conditions from \"./Conditions\";\nimport Medications from \"./Medications\";\nimport { fetchCurrentUser } from \"../redux/auth\";\nimport DailyCheckin from \"./DailyCheckin\";\nimport SingleCondition from \"./SingleCondition\";\nimport Documents from \"./Documents\"\nimport SingleDocument from './SingleDocument'\nimport Profile from \"./Profile\"\nimport AllDoctors from \"./AllDoctors\"\nimport SingleDoctor from \"./SingleDoctor\";\nimport SingleMedication from \"./SingleMedication\";\nimport Navbar from \"./Navbar\";\nimport BarChartCondition from './BarChartCondition'\nimport LineChart from '../components/lineChart/LineChartCondition';\nimport AdminDashboard from './AdminDashboard';\n/* -----------------    COMPONENT     ------------------ */\n\nclass Root extends Component {\n  componentDidMount() {\n    this.props.fetchInitialData();\n  }\n  render() {\n    const { isLoggedIn, currentUser } = this.props;\n    return (\n      <Switch>\n        {/* Routes placed here are available to all visitors */}\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n\n        {isLoggedIn && (\n          <>\n            {/* Routes placed here are only available after logging in */}\n            <Navbar />\n\n            <Route exact path='/' component={Home} />\n            <Route exact path='/dailycheckin' component={DailyCheckin} />\n            <Route exact path='/conditions' component={Conditions} />\n            <Route path='/conditions/:id' component={SingleCondition} />\n            <Route path=\"/medications\" component={Medications} />\n            <Route path=\"/medications/:id\" component={SingleMedication} />\n            <Route path=\"/doctors\" component={AllDoctors} />\n            <Route path=\"/doctors/:id\" component={SingleDoctor} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/documents\" component={Documents} />\n            <Route path=\"/documents/:id\" component={SingleDocument} />\n            <Route path='/chart' component={BarChartCondition} />\n            <Route path='/linechart' component={LineChart} />\n            {\n              currentUser.isAdmin &&\n              <Route path='/admindashboard' component={AdminDashboard} />\n            }\n          </>\n        )}\n\n        {/* Displays our Login component as a fallback */}\n        <Route component={Login} />\n      </Switch>\n    );\n  }\n}\n\n/* -----------------    CONTAINER     ------------------ */\n\nconst mapState = (state) => {\n  return {\n    // Being 'logged in' for our purposes will be defined has having a state.user that has a truthy id.\n    // Otherwise, state.user will be an empty object, and state.user.id will be falsey\n    isLoggedIn: !!state.currentUser.id,\n    currentUser: state.currentUser\n  };\n};\nconst mapDispatch = (dispatch) => ({\n  fetchInitialData: () => {\n    dispatch(fetchCurrentUser());\n  },\n});\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Root));\n","import React from \"react\";\nimport { GoMarkGithub } from \"react-icons/go\";\nimport { AiOutlineLinkedin } from \"react-icons/ai\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        <a href=\"https://github.com/2006-ghp-capstone-team-c/capstone\">\n          <GoMarkGithub color=\"##e36397\" size={32} /> GitHub\n        </a>\n        <>September 2020</>\n      </div>\n      <div id=\"bottomRight\">\n        <div>\n          <a href=\"https://www.linkedin.com/in/meganleaf/\">\n            <AiOutlineLinkedin size={25} /> Megan Leaf\n          </a>\n          <a href=\"https://www.linkedin.com/in/biligma-oyola/\">\n            <AiOutlineLinkedin size={25} />\n            Biligma Oyola\n          </a>\n        </div>\n\n        <div>\n          <a href=\"https://www.linkedin.com/in/emma-seely-katz-b4386a1a3/\">\n            <AiOutlineLinkedin size={25} /> Emma Seely-Katz\n          </a>\n          <a href=\"https://www.linkedin.com/in/loowang/\">\n            <AiOutlineLinkedin size={25} /> Lu Wang\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./store\";\nimport Root from \"./components/Root\";\nimport Footer from \"./components/Footer\";\nimport * as serviceWorker from './serviceWorker';\nimport './style.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Root />\n      <Footer />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}